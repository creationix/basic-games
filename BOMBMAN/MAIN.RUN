RANDOMIZE TIMER
RESTORE 5
5
DIM RO$(7, 8)
DATA "W","S","A","D","`"," "
DATA "8","2","4","6","+","0"
DATA HIT1,HIT2,HIT6,HIT7,HIT3,HIT4,HIT5
DATA WALL1,WALL2,WALL6,WALL7,WALL3,WALL4,WALL5
DATA EE2,EE1,EE3,EEE2,EEE1,EEE3,M1,M1
DATA ENEMY1,TAG,ENEMY2,M1,M1,M1,M1,M1
DATA CHUNG5,CHUNG2,CHUNG3,CHUNG4,CHUNG1,CHUNG6,M1,M1
DATA SUPER1,SUPER2,SUPER3,SUPER4,SUPER5,SUPER6,SUPER7,SUPER8
DATA WOI5,WOI6,WOI7,WOI1,WOI2,WOI3,WOI4,WOI8
DATA E2,E1,E3,E4,E5,M1,M1,M1
DATA FULL1,52,53,54,55,56,57,58
FOR EX = 1 TO 2
READ U$(EX)
READ D$(EX)
READ L$(EX)
READ R$(EX)
READ A$(EX)
READ B$(EX)
NEXT EX
FOR EX = 1 TO 7: READ HIT$(EX): NEXT EX
FOR EX = 1 TO 7: READ WALL$(EX): NEXT EX
FOR X = 1 TO 7
FOR Y = 1 TO 8
READ RO$(X, Y)
NEXT Y
NEXT X
B$(1) = CHR$(9)
U$(4) = CHR$(0) + "H"
D$(4) = CHR$(0) + "P"
L$(4) = CHR$(0) + "K"
R$(4) = CHR$(0) + "M"
A$(4) = CHR$(0) + CHR$(83)
B$(4) = CHR$(0) + CHR$(79)
U$(3) = "I"
D$(3) = "K"
L$(3) = "J"
R$(3) = "L"
A$(3) = "/"
B$(3) = "."
SCREEN 13
PlayMODE = POINT(0, 0)
Players = POINT(0, 1)
ROUND = POINT(0, 2)
COON = POINT(0, 3)
ST = POINT(0, 4)
IF ROUND = 0 THEN ROUND = 1
IF ROUND = 8 THEN CHAIN "JOY.GRH"
IF PlayMODE = 2 THEN ROUND = INT(RND * 5) + 1
IF Players = 0 THEN CHAIN "BOMB.BAS"
SCREEN 13
DIM B1(1 TO 120), B2(1 TO 120), B3(1 TO 120), WA(1 TO 120), GR(1 TO 120), FORM(5, 3), FULL1(1 TO 120), FULL2(1 TO 120)
DIM M1(1 TO 120), M2(1 TO 120), M3(1 TO 120), MAP$(16, 10), HI(1 TO 120), EAT6(1 TO 120), FULL3(1 TO 120)
DIM L1(1 TO 120), L2(1 TO 120), L3(1 TO 120), FACE(4), MAP(16, 10), EAT3(1 TO 120), EAT5(1 TO 120)
DIM R1(1 TO 120), R2(1 TO 120), R3(1 TO 120), EAT1(1 TO 120), EAT(16, 10), EAT4(1 TO 120)
DIM U1(1 TO 120), U2(1 TO 120), U3(1 TO 120), EAT2(1 TO 120), ERRO(255), DIED1(1 TO 120)
DIM CB1(1 TO 120), CB2(1 TO 120), CB3(1 TO 120), DIR(50), KICK(16, 10), MAN(16, 10), MAP2$(16, 10)
DIM X(4), Y(4), F(4), XX(4), BX(50), BY(50), BE(50), C(0 TO 30), FI(4), FL(50), EAT7(1 TO 120)
DIM BEX(50), BEY(50), BELONG(50), LO(50), EAT8(1 TO 120), DOCON(15), DOING(15)
DIM DI(50, 4), CHA1(1 TO 120), CHA2(1 TO 120), CHA3(1 TO 120), BELO(15), DX(15), DY(15)
DIM DO1(1 TO 120), DO2(1 TO 120), DO3(1 TO 120), DO4(1 TO 120), DOOR(1 TO 120), DANGER(16, 10)
DIM PA1(1 TO 120), PA2(1 TO 120), AIM(15), TYPES(15), BOO1(1 TO 120), BOO2(1 TO 120), BOO3(1 TO 120)
DIM ENE1(1 TO 120), ENE2(1 TO 120), ENE3(1 TO 120), ENE4(1 TO 120), ENE5(1 TO 120), ENE6(1 TO 120), ENE7(1 TO 120), ENE8(1 TO 120)
DIM OBO1(1 TO 120), OBO2(1 TO 120), OBO3(1 TO 120), OBO4(1 TO 120), FDI(11)
LINE (1, 1)-(20, 20), 40, BF: GET (1, 1)-(20, 20), CHA1
LINE (1, 1)-(20, 20), 80, BF: GET (1, 1)-(20, 20), CHA2
LINE (1, 1)-(20, 20), 140, BF: GET (1, 1)-(20, 20), CHA3: CLS
DEF SEG = VARSEG(DOOR(1)): BLOAD "DOOR.GRH", VARPTR(DOOR(1))
DEF SEG = VARSEG(DIED1(1)): BLOAD "DIED.GRH", VARPTR(DIED1(1))
DEF SEG = VARSEG(EAT1(1)): BLOAD "EAT1.GRH", VARPTR(EAT1(1))
DEF SEG = VARSEG(EAT2(1)): BLOAD "EAT2.GRH", VARPTR(EAT2(1))
DEF SEG = VARSEG(EAT3(1)): BLOAD "EAT3.GRH", VARPTR(EAT3(1))
DEF SEG = VARSEG(EAT4(1)): BLOAD "EAT4.GRH", VARPTR(EAT4(1))
DEF SEG = VARSEG(EAT5(1)): BLOAD "EAT5.GRH", VARPTR(EAT5(1))
DEF SEG = VARSEG(EAT6(1)): BLOAD "EAT6.GRH", VARPTR(EAT6(1))
DEF SEG = VARSEG(EAT7(1)): BLOAD "EAT7.GRH", VARPTR(EAT7(1))
DEF SEG = VARSEG(EAT8(1)): BLOAD "EAT8.GRH", VARPTR(EAT8(1))
DEF SEG = VARSEG(M1(1)): BLOAD "M1.GRH", VARPTR(M1(1))
DEF SEG = VARSEG(M2(1)): BLOAD "M2.GRH", VARPTR(M2(1))
DEF SEG = VARSEG(M3(1)): BLOAD "M3.GRH", VARPTR(M3(1))
DEF SEG = VARSEG(L1(1)): BLOAD "L1.GRH", VARPTR(L1(1))
DEF SEG = VARSEG(L2(1)): BLOAD "L2.GRH", VARPTR(L2(1))
DEF SEG = VARSEG(L3(1)): BLOAD "L3.GRH", VARPTR(L3(1))
DEF SEG = VARSEG(R1(1)): BLOAD "R1.GRH", VARPTR(R1(1))
DEF SEG = VARSEG(R2(1)): BLOAD "R2.GRH", VARPTR(R2(1))
DEF SEG = VARSEG(R3(1)): BLOAD "R3.GRH", VARPTR(R3(1))
DEF SEG = VARSEG(U1(1)): BLOAD "B1.GRH", VARPTR(U1(1))
DEF SEG = VARSEG(U2(1)): BLOAD "B2.GRH", VARPTR(U2(1))
DEF SEG = VARSEG(U3(1)): BLOAD "B3.GRH", VARPTR(U3(1))
DEF SEG = VARSEG(B1(1)): BLOAD "BO1.GRH", VARPTR(B1(1))
DEF SEG = VARSEG(B2(1)): BLOAD "BO2.GRH", VARPTR(B2(1))
DEF SEG = VARSEG(B3(1)): BLOAD "BO3.GRH", VARPTR(B3(1))
DEF SEG = VARSEG(BOO1(1)): BLOAD "SUB1.GRH", VARPTR(BOO1(1))
DEF SEG = VARSEG(BOO2(1)): BLOAD "SUB2.GRH", VARPTR(BOO2(1))
DEF SEG = VARSEG(BOO3(1)): BLOAD "SUB3.GRH", VARPTR(BOO3(1))
DEF SEG = VARSEG(OBO1(1)): BLOAD "FIRE1.GRH", VARPTR(OBO1(1))
DEF SEG = VARSEG(OBO2(1)): BLOAD "FIRE2.GRH", VARPTR(OBO2(1))
DEF SEG = VARSEG(OBO3(1)): BLOAD "FIRE3.GRH", VARPTR(OBO3(1))
DEF SEG = VARSEG(OBO4(1)): BLOAD "FIRE4.GRH", VARPTR(OBO4(1))
DEF SEG = VARSEG(DO1(1)): BLOAD "DOI1.GRH", VARPTR(DO1(1))
DEF SEG = VARSEG(DO2(1)): BLOAD "DOI2.GRH", VARPTR(DO2(1))
DEF SEG = VARSEG(DO3(1)): BLOAD "DOI3.GRH", VARPTR(DO3(1))
DEF SEG = VARSEG(DO4(1)): BLOAD "DOI4.GRH", VARPTR(DO4(1))
DEF SEG = VARSEG(PA1(1)): BLOAD "PAKK1.GRH", VARPTR(PA1(1))
DEF SEG = VARSEG(PA2(1)): BLOAD "PAKK2.GRH", VARPTR(PA2(1))
DEF SEG = VARSEG(CB1(1)): BLOAD "COBO1.GRH", VARPTR(CB1(1))
DEF SEG = VARSEG(CB2(1)): BLOAD "COBO2.GRH", VARPTR(CB2(1))
DEF SEG = VARSEG(CB3(1)): BLOAD "COBO3.GRH", VARPTR(CB3(1))
DEF SEG = VARSEG(FULL1(1)): BLOAD "51.GRH", VARPTR(FULL1(1))
DEF SEG = VARSEG(FULL2(1)): BLOAD "FULL2.GRH", VARPTR(FULL2(1))
DEF SEG = VARSEG(FULL3(1)): BLOAD "FULL3.GRH", VARPTR(FULL3(1))
DEF SEG = VARSEG(GR(1)): BLOAD "GROUND.GRH", VARPTR(GR(1))
DEF SEG
ERRO(ASC("B")) = -1: ERRO(ASC("0")) = 1: ERRO(ASC("~")) = 2: ERRO(ASC("!")) = 2: ERRO(ASC("@")) = 2: ERRO(ASC("#")) = 2: ERRO(ASC("$")) = 2: ERRO(ASC("%")) = 2: ERRO(ASC("^")) = 2: ERRO(ASC("&")) = 2
C(0) = 0: C(1) = 460557: C(2) = 856606: C(3) = 1318445: C(4) = 2370616
C(5) = (63 * 65793): C(6) = 45: C(7) = 1315604: C(8) = 3543820: C(9) = 1520918
C(10) = 50: C(11) = 141370: C(12) = 1317660: C(13) = 2621440: C(14) = 2625038
C(15) = (63 * 65793): C(16) = 2627865: C(17) = 3025193: C(18) = 60
C(19) = 16191: C(20) = 256 * 40: C(21) = 6975: C(23) = 20 * TY2
PUN(0) = C(15): PUN(1) = C(17)
FOR EX = 1 TO 23
PALETTE EX, C(EX)
NEXT EX
DEF SEG = VARSEG(WA(1)): BLOAD WALL$(ROUND) + ".GRH", VARPTR(WA(1))
DEF SEG = VARSEG(HI(1)): BLOAD HIT$(ROUND) + ".GRH", VARPTR(HI(1))
IF PlayMODE = 2 THEN ROUU = ROUND: ROUND = 2
DEF SEG = VARSEG(ENE1(1)): BLOAD RO$(ROUND, 1) + ".GRH", VARPTR(ENE1(1))
DEF SEG = VARSEG(ENE2(1)): BLOAD RO$(ROUND, 2) + ".GRH", VARPTR(ENE2(1))
DEF SEG = VARSEG(ENE3(1)): BLOAD RO$(ROUND, 3) + ".GRH", VARPTR(ENE3(1))
DEF SEG = VARSEG(ENE4(1)): BLOAD RO$(ROUND, 4) + ".GRH", VARPTR(ENE4(1))
DEF SEG = VARSEG(ENE5(1)): BLOAD RO$(ROUND, 5) + ".GRH", VARPTR(ENE5(1))
DEF SEG = VARSEG(ENE6(1)): BLOAD RO$(ROUND, 6) + ".GRH", VARPTR(ENE6(1))
DEF SEG = VARSEG(ENE7(1)): BLOAD RO$(ROUND, 7) + ".GRH", VARPTR(ENE7(1))
DEF SEG = VARSEG(ENE8(1)): BLOAD RO$(ROUND, 8) + ".GRH", VARPTR(ENE8(1))
IF PlayMODE = 2 THEN ROUND = ROUU
DEF SEG
KOL(1) = 65536: KOL(2) = 256: KOL(3) = 65792: KOL(4) = 257: KOL(5) = 1: KOL(6) = 65537: KOL(7) = 65793
TY2 = KOL(ROUND)
C(22) = 30 * TY2
FOR EX = 1 TO 5
PALETTE 100 + EX, EX * 10 * TY2
NEXT EX
RESTORE 10
FOR EX2 = 1 TO 3
FOR EX = 1 TO 9
READ A: READ B
PALETTE A, C(B)
NEXT EX
NEXT EX2
IF PlayMODE = 2 THEN RESTORE 20
IF PlayMODE = 1 THEN GOSUB FUNROUND
PALETTE 106, PUN(PUN1): PALETTE 107, PUN(1 - PUN1)
PALETTE 110, 50 * 65793: PALETTE 111, 55 * 65793
FOR Y = 1 TO 9
MAP$(0, Y) = "0": MAP$(16, Y) = "0"
FOR X = 1 TO 15
MAP$(X, 0) = "0": MAP$(X, 10) = "0"
READ MAP$(X, Y)
MAP2$(X, Y) = MAP$(X, Y)
IF MAP$(X, Y) = "z" THEN RR = INT(RND * 5): IF RR > 2 THEN MAP$(X, Y) = "0" ELSE MAP$(X, Y) = "Z"
IF MAP$(X, Y) = "Z" THEN PUT (X * 20 - 10, Y * 20 - 10), HI: POINTS = POINTS + 1
IF MAP$(X, Y) = "R" THEN PUT (X * 20 - 10, Y * 20 - 10), WA
IF MAP$(X, Y) = "0" THEN PUT (X * 20 - 10, Y * 20 - 10), GR
IF MAP$(X, Y) = "D" THEN PUT (X * 20 - 10, Y * 20 - 10), DOOR: MAP$(X, Y) = "R": DKX = X: DKY = Y
IF MAP$(X, Y) = "1" THEN ET = ET + 1: ENX(ET) = X: ENY(ET) = Y: ENEMY(ET) = 1: MAP$(X, Y) = "0": MAN(X, Y) = 1: PUT (X * 20 - 10, Y * 20 - 10), ENE1
IF MAP$(X, Y) = "2" THEN ET = ET + 1: DIY(ET) = 1: ENX(ET) = X: ENY(ET) = Y: ENEMY(ET) = 1: MAP$(X, Y) = "0": MAN(X, Y) = 1: PUT (X * 20 - 10, Y * 20 - 10), ENE4
NEXT X
NEXT Y
IF ROUND = 3 THEN ENX(2) = 8: ENY(2) = 5: ENX(3) = 8: ENY(3) = 5
LINE (0, 0)-(319, 9), 16, BF: LINE (0, 199)-(319, 190), 16, BF
FOR EX = 0 TO 9
LINE (EX, EX)-(EX, 199 - EX), 17
LINE (319 - EX, EX)-(319 - EX, 199 - EX), 14
NEXT EX
X(1) = 1: Y(1) = 1
X(2) = 15: Y(2) = 9
X(3) = 1: Y(3) = 9
X(4) = 15: Y(4) = 1
PALETTE 0, 0
PALETTE 1, C(1)
COLOR1(1) = 5
COLOR1(2) = 1
COLOR1(3) = 13
COLOR1(4) = 6
FOR EX = 1 TO 4
FACE(EX) = 1: F(EX) = 1: FI(EX) = 1: MAX(EX) = 1: CO(EX) = 0: LEG(EX) = 0
IF EX <= Players THEN DIED(EX) = -20: MAN(X(EX), Y(EX)) = 1 ELSE DIED(EX) = 41
LINE (65 * EX - 23, 2)-(65 * EX + 19, 2), 14
LINE (65 * EX + 19, 2)-(65 * EX + 19, 5), 13
LINE (65 * EX - 23, 3)-(65 * EX - 23, 6), 16
LINE (65 * EX - 22, 6)-(65 * EX + 19, 6), 17
IF DIED(EX) < 0 THEN LINE (65 * EX - 22, 3)-(65 * EX + 18, 5), COLOR1(EX), BF
NEXT EX
LIFE(1) = 83: LIFE(2) = 148: LIFE(3) = 213: LIFE(4) = 278
DEF SEG = VARSEG(HI(1)): BLOAD "MHIT.GRH", VARPTR(HI(1))
FOR EX = 1 TO 15: B$ = INKEY$: NEXT EX
START:
TTTT = TIMER
LIFE = 0
A$ = INKEY$: B$ = INKEY$: C$ = INKEY$
IF ROUND = 3 THEN PUN1 = 1 - PUN1: PALETTE 106, PUN(PUN1): PALETTE 107, PUN(1 - PUN1)
GOSUB DDDD
FOR A = 1 TO 4
ERRO(ASC("Z")) = 0
IF DIED(A) > 0 THEN GOTO DIED
PLEX = A
MAN(X(A), Y(A)) = MAN(X(A), Y(A)) - 1
IF CO(A) = 2 THEN CO(A) = 1
TRR:
IF MAP(X(A), Y(A)) > 0 OR MAN(X(A), Y(A)) > 50 THEN GOSUB DECREASE
LIFE = LIFE + 1
IF A$ = CHR$(27) OR B$ = CHR$(27) OR C$ = CHR$(27) THEN END
IF ST = A THEN GOSUB STT
IF A$ = D$(A) OR B$ = D$(A) OR C$ = D$(A) OR S1 > 130 AND ST = A THEN IF XX(A) = 0 THEN T(A) = 2: FACE(A) = 1: IF ERRO(ASC(MAP$(X(A), Y(A) + 1))) > 0 THEN YY(A) = YY(A) + 1 ELSE IF MAP$(X(A), Y(A) + 1) = "B" THEN IF LEG(A) > 0 THEN KICK(X(A), Y(A) + _
 1) = FACE(A): SOUND 40, .5
IF A$ = L$(A) OR B$ = L$(A) OR C$ = L$(A) OR S0 < 70 AND ST = A THEN IF YY(A) = 0 THEN T(A) = 2: FACE(A) = 2: IF ERRO(ASC(MAP$(X(A) - 1, Y(A)))) > 0 THEN XX(A) = XX(A) - 1 ELSE IF MAP$(X(A) - 1, Y(A)) = "B" THEN IF LEG(A) > 0 THEN KICK(X(A) - 1, Y(A _
)) = FACE(A): SOUND 40, .5
IF A$ = R$(A) OR B$ = R$(A) OR C$ = R$(A) OR S0 > 130 AND ST = A THEN IF YY(A) = 0 THEN T(A) = 2: FACE(A) = 3: IF ERRO(ASC(MAP$(X(A) + 1, Y(A)))) > 0 THEN XX(A) = XX(A) + 1 ELSE IF MAP$(X(A) + 1, Y(A)) = "B" THEN IF LEG(A) > 0 THEN KICK(X(A) + 1, Y( _
A)) = FACE(A): SOUND 40, .5
IF A$ = U$(A) OR B$ = U$(A) OR C$ = U$(A) OR S1 < 70 AND ST = A THEN IF XX(A) = 0 THEN T(A) = 2: FACE(A) = 4: IF ERRO(ASC(MAP$(X(A), Y(A) - 1))) > 0 THEN YY(A) = YY(A) - 1 ELSE IF MAP$(X(A), Y(A) - 1) = "B" THEN IF LEG(A) > 0 THEN KICK(X(A), Y(A) -  _
1) = FACE(A): SOUND 40, .5
IF A$ = A$(A) OR B$ = A$(A) OR C$ = A$(A) OR SG0 < 0 AND ST = A THEN IF MAX(A) > 0 AND MAP$(X(A), Y(A)) = "0" AND MAP(X(A), Y(A)) = 0 THEN MAX(A) = MAX(A) - 1: BX(BB) = X(A): BELONG(BB) = A: BY(BB) = Y(A): BE(BB) = 25: FL(BB) = FI(A): MAP$(BX(BB),  _
BY(BB)) = "B": BB = BB + 1: SOU = 1
IF A$ = B$(A) OR B$ = B$(A) OR C$ = B$(A) OR SG4 < 0 AND ST = A THEN IF TYR = 0 AND CO(A) > 0 THEN GOSUB CONTROL
IF T(A) > 0 THEN F(A) = F(A) + 1: T(A) = T(A) - 1
IF BB > 50 THEN BB = 1
IF F(A) = 4 THEN F(A) = 0
GOSUB RBODY
IF ERRO(ASC(MAP$(X(A), Y(A)))) = 2 THEN GOSUB EATING
IF MAP(X(A), Y(A)) > 0 OR MAN(X(A), Y(A)) > 50 THEN GOSUB DECREASE

IF DIED(A) > 0 THEN XX(A) = 0: YY(A) = 0
IF YY(A) > 0 THEN Y(A) = Y(A) + 1
IF YY(A) < 0 THEN Y(A) = Y(A) - 1
IF XX(A) > 0 THEN X(A) = X(A) + 1
IF XX(A) < 0 THEN X(A) = X(A) - 1
YY(A) = 0: XX(A) = 0
IF X(A) < 1 THEN X(A) = 1
IF X(A) > 15 THEN X(A) = 15
IF Y(A) < 1 THEN Y(A) = 1
IF Y(A) > 9 THEN Y(A) = 9
GOSUB BODY
IF DIED(A) < 1 THEN MAN(X(A), Y(A)) = MAN(X(A), Y(A)) + 1
BEFORE:
NEXT A
FOR A = 1 TO 15
IF DOING(A) > 0 THEN GOSUB GUN
NEXT A
IF LIFE = 0 THEN TYR = TYR + 1
IF TYR > 30 THEN GOTO DRAWG
IF LIFE = 1 AND PlayMODE = 2 AND ENEMY(1) = 0 THEN TYR = TYR + 1: IF TYR > 25 THEN GOTO WINING
IF ET = 0 AND PlayMODE = 1 THEN TYR = TYR + 1: IF TYR > 25 THEN GOTO WINING2
IF SOU > 0 THEN GOSUB SOUND1
FOR BB2 = 0 TO 50
IF BE(BB2) > 0 THEN GOSUB BOC
NEXT BB2
GOSUB ENEMYS
IF DKX > 0 THEN DKZ = DKZ + 1: IF DKZ > 100 THEN PUT (DKX * 20 - 10, DKY * 20 - 10), GR, PSET: MAP$(DKX, DKY) = "0": DKX = 0: SOU = 10
TTTT:
IF TIMER - TTTT > .15 THEN GOTO START
GOTO TTTT
BODY:
IF MAP$(X(A), Y(A)) = "R" THEN RETURN
IF FACE(A) = 1 THEN GOSUB FRONT
IF FACE(A) = 2 THEN GOSUB LEFT
IF FACE(A) = 3 THEN GOSUB RIGHT
IF FACE(A) = 4 THEN GOSUB BACK
IF A = 2 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), CHA2
IF A = 3 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), CHA3
IF A = 4 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), CHA1
RETURN
RBODY:
IF MAP$(X(A), Y(A)) = "R" THEN RETURN
IF MAP(X(A), Y(A)) > 0 THEN RETURN
RX = 0: RY = 0
IF X(A) <> INT(X(A)) THEN RX = INT(X(A))
IF Y(A) <> INT(Y(A)) THEN RY = INT(Y(A))
IF RY = 0 AND RX = 0 AND MAP$(X(A), Y(A)) <> "Z" THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), GR, PSET
IF RY = 0 AND RX = 0 AND MAP$(X(A), Y(A)) = "Z" THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), HI, PSET
RETURN
10
DATA 46,6,47,0,43,3,44,4,32,1,56,6,57,10,45,18,79,22
DATA 86,6,87,1,83,3,84,4,88,0,64,0,65,1,85,7,55,22
DATA 138,6,139,1,143,3,136,4,132,0,156,0,157,13,137,8,235,22
20
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z,Z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
30               
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA Z,Z,Z,Z,Z,0,1,2,1,0,Z,Z,Z,Z,Z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
40
DATA 0,0,Z,0,0,0,Z,Z,Z,0,0,0,Z,0,0
DATA 0,R,Z,R,0,R,Z,R,Z,R,0,R,Z,R,0
DATA Z,Z,Z,0,Z,0,Z,Z,Z,0,Z,0,Z,Z,Z
DATA 0,R,0,R,0,R,Z,R,Z,R,0,R,0,R,0
DATA Z,Z,Z,Z,Z,Z,1,Z,1,Z,Z,Z,Z,Z,Z
DATA 0,R,0,R,0,R,Z,R,Z,R,0,R,0,R,0
DATA Z,Z,Z,0,Z,0,Z,Z,Z,0,Z,0,Z,Z,Z
DATA 0,R,Z,R,0,R,Z,R,Z,R,0,R,Z,R,0
DATA 0,0,Z,0,0,0,Z,Z,Z,0,0,0,Z,0,0
50
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA Z,Z,Z,Z,Z,Z,Z,1,Z,Z,Z,Z,Z,Z,Z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
60
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA Z,Z,Z,Z,Z,Z,0,1,0,Z,Z,Z,Z,Z,Z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
70
DATA 0,0,z,z,z,z,z,Z,z,z,z,0,z,0,0
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA z,R,z,R,z,R,0,R,0,R,z,R,z,R,z
DATA Z,Z,Z,Z,Z,0,0,1,0,0,Z,Z,Z,Z,Z
DATA z,R,z,R,z,R,0,R,0,R,z,R,z,R,z
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
80
DATA 0,0,Z,z,Z,z,Z,z,Z,z,Z,z,Z,0,0
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA Z,z,Z,z,Z,z,Z,z,Z,z,Z,z,Z,z,Z
DATA z,R,z,R,z,R,0,R,0,R,z,R,z,R,z
DATA Z,z,Z,z,Z,0,0,1,0,0,Z,z,Z,z,Z
DATA z,R,z,R,z,R,0,R,0,R,z,R,z,R,z
DATA Z,z,Z,z,Z,z,Z,z,Z,z,Z,z,Z,z,Z
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA 0,0,Z,z,Z,z,Z,z,Z,z,Z,z,Z,0,0
90            
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA Z,Z,Z,Z,Z,0,1,1,1,0,Z,Z,Z,Z,Z
DATA z,R,z,R,z,R,z,R,z,R,z,R,z,R,z
DATA z,z,z,z,z,z,z,Z,z,z,z,z,z,z,z
DATA 0,R,z,R,z,R,z,R,z,R,z,R,z,R,0
DATA 0,0,z,z,z,z,z,Z,z,z,z,z,z,0,0
BOMB:
IF BE(BB2) > 25 AND DIR(BB2) = 0 THEN RETURN
IF BELONG(BB2) = 5 THEN GOTO COBOMB2
IF CO(BELONG(BB2)) > 0 AND CO(BELONG(BB2)) < 3 THEN GOTO COBOMB
IF DIR(BB2) > 0 THEN GOSUB FLOW
IF BE(BB2) = 0 THEN RETURN
IF (Z + 2) / 4 = INT((Z + 2) / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), B1, PSET
IF (Z + 3) / 4 = INT((Z + 3) / 4) OR (Z + 1) / 4 = INT((Z + 1) / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), B2, PSET
IF Z / 4 = INT(Z / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), B3, PSET
RETURN
EXPL:
U = 0: D = 0: L = 0: R = 0
EXF = FL(BB2)
IF FL(BB2) > 19 THEN EXF = 2
IF FL(BB2) > 100 THEN EXF = -1
FOR EX = 1 TO 4: DI(BB2, EX) = -1: NEXT EX
FOR EX = 0 TO 1 + EXF
IF U = 0 THEN DI(BB2, 1) = ZY - EX
IF L = 0 THEN DI(BB2, 2) = ZX - EX
IF R = 0 THEN DI(BB2, 3) = ZX + EX
IF D = 0 THEN DI(BB2, 4) = ZY + EX
IF U = 0 AND ZY - EX > 0 THEN MAP(ZX, ZY - EX) = MAP(ZX, ZY - EX) + 1
IF L = 0 AND ZX - EX > 0 AND EX > 0 THEN MAP(ZX - EX, ZY) = MAP(ZX - EX, ZY) + 1
IF R = 0 AND ZX + EX < 16 AND EX > 0 THEN MAP(ZX + EX, ZY) = MAP(ZX + EX, ZY) + 1
IF D = 0 AND ZY + EX < 10 AND EX > 0 THEN MAP(ZX, ZY + EX) = MAP(ZX, ZY + EX) + 1
IF FL(BB2) > 19 AND EX = 0 THEN GOSUB MFIRE
IF U = 0 AND ZY - EX > 0 THEN IF ERRO(ASC(MAP$(ZX, ZY - EX))) = 2 AND MAP(ZX, ZY - EX) = 1 THEN U = 1: MAP$(ZX, ZY - EX) = "'"
IF L = 0 AND ZX - EX > 0 THEN IF ERRO(ASC(MAP$(ZX - EX, ZY))) = 2 AND MAP(ZX - EX, ZY) = 1 THEN L = 1: MAP$(ZX - EX, ZY) = "'"
IF R = 0 AND ZX + EX < 16 THEN IF ERRO(ASC(MAP$(ZX + EX, ZY))) = 2 AND MAP(ZX + EX, ZY) = 1 THEN R = 1: MAP$(ZX + EX, ZY) = "'"
IF D = 0 AND ZY + EX < 10 THEN IF ERRO(ASC(MAP$(ZX, ZY + EX))) = 2 AND MAP(ZX, ZY + EX) = 1 THEN D = 1: MAP$(ZX, ZY + EX) = "'"
IF U = 0 AND ZY - EX > 0 THEN IF MAP$(ZX, ZY - EX) = "Z" THEN EAT(ZX, ZY - EX) = 1: U = 1 ELSE IF MAP$(ZX, ZY - EX - 1) = "R" THEN U = 1
IF L = 0 AND ZX - EX > 0 THEN IF MAP$(ZX - EX, ZY) = "Z" THEN EAT(ZX - EX, ZY) = 1: L = 1 ELSE IF MAP$(ZX - EX - 1, ZY) = "R" THEN L = 1
IF R = 0 AND ZX + EX < 16 THEN IF MAP$(ZX + EX, ZY) = "Z" THEN EAT(ZX + EX, ZY) = 1: R = 1 ELSE IF MAP$(ZX + EX + 1, ZY) = "R" THEN R = 1
IF D = 0 AND ZY + EX < 10 THEN IF MAP$(ZX, ZY + EX) = "Z" THEN EAT(ZX, ZY + EX) = 1: D = 1 ELSE IF MAP$(ZX, ZY + EX + 1) = "R" THEN D = 1
NEXT EX
IF DI(BB2, 1) < 1 THEN DI(BB2, 1) = 1
IF DI(BB2, 2) < 1 THEN DI(BB2, 2) = 1
IF DI(BB2, 3) > 15 THEN DI(BB2, 3) = 15
IF DI(BB2, 4) > 9 THEN DI(BB2, 4) = 9
RETURN
EXPL2:
IF BE(BB2) = 1 THEN GOTO EXPL3
BC(2) = 6: BC(3) = 21: BC(4) = 19: BC(5) = 15
IF BELONG(BB2) = 5 THEN BC(2) = 20: BC(3) = 9: BC(4) = 19: BC(5) = 15
LINE (ZX * 20 - 10, DI(BB2, 1) * 20 - 10)-(ZX * 20 + 9, DI(BB2, 4) * 20 + 9), 103, BF
LINE (DI(BB2, 2) * 20 - 10, ZY * 20 - 10)-(DI(BB2, 3) * 20 + 9, ZY * 20 + 9), 103, BF
FOR EX = 2 TO 5
TT = 6 - BE(BB2) * 10 / 6
IF FL(BB2) <> 40 AND FL(BB2) <> 160 AND FL(BB2) <> 140 AND FL(BB2) <> 60 THEN LINE (ZX * 20 - 10 + EX + TT, DI(BB2, 1) * 20 - 10)-(ZX * 20 + 9 - EX - TT, DI(BB2, 4) * 20 + 9), BC(EX), BF
IF FL(BB2) <> 20 AND FL(BB2) <> 120 AND FL(BB2) <> 180 AND FL(BB2) <> 80 THEN LINE (DI(BB2, 2) * 20 - 10, ZY * 20 - 10 + EX + TT)-(DI(BB2, 3) * 20 + 9, ZY * 20 + 9 - EX - TT), BC(EX), BF
NEXT EX
RETURN
EXPL3:
MAP(ZX, ZY) = MAP(ZX, ZY) + 1
FOR TX = DI(BB2, 2) * 20 - 10 TO DI(BB2, 3) * 20 - 10 STEP 20
RT = 0
IF MAP((TX + 10) / 20, ZY) = 1 THEN PUT (TX, ZY * 20 - 10), GR, PSET
IF ERRO(ASC(MAP$((TX + 10) / 20, ZY))) = 2 THEN GX = TX: GY = ZY * 20 - 10: GOSUB EAT2
MAP((TX + 10) / 20, ZY) = MAP((TX + 10) / 20, ZY) - 1
IF EAT((TX + 10) / 20, ZY) = 1 THEN RT = INT(RND * 10) + 1: EAT((TX + 10) / 20, ZY) = 0: POINTS = POINTS - 1
IF RT < 6 AND ERRO(ASC(MAP$((TX + 10) / 20, ZY))) <> 2 THEN MAP$((TX + 10) / 20, ZY) = "0" ELSE GOSUB EATY
NEXT TX
FOR TY = DI(BB2, 1) * 20 - 10 TO DI(BB2, 4) * 20 - 10 STEP 20
RT = 0
IF MAP(ZX, (TY + 10) / 20) = 1 THEN PUT (ZX * 20 - 10, TY), GR, PSET
IF ERRO(ASC(MAP$(ZX, (TY + 10) / 20))) = 2 THEN GX = ZX * 20 - 10: GY = TY: GOSUB EAT2
MAP(ZX, (TY + 10) / 20) = MAP(ZX, (TY + 10) / 20) - 1
IF EAT(ZX, (TY + 10) / 20) = 1 THEN RT = INT(RND * 10) + 1: EAT(ZX, (TY + 10) / 20) = 0: POINTS = POINTS - 1
IF RT < 6 AND ERRO(ASC(MAP$(ZX, (TY + 10) / 20))) <> 2 THEN MAP$(ZX, (TY + 10) / 20) = "0" ELSE GOSUB EATX
NEXT TY
IF BE(BB2) = 1 THEN BE(BB2) = 0
RETURN
BOC:
Z = BE(BB2): ZX = BX(BB2): ZY = BY(BB2)
IF BE(BB2) = 26 THEN SOU = 5
IF KICK(ZX, ZY) > 0 THEN DIR(BB2) = KICK(ZX, ZY): KICK(ZX, ZY) = 0
IF BE(BB2) > 6 AND MAP(ZX, ZY) = 0 THEN GOSUB BOMB
BE(BB2) = BE(BB2) - 1
IF CO(BELONG(BB2)) = 2 AND BE(BB2) > 5 AND BE(BB2) < 26 THEN BE(BB2) = 5
IF CO(BELONG(BB2)) = 1 OR TYR > 0 THEN IF BE(BB2) < 18 AND BE(BB2) > 8 AND BE(BB2) < 26 THEN BE(BB2) = 25
IF MAP(ZX, ZY) > 0 AND BE(BB2) > 5 THEN BE(BB2) = 6
IF BE(BB2) = 5 THEN DIR(BB2) = 0: MAX(BELONG(BB2)) = MAX(BELONG(BB2)) + 1: SOUND 40, .3: SOUND 60, 1: MAP$(ZX, ZY) = "0": GOSUB EXPL
IF BE(BB2) < 6 AND BE(BB2) > 0 THEN GOSUB EXPL2
BX(BB2) = ZX: BY(BB2) = ZY
RETURN
FRONT:
IF F(A) = 0 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), M1, PSET
IF F(A) = 1 OR F(A) = 3 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), M2, PSET
IF F(A) = 2 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), M3, PSET
RETURN
LEFT:
IF F(A) = 0 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), L2, PSET
IF F(A) = 1 OR F(A) = 3 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), L1, PSET
IF F(A) = 2 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), L3, PSET
RETURN
RIGHT:
IF F(A) = 0 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), R2, PSET
IF F(A) = 1 OR F(A) = 3 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), R1, PSET
IF F(A) = 2 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), R3, PSET
RETURN
BACK:
IF F(A) = 0 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), U1, PSET
IF F(A) = 1 OR F(A) = 3 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), U2, PSET
IF F(A) = 2 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), U3, PSET
RETURN
EATY:
IF RT = 10 THEN RT = INT(RND * 5) + 10
IF RT = 6 OR RT = 7 THEN PUT (TX, ZY * 20 - 10), EAT1, PSET: MAP$((TX + 10) / 20, ZY) = "~"
IF RT = 8 THEN PUT (TX, ZY * 20 - 10), EAT2, PSET: MAP$((TX + 10) / 20, ZY) = "!"
IF RT = 9 THEN PUT (TX, ZY * 20 - 10), EAT4, PSET: MAP$((TX + 10) / 20, ZY) = "#"
IF RT = 10 THEN PUT (TX, ZY * 20 - 10), EAT3, PSET: MAP$((TX + 10) / 20, ZY) = "@"
IF RT = 11 THEN PUT (TX, ZY * 20 - 10), EAT5, PSET: MAP$((TX + 10) / 20, ZY) = "$"
IF RT = 12 THEN PUT (TX, ZY * 20 - 10), EAT6, PSET: MAP$((TX + 10) / 20, ZY) = "%"
IF RT = 13 THEN PUT (TX, ZY * 20 - 10), EAT7, PSET: MAP$((TX + 10) / 20, ZY) = "^"
IF RT = 14 THEN PUT (TX, ZY * 20 - 10), EAT8, PSET: MAP$((TX + 10) / 20, ZY) = "&"
RETURN
EATX:
IF RT = 10 THEN RT = INT(RND * 5) + 10
IF RT = 6 OR RT = 7 THEN PUT (ZX * 20 - 10, TY), EAT1, PSET: MAP$(ZX, (TY + 10) / 20) = "~"
IF RT = 8 THEN PUT (ZX * 20 - 10, TY), EAT2, PSET: MAP$(ZX, (TY + 10) / 20) = "!"
IF RT = 9 THEN PUT (ZX * 20 - 10, TY), EAT4, PSET: MAP$(ZX, (TY + 10) / 20) = "#"
IF RT = 10 THEN PUT (ZX * 20 - 10, TY), EAT3, PSET: MAP$(ZX, (TY + 10) / 20) = "@"
IF RT = 11 THEN PUT (ZX * 20 - 10, TY), EAT5, PSET: MAP$(ZX, (TY + 10) / 20) = "$"
IF RT = 12 THEN PUT (ZX * 20 - 10, TY), EAT6, PSET: MAP$(ZX, (TY + 10) / 20) = "%"
IF RT = 13 THEN PUT (ZX * 20 - 10, TY), EAT7, PSET: MAP$(ZX, (TY + 10) / 20) = "^"
IF RT = 14 THEN PUT (ZX * 20 - 10, TY), EAT8, PSET: MAP$(ZX, (TY + 10) / 20) = "&"
RETURN
EAT2:
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "~" THEN PUT (GX, GY), EAT1, PSET
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "!" THEN PUT (GX, GY), EAT2, PSET
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "@" THEN PUT (GX, GY), EAT3, PSET
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "#" THEN PUT (GX, GY), EAT4, PSET
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "$" THEN PUT (GX, GY), EAT5, PSET
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "%" THEN PUT (GX, GY), EAT6, PSET
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "^" THEN PUT (GX, GY), EAT7, PSET
IF MAP$((GX + 10) / 20, (GY + 10) / 20) = "&" THEN PUT (GX, GY), EAT8, PSET
RETURN
DDDD:
RETURN
FOR RY = 1 TO 9
FOR RX = 1 TO 15
LINE (RX * 4, RY * 4)-(RX * 4 + 3, RY * 4 + 3), MAP(RX, RY), BF
NEXT RX
NEXT RY
RETURN
EATING:
SOU = 3
IF MAP$(X(A), Y(A)) = "~" THEN MAX(A) = MAX(A) + 5
IF MAP$(X(A), Y(A)) = "!" THEN FI(A) = FI(A) + 5
IF MAP$(X(A), Y(A)) = "@" THEN CO(A) = 1
IF MAP$(X(A), Y(A)) = "#" THEN LEG(A) = 1
IF MAP$(X(A), Y(A)) = "$" THEN CO(A) = 3
IF MAP$(X(A), Y(A)) = "%" THEN DIED(A) = -20: SOU = 9: LINE (LIFE(A), 3)-(LIFE(A) - 40, 5), COLOR1(A), BF: CO(A) = 0
IF MAP$(X(A), Y(A)) = "^" THEN CO(A) = 40
IF MAP$(X(A), Y(A)) = "&" THEN CO(A) = 5
MAP$(X(A), Y(A)) = "0"
IF FI(A) > 15 THEN FI(A) = 15
RETURN
COBOMB:
IF BE(BB2) > 25 AND DIR(BB2) = 0 THEN RETURN
IF DIR(BB2) > 0 THEN GOSUB FLOW
IF BE(BB2) = 0 THEN RETURN
IF (Z + 2) / 4 = INT((Z + 2) / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), CB3, PSET
IF (Z + 3) / 4 = INT((Z + 3) / 4) OR (Z + 1) / 4 = INT((Z + 1) / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), CB2, PSET
IF Z / 4 = INT(Z / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), CB1, PSET
RETURN
COBOMB2:
IF BE(BB2) > 25 AND DIR(BB2) = 0 THEN RETURN
IF DIR(BB2) > 0 THEN GOSUB FLOW
IF BE(BB2) = 0 THEN RETURN
IF (Z + 2) / 4 = INT((Z + 2) / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), BOO3, PSET
IF (Z + 3) / 4 = INT((Z + 3) / 4) OR (Z + 1) / 4 = INT((Z + 1) / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), BOO2, PSET
IF Z / 4 = INT(Z / 4) THEN PUT (ZX * 20 - 10, ZY * 20 - 10), BOO1, PSET
RETURN
DIED:
FACE(A) = FACE(A) + 1: IF FACE(A) > 4 THEN FACE(A) = 1
DIED(A) = DIED(A) + 1
IF DIED(A) < 15 THEN GOSUB BODY: GOTO BEFORE
IF DIED(A) > 40 THEN GOTO BEFORE
IF MAP$(X(A), Y(A)) <> "'" AND MAP$(X(A), Y(A)) <> "R" THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), DIED1, PSET
IF MAP$(X(A), Y(A)) <> "'" AND MAP$(X(A), Y(A)) <> "R" THEN IF A = 2 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), CHA2
IF MAP$(X(A), Y(A)) <> "'" AND MAP$(X(A), Y(A)) <> "R" THEN IF A = 3 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), CHA3
IF MAP$(X(A), Y(A)) <> "'" AND MAP$(X(A), Y(A)) <> "R" THEN IF A = 4 THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), CHA1
IF MAP$(X(A), Y(A)) <> "'" AND MAP$(X(A), Y(A)) <> "R" THEN IF DIED(A) > 20 AND DIED(A) / 2 = INT(DIED(A) / 2) THEN PUT (X(A) * 20 - 10, Y(A) * 20 - 10), GR, PSET
GOTO BEFORE
FLOW:
MAP$(ZX, ZY) = "0"
PUT (ZX * 20 - 10, ZY * 20 - 10), GR, PSET
IF DIR(BB2) = 4 THEN ZY = ZY - 1: IF ZY < 1 OR ERRO(ASC(MAP$(ZX, ZY))) <> 1 OR MAP$(ZX, ZY) = "B" OR MAN(ZX, ZY) > 0 THEN ZY = ZY + 1: DIR(BB2) = 0: SOUND 40, .5
IF DIR(BB2) = 2 THEN ZX = ZX - 1: IF ZX < 1 OR ERRO(ASC(MAP$(ZX, ZY))) <> 1 OR MAP$(ZX, ZY) = "B" OR MAN(ZX, ZY) > 0 THEN ZX = ZX + 1: DIR(BB2) = 0: SOUND 40, .5
IF DIR(BB2) = 3 THEN ZX = ZX + 1: IF ZX > 15 OR ERRO(ASC(MAP$(ZX, ZY))) <> 1 OR MAP$(ZX, ZY) = "B" OR MAN(ZX, ZY) > 0 THEN ZX = ZX - 1: DIR(BB2) = 0: SOUND 40, .5
IF DIR(BB2) = 1 THEN ZY = ZY + 1: IF ZY > 9 OR ERRO(ASC(MAP$(ZX, ZY))) <> 1 OR MAP$(ZX, ZY) = "B" OR MAN(ZX, ZY) > 0 THEN ZY = ZY - 1: DIR(BB2) = 0: SOUND 40, .5
MAP$(ZX, ZY) = "B"
IF DIR(BB2) > 19 THEN DIR(BB2) = 0: BE(BB2) = 90: SOU = 4
RETURN
DRAWG:
CLS : LOCATE 12, 16: PRINT "Draw Game "
IF COON > 4 THEN GOTO GOVER
IF PlayMODE = 1 THEN LOCATE 12, 12: PRINT "Continue? (Y/N)": LOCATE 14, 18: PRINT 5 - COON ELSE GOTO CONTI
FOR EX = 1 TO 10
SOUND 30000, 5
NEXT EX
QQ:
A$ = INPUT$(1)
IF A$ = "Y" OR A$ = "y" THEN COON = COON + 1: GOTO CONTI
IF A$ = "N" OR A$ = "n" THEN TK = 1
IF TK = 0 THEN GOTO QQ
PSET (0, 3), COON
IF PlayMODE = 1 THEN CHAIN "BOMB.BAS"
CONTI:
PSET (0, 0), PlayMODE
PSET (0, 1), Players
IF PlayMODE = 1 THEN PSET (0, 2), ROUND
PSET (0, 3), COON
PSET (0, 4), ST
CHAIN "MAIN.RUN"
WINING:
CLS : LOCATE 12, 13: PRINT "Player"; PLEX; "win!!!"
FOR EX = 1 TO 10
SOUND 30000, 5
NEXT EX
PSET (0, 0), PlayMODE
PSET (0, 1), Players
PSET (0, 4), ST
CHAIN "MAIN.RUN"
SOUND1:
IF SOU = 1 THEN SOUND 500, .1
IF SOU = 2 THEN SOUND 40, 1
IF SOU = 3 THEN SOUND 500, .1: SOUND 2000, .1: SOUND 3500, .1
IF SOU = 4 THEN SOUND 10000, .3: SOUND 2000, .1
IF SOU = 5 THEN SOUND 10000, .3: SOUND 1500, .1
IF SOU = 6 THEN SOUND 3000, .5: SOUND 550, .1
IF SOU = 7 THEN SOUND 1400, .5: SOUND 550, .1
IF SOU = 8 THEN SOUND 200, .2: SOUND 400, .2
IF SOU = 9 THEN SOUND 3600, .5: SOUND 6300, .5: SOUND 4500, .5
IF SOU = 10 THEN SOUND 1000, .2: SOUND 10000, .3
SOU = 0
RETURN
CONTROL:
IF CO(A) = 1 THEN CO(A) = 2
IF CO(A) = 3 THEN GOTO MWALL
IF CO(A) > 34 AND CO(A) < 41 THEN GOTO MBOMB
IF CO(A) > 4 AND CO(A) < 16 THEN GOTO MDOI
RETURN
MBOMB:
YU = 0
XX(A) = 0: YY(A) = 0
IF ERRO(ASC(MAP$(X(A), Y(A) + 1))) > 0 OR MAP$(X(A), Y(A) + 1) = "Z" OR MAP$(X(A), Y(A) + 1) = "Z" THEN IF FACE(A) = 1 AND Y(A) < 9 THEN BX(BB) = X(A): BELONG(BB) = 0: BY(BB) = Y(A) + 1: YU = 1: IF MAP$(X(A), Y(A) + 1) = "Z" THEN POINTS = POINTS - 1
IF ERRO(ASC(MAP$(X(A) - 1, Y(A)))) > 0 OR MAP$(X(A) - 1, Y(A)) = "Z" OR MAP$(X(A) - 1, Y(A)) = "Z" THEN IF FACE(A) = 2 AND X(A) > 1 THEN BX(BB) = X(A) - 1: BELONG(BB) = 0: BY(BB) = Y(A): YU = 1: IF MAP$(X(A) - 1, Y(A)) = "Z" THEN POINTS = POINTS - 1
IF ERRO(ASC(MAP$(X(A) + 1, Y(A)))) > 0 OR MAP$(X(A) + 1, Y(A)) = "Z" OR MAP$(X(A) + 1, Y(A)) = "Z" THEN IF FACE(A) = 3 AND X(A) < 15 THEN BX(BB) = X(A) + 1: BELONG(BB) = 0: BY(BB) = Y(A): YU = 1: IF MAP$(X(A) + 1, Y(A)) = "Z" THEN POINTS = POINTS -  _
1
IF ERRO(ASC(MAP$(X(A), Y(A) - 1))) > 0 OR MAP$(X(A), Y(A) - 1) = "Z" OR MAP$(X(A), Y(A) - 1) = "Z" THEN IF FACE(A) = 4 AND Y(A) > 1 THEN BX(BB) = X(A): BELONG(BB) = 0: BY(BB) = Y(A) - 1: YU = 1: IF MAP$(X(A), Y(A) - 1) = "Z" THEN POINTS = POINTS - 1
IF YU = 0 THEN SOUND 70, .2: SOUND 800, .1: RETURN
CO(A) = CO(A) - 1: IF CO(A) = 35 THEN CO(A) = 0
FL(BB) = 0: IF MAP$(BX(BB), BY(BB)) <> "0" THEN FL(BB) = 100
BE(BB) = 6: FL(BB) = FL(BB) + FACE(A) * 20: MAP$(BX(BB), BY(BB)) = "B": BB = BB + 1
RETURN
MFIRE:
U = 1: R = 1: L = 1: D = 1
IF FL(BB2) = 20 THEN D = 0
IF FL(BB2) = 40 THEN L = 0
IF FL(BB2) = 60 THEN R = 0
IF FL(BB2) = 80 THEN U = 0
MAP$(ZX, ZY) = "`"
RETURN
MWALL:
XX(A) = 0: YY(A) = 0
IF Y(A) < 9 AND FACE(A) = 1 AND MAP$(X(A), Y(A) + 1) = "0" AND MAN(X(A), Y(A) + 1) = 0 THEN MAP$(X(A), Y(A) + 1) = "Z": PUT ((X(A)) * 20 - 10, (Y(A) + 1) * 20 - 10), HI, PSET: SOU = 6: T(A) = 2: POINTS = POINTS + 1: RETURN
IF X(A) > 1 AND FACE(A) = 2 AND MAP$(X(A) - 1, Y(A)) = "0" AND MAN(X(A) - 1, Y(A)) = 0 THEN MAP$(X(A) - 1, Y(A)) = "Z": PUT ((X(A) - 1) * 20 - 10, (Y(A)) * 20 - 10), HI, PSET: SOU = 6: T(A) = 2: POINTS = POINTS + 1: RETURN
IF X(A) < 15 AND FACE(A) = 3 AND MAP$(X(A) + 1, Y(A)) = "0" AND MAN(X(A) + 1, Y(A)) = 0 THEN MAP$(X(A) + 1, Y(A)) = "Z": PUT ((X(A) + 1) * 20 - 10, (Y(A)) * 20 - 10), HI, PSET: SOU = 6: T(A) = 2: POINTS = POINTS + 1: RETURN
IF Y(A) > 1 AND FACE(A) = 4 AND MAP$(X(A), Y(A) - 1) = "0" AND MAN(X(A), Y(A) - 1) = 0 THEN MAP$(X(A), Y(A) - 1) = "Z": PUT ((X(A)) * 20 - 10, (Y(A) - 1) * 20 - 10), HI, PSET: SOU = 6: T(A) = 2: POINTS = POINTS + 1: RETURN
IF Y(A) < 9 AND FACE(A) = 1 AND MAP$(X(A), Y(A) + 1) = "Z" AND MAP(X(A), Y(A) + 1) = 0 THEN MAP$(X(A), Y(A) + 1) = "0": PUT ((X(A)) * 20 - 10, (Y(A) + 1) * 20 - 10), GR, PSET: SOU = 7: T(A) = 2: POINTS = POINTS - 1: RETURN
IF X(A) > 1 AND FACE(A) = 2 AND MAP$(X(A) - 1, Y(A)) = "Z" AND MAP(X(A) - 1, Y(A)) = 0 THEN MAP$(X(A) - 1, Y(A)) = "0": PUT ((X(A) - 1) * 20 - 10, (Y(A)) * 20 - 10), GR, PSET: SOU = 7: T(A) = 2: POINTS = POINTS - 1: RETURN
IF X(A) < 15 AND FACE(A) = 3 AND MAP$(X(A) + 1, Y(A)) = "Z" AND MAP(X(A) + 1, Y(A)) = 0 THEN MAP$(X(A) + 1, Y(A)) = "0": PUT ((X(A) + 1) * 20 - 10, (Y(A)) * 20 - 10), GR, PSET: SOU = 7: T(A) = 2: POINTS = POINTS - 1: RETURN
IF Y(A) > 1 AND FACE(A) = 4 AND MAP$(X(A), Y(A) - 1) = "Z" AND MAP(X(A), Y(A) - 1) = 0 THEN MAP$(X(A), Y(A) - 1) = "0": PUT ((X(A)) * 20 - 10, (Y(A) - 1) * 20 - 10), GR, PSET: SOU = 7: T(A) = 2: POINTS = POINTS - 1: RETURN
RETURN
MDOI:
XX(A) = 0: YY(A) = 0
DOCON = DOCON + 1
IF DOCON > 15 THEN DOCON = 1
IF DOING(DOCON) > 0 THEN GOTO MDOI
CO(A) = CO(A) + 101
IF CO(A) = 115 THEN CO(A) = 0
DOING(DOCON) = FACE(A)
BELO(DOCON) = A
DX(DOCON) = X(A): DY(DOCON) = Y(A): TYPES(DOCON) = 0
SOU = 1: CCHH = 0: FG = 0
AIM:
IF PlayMODE = 1 THEN GOTO AIM2
FG = FG + 1
IF FG > 50 THEN RETURN
AIM(DOCON) = INT(RND * 4) + 1: IF AIM(DOCON) = A OR DIED(AIM(DOCON)) > 0 THEN IF TYR = 0 THEN GOTO AIM
RETURN
GUN:
PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), GR, PSET
IF MAP$(DX(A), DY(A)) <> "0" OR MAP(DX(A), DY(A)) > 0 THEN IF DOING(A) < 6 THEN DOING(A) = 6: MAP(DX(A), DY(A)) = MAP(DX(A), DY(A)) + 1
IF DOING(A) > 5 THEN GOTO GUNEX
DA = 0: DA2 = 0
CHY = 0: IF MAP$(DX(A), DY(A) + 1) <> "0" AND MAP$(DX(A), DY(A) - 1) <> "0" THEN CHY = 1
CHX = 0: IF MAP$(DX(A) + 1, DY(A)) <> "0" AND MAP$(DX(A) - 1, DY(A)) <> "0" THEN CHX = 1
IF TYPES(A) > 0 OR PlayMODE = 2 THEN EXY = Y(AIM(A)): EXX2 = X(AIM(A))
IF PlayMODE = 1 AND TYPES(A) = 0 THEN EXY = ENY(AIM(A)): EXX2 = ENX(AIM(A))
BEGINGUN:
IF DOING(A) = 5 THEN DOING(A) = 1
CHAN = 1
DA2 = DA2 + 1
IF DY(A) > EXY - 2 AND DY(A) < EXY + 2 OR DA = 2 THEN IF EXX2 < DX(A) AND CHX = 0 AND DA <> 1 THEN DOING(A) = 2: IF MAP$(DX(A) - 1, DY(A)) = "R" THEN DA = 1
IF DY(A) > EXY - 2 AND DY(A) < EXY + 2 OR DA = 2 THEN IF EXX2 > DX(A) AND CHX = 0 AND DA <> 1 THEN DOING(A) = 3: IF MAP$(DX(A) + 1, DY(A)) = "R" THEN DA = 1
IF DX(A) > EXX2 - 2 AND DX(A) < EXX2 + 2 OR DA = 1 THEN IF EXY < DY(A) AND CHY = 0 AND DA <> 2 THEN DOING(A) = 4: IF MAP$(DX(A), DY(A) + 1) = "R" THEN DA = 2
IF DX(A) > EXX2 - 2 AND DX(A) < EXX2 + 2 OR DA = 1 THEN IF EXY > DY(A) AND CHY = 0 AND DA <> 2 THEN DOING(A) = 1: IF MAP$(DX(A), DY(A) + 1) = "R" THEN DA = 2
IF DOING(A) = 1 THEN IF DY(A) < 9 AND MAP$(DX(A), DY(A) + 1) <> "R" THEN DY(A) = DY(A) + 1: CHAN = 0 ELSE DA = 2
IF DOING(A) = 4 THEN IF DY(A) > 1 AND MAP$(DX(A), DY(A) - 1) <> "R" THEN DY(A) = DY(A) - 1: CHAN = 0 ELSE DA = 2
IF DOING(A) = 3 THEN IF DX(A) < 15 AND MAP$(DX(A) + 1, DY(A)) <> "R" THEN DX(A) = DX(A) + 1: CHAN = 0 ELSE DA = 1
IF DOING(A) = 2 THEN IF DX(A) > 1 AND MAP$(DX(A) - 1, DY(A)) <> "R" THEN DX(A) = DX(A) - 1: CHAN = 0 ELSE DA = 1
IF CHAN = 1 AND DA2 < 4 THEN GOTO BEGINGUN
IF MAP$(DX(A), DY(A)) <> "0" OR CHAN = 1 OR MAP(DX(A), DY(A)) > 0 OR MAN(DX(A), DY(A)) > 0 THEN DOING(A) = 6
IF TYPES(A) = 0 THEN GOSUB TYPE1
IF TYPES(A) = 1 THEN GOSUB TYPE2
IF TYPES(A) = 2 THEN GOSUB TYPE3
IF DOING(A) = 6 THEN MAP(DX(A), DY(A)) = MAP(DX(A), DY(A)) + 1: GOTO GUNEX
RETURN
GUNEX:
DOING(A) = DOING(A) + 1
IF DOING(A) = 7 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), PA1, PSET
IF DOING(A) = 8 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), PA2, PSET
IF DOING(A) = 9 THEN MAP(DX(A), DY(A)) = MAP(DX(A), DY(A)) - 1
IF DOING(A) = 9 AND MAP$(DX(A), DY(A)) = "Z" THEN POINTS = POINTS - 1
IF DOING(A) = 9 THEN MAP$(DX(A), DY(A)) = "0": DOING(A) = 0: CO(BELO(A)) = CO(BELO(A)) - 100
IF CO(BELO(A)) = -100 THEN CO(BELO(A)) = 0
IF CO(BELO(A)) = -95 THEN CO(BELO(A)) = 5
RETURN
CCH:
RETURN
DECREASE:
DIED(A) = DIED(A) + .5: SOU = 8
IF MAP(X(A), Y(A)) > 0 THEN XX(A) = 0: YY(A) = 0
IF MAN(X(A), Y(A)) > 50 THEN DIED(A) = DIED(A) + 1
FACE(A) = FACE(A) + 1: IF FACE(A) > 4 THEN FACE(A) = 1
DECRE = (20 + DIED(A)) * 2
LINE (LIFE(A), 3)-(LIFE(A) - DECRE, 5), 16, BF
RETURN
FUNROUND:
IF ROUND = 1 THEN RESTORE 30
IF ROUND = 2 THEN RESTORE 40
IF ROUND = 5 THEN RESTORE 60
IF ROUND = 6 THEN RESTORE 50
IF ROUND = 3 THEN RESTORE 70
IF ROUND = 7 THEN RESTORE 80
IF ROUND = 4 THEN RESTORE 90
LOCATE 12, 16: PRINT "Round"; ROUND
FOR EX = 1 TO 10
SOUND 30000, 5
NEXT EX
CLS
RETURN
ENEMYS2:
MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 1
MAP$(ENX(A), ENY(A)) = "0"
EEE = ENX(A): EEE2 = ENY(A)
FOT(A) = FOT(A) - 1: IF FOT(A) < 0 THEN FOT(A) = 1
IF TYR > 0 THEN FOT(A) = 2
IF MAP(X(EA(A)), Y(EA(A))) > 0 THEN FOT(A) = 10
IF MAP(ENX(A), ENY(A)) > 0 THEN FOT(A) = 10
IF FOT(A) > 0 THEN GOTO ENDENE1
IF EA(A) = 0 OR DIED(EA(A)) > 0 OR INT(RND * 7) = 1 THEN GOSUB EAIM
DA = 0: DA2 = 0
CHY = 0: IF MAP$(ENX(A), ENY(A) + 1) <> "0" AND MAP$(ENX(A), ENY(A) - 1) <> "0" THEN CHY = 1
CHX = 0: IF MAP$(ENX(A) + 1, ENY(A)) <> "0" AND MAP$(ENX(A) - 1, ENY(A)) <> "0" THEN CHX = 1
ENEMYS3:
CHAN = 1
EXX(A) = 0: EYY(A) = 0
IF X(EA(A)) < ENX(A) THEN EXX(A) = -1
IF X(EA(A)) > ENX(A) THEN EXX(A) = 1
IF Y(EA(A)) < ENY(A) THEN EYY(A) = -1
IF Y(EA(A)) > ENY(A) THEN EYY(A) = 1
IF MAP(ENX(A), ENY(A)) = 0 AND EYY(A) = 1 AND ENY(A) < 9 AND MAP$(ENX(A), ENY(A) + 1) = "0" AND MAN(ENX(A), ENY(A) + 1) = 0 AND CHAN = 1 THEN ENY(A) = ENY(A) + 1: CHAN = 0
IF MAP(ENX(A), ENY(A)) = 0 AND EYY(A) = -1 AND ENY(A) > 1 AND MAP$(ENX(A), ENY(A) - 1) = "0" AND MAN(ENX(A), ENY(A) - 1) = 0 AND CHAN = 1 THEN ENY(A) = ENY(A) - 1: CHAN = 0
IF MAP(ENX(A), ENY(A)) = 0 AND EXX(A) = 1 AND ENX(A) < 15 AND MAP$(ENX(A) + 1, ENY(A)) = "0" AND MAN(ENX(A) + 1, ENY(A)) = 0 AND CHAN = 1 THEN ENX(A) = ENX(A) + 1: CHAN = 0
IF MAP(ENX(A), ENY(A)) = 0 AND EXX(A) = -1 AND ENX(A) > 1 AND MAP$(ENX(A) - 1, ENY(A)) = "0" AND MAN(ENX(A) - 1, ENY(A)) = 0 AND CHAN = 1 THEN ENX(A) = ENX(A) - 1: CHAN = 0
IF EYY(A) = 0 AND TAG(A) = 0 AND ENX(A) < X(EA(A)) AND MAP$(ENX(A) + 1, ENY(A)) <> "R" AND MAP$(ENX(A) + 1, ENY(A)) <> "'" THEN TAG(A) = 1: BOX(A) = -1: BOY(A) = 0: DIG(A) = 1: DIX(A) = ENX(A): DIY(A) = ENY(A): FOT(A) = 5
IF EYY(A) = 0 AND TAG(A) = 0 AND ENX(A) > X(EA(A)) AND MAP$(ENX(A) - 1, ENY(A)) <> "R" AND MAP$(ENX(A) - 1, ENY(A)) <> "'" THEN TAG(A) = 1: BOX(A) = 1: BOY(A) = 0: DIG(A) = 1: DIX(A) = ENX(A): DIY(A) = ENY(A): FOT(A) = 5
IF EXX(A) = 0 AND TAG(A) = 0 AND ENY(A) < Y(EA(A)) AND MAP$(ENX(A), ENY(A) + 1) <> "R" AND MAP$(ENX(A), ENY(A) + 1) <> "'" THEN TAG(A) = 1: BOX(A) = 0: BOY(A) = -1: DIG(A) = 1: DIX(A) = ENX(A): DIY(A) = ENY(A): FOT(A) = 5
IF EXX(A) = 0 AND TAG(A) = 0 AND ENY(A) > Y(EA(A)) AND MAP$(ENX(A), ENY(A) - 1) <> "R" AND MAP$(ENX(A), ENY(A) - 1) <> "'" THEN TAG(A) = 1: BOX(A) = 0: BOY(A) = 1: DIG(A) = 1: DIX(A) = ENX(A): DIY(A) = ENY(A): FOT(A) = 5
ENDENE1:
IF DIG(A) > 0 THEN GOSUB GUNEN1
PUT (EEE * 20 - 10, EEE2 * 20 - 10), GR, PSET
IF MAP(ENX(A), ENY(A)) = 0 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE1, PSET
IF MAP(ENX(A), ENY(A)) > 0 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE3, PSET
IF MAP(ENX(A), ENY(A)) > 0 THEN SOU = 2: ENEMY(A) = ENEMY(A) + 1: IF ENEMY(A) > 20 + 10 * Players THEN ENEMY(A) = 0: ET = ET - 1: GOSUB ENEX
IF ENEMY(A) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 1: MAP$(ENX(A), ENY(A)) = "'"
RETURN
EAIM:
FG = FG + 1
IF FG > 50 THEN RETURN
EA(A) = INT(RND * 4) + 1
IF DIED(EA(A)) > 0 THEN IF TYR = 0 THEN GOTO EAIM
FG = 0
RETURN
ENEX:
DOCON = DOCON + 1
IF DOCON > 15 THEN DOCON = 1
IF DOING(DOCON) > 0 THEN GOTO ENEX
DOING(DOCON) = 6
BELO(DOCON) = 5
DX(DOCON) = ENX(A): DY(DOCON) = ENY(A)
MAP(ENX(A), ENY(A)) = MAP(ENX(A), ENY(A)) + 1
TAG(A) = 0
RETURN
GUNEN1:
RANRAN = 0
PUT (DIX(A) * 20 - 10, DIY(A) * 20 - 10), GR, PSET
IF MAP$(DIX(A) - BOX(A), DIY(A) - BOY(A)) = "R" THEN RANRAN = 1
IF MAN(DIX(A), DIY(A)) > 0 THEN RANRAN2 = 1
DIX(A) = DIX(A) - BOX(A)
DIY(A) = DIY(A) - BOY(A)
IF RANRAN = 1 OR MAP$(DIX(A), DIY(A)) <> "0" OR MAN(DIX(A), DIY(A)) > 0 OR DIX(A) > 15 OR DIX(A) < 1 OR DIY(A) > 9 OR DIY(A) < 1 THEN GOSUB EXGUNEN1
IF DIG(A) > 0 THEN PUT (DIX(A) * 20 - 10, DIY(A) * 20 - 10), ENE2, PSET
RETURN
EXGUNEN1:
IF DIX(A) > 15 THEN DIX(A) = 15
IF DIX(A) < 1 THEN DIX(A) = 1
IF DIY(A) > 9 THEN DIY(A) = 9
IF DIY(A) < 1 THEN DIY(A) = 1
IF MAP$(DIX(A), DIY(A)) = "R" THEN DIX(A) = DIX(A) + BOX(A): DIY(A) = DIY(A) + BOY(A)
DOCON = DOCON + 1
IF DOCON > 15 THEN DOCON = 1
IF DOING(DOCON) > 0 THEN GOTO EXGUNEN1
DOING(DOCON) = 6
BELO(DOCON) = 5
DX(DOCON) = DIX(A): DY(DOCON) = DIY(A)
MAP(DIX(A), DIY(A)) = MAP(DIX(A), DIY(A)) + 1
DIG(A) = 0: TAG(A) = 0
RETURN
AIM2:
FG = FG + 1
IF FG > 50 THEN RETURN
AIM(DOCON) = INT(RND * 5) + 1: IF ENEMY(AIM(DOCON)) = 0 THEN GOTO AIM2
RETURN
E41:
FOR A = 1 TO 10
IF ENEMY(A) > 0 THEN GOSUB E42
NEXT A
IF POINTS > 0 AND ET > 0 AND ET < 10 AND INT(RND * 5) = 1 THEN GOSUB FUN22
RETURN
E42:
EEE = ENX(A): EEE2 = ENY(A)
IF MAN(ENX(A), ENY(A)) > 50 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 100 ELSE MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 1: DIX(A) = 6
IF MAP(ENX(A), ENY(A)) > 0 THEN GOTO TT2
DIX(A) = DIX(A) + 1: IF DIX(A) = 5 OR DIX(A) = 11 THEN DIX(A) = 1
IF FOT(A) = 0 THEN FOT(A) = INT(RND * 4) + 1
IF DIX(A) > 5 THEN FOT(A) = 0
IF FOT(A) = 1 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A) + 1, ENY(A)) = "0" AND ENX(A) < 15 THEN ENX(A) = ENX(A) + 1 ELSE FOT(A) = 0
IF FOT(A) = 2 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A) - 1, ENY(A)) = "0" AND ENX(A) > 1 THEN ENX(A) = ENX(A) - 1 ELSE FOT(A) = 0
IF FOT(A) = 3 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A), ENY(A) + 1) = "0" AND ENY(A) < 9 THEN ENY(A) = ENY(A) + 1 ELSE FOT(A) = 0
IF FOT(A) = 4 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A), ENY(A) - 1) = "0" AND ENY(A) > 1 THEN ENY(A) = ENY(A) - 1 ELSE FOT(A) = 0
PUT (EEE * 20 - 10, EEE2 * 20 - 10), GR, PSET
IF DIX(A) = 2 OR DIX(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE1, PSET
IF DIX(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE2, PSET
IF DIX(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE3, PSET
IF DIX(A) = 7 OR DIX(A) = 8 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE4, PSET
IF DIX(A) = 9 OR DIX(A) = 10 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE5, PSET
IF INT(RND * 120) = 1 AND ET < 8 AND POINTS < 10 OR ET < 3 THEN SOU = 2: GOSUB PLUS
TT2:
IF MAP(ENX(A), ENY(A)) > 0 THEN ENEMY(A) = ENEMY(A) + 1: IF ENEMY(A) > Players THEN ET = ET - 1: ENEMY(A) = 0: GOSUB ENEX
IF ENEMY(A) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 100
RETURN
PLUS:
ET = ET + 2: PLUS2 = 0
FOR B = 1 TO 10
IF ENEMY(B) = 0 THEN ENEMY(B) = 1: PLUS2 = PLUS2 + 1: ENX(B) = ENX(A): ENY(B) = ENY(A): DIY(B) = 0: IF PLUS2 = 2 THEN EXIT FOR
NEXT B
RETURN
FUN22:
K1 = INT(RND * 15) + 1
K2 = INT(RND * 9) + 1
IF MAP$(K1, K2) = "Z" AND POINT(K1 * 20 + 1, K2 * 20 - 5) = 16 THEN MAP$(K1, K2) = "0": MAN(K1, K2) = 1 ELSE RETURN
FOR B = 1 TO 10
IF ENEMY(B) = 0 THEN ENEMY(B) = 1: ENX(B) = K1: ENY(B) = K2: DIY(B) = 0: EXIT FOR
NEXT B
ET = ET + 1: PLUS2 = 0
POINTS = POINTS - 1
SOU = 2
RETURN
E11:
FOR A = 1 TO 10
IF ENEMY(A) <> 0 THEN GOSUB E12
NEXT A
RETURN
E12:
IF DIX(A) = 0 THEN DIX(A) = A - INT(A / 4) * 4
EEE = ENX(A): EEE2 = ENY(A)
IF MAN(ENX(A), ENY(A)) > 50 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 100 ELSE MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 1
DIX(A) = DIX(A) + 1: IF DIX(A) > 4 THEN DIX(A) = 1
BOX(A) = 1 - BOX(A): IF BOX(A) = 0 AND DIY(A) = 0 THEN GOTO TT3
IF MAP(ENX(A), ENY(A)) > 0 THEN GOTO TT3
IF FOT(A) = 0 THEN FOT(A) = INT(RND * 4) + 1
IF FOT(A) = 1 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A) + 1, ENY(A)) = "0" AND MAN(ENX(A) + 1, ENY(A)) < 50 AND ENX(A) < 15 THEN ENX(A) = ENX(A) + 1 ELSE FOT(A) = 0
IF FOT(A) = 2 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A) - 1, ENY(A)) = "0" AND MAN(ENX(A) - 1, ENY(A)) < 50 AND ENX(A) > 1 THEN ENX(A) = ENX(A) - 1 ELSE FOT(A) = 0
IF FOT(A) = 3 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A), ENY(A) + 1) = "0" AND MAN(ENX(A), ENY(A) + 1) < 50 AND ENY(A) < 9 THEN ENY(A) = ENY(A) + 1 ELSE FOT(A) = 0
IF FOT(A) = 4 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A), ENY(A) - 1) = "0" AND MAN(ENX(A), ENY(A) - 1) < 50 AND ENY(A) > 1 THEN ENY(A) = ENY(A) - 1 ELSE FOT(A) = 0
TT3:
PUT (EEE * 20 - 10, EEE2 * 20 - 10), GR, PSET
IF DIY(A) = 0 THEN GOSUB TT4
IF DIY(A) = 1 THEN GOSUB TT5
IF MAP(ENX(A), ENY(A)) > 0 THEN ENEMY(A) = ENEMY(A) + 1: SOU = 2
IF ENEMY(A) > 10 AND DIY(A) = 0 THEN ENEMY(A) = 0: ET = ET - 1: GOSUB ENEX
IF ENEMY(A) > 40 AND DIY(A) = 1 THEN ENEMY(A) = 0: ET = ET - 1: GOSUB ENEX
IF ENEMY(A) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 100
RETURN
TT4:
IF DIX(A) = 2 OR DIX(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE1, PSET
IF DIX(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE2, PSET
IF DIX(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE3, PSET
RETURN
TT5:
IF DIX(A) = 2 OR DIX(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE4, PSET
IF DIX(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE6, PSET
IF DIX(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE5, PSET
RETURN
WINING2:
FOR EX = 1 TO 10
SOUND 30000, 5
NEXT EX
IF ROUND + 1 = 7 THEN COON = 0
PSET (0, 0), PlayMODE
PSET (0, 1), Players
PSET (0, 2), ROUND + 1
PSET (0, 3), COON
PSET (0, 4), ST
CHAIN "MAIN.RUN"
E51:
FOR A = 1 TO 10
IF ENEMY(A) > 0 THEN GOSUB E52
NEXT A
RETURN
E52:
IF Players = 1 THEN EEE = 26
IF Players = 2 THEN EEE = 36
IF Players = 3 THEN EEE = 51
MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 1
IF MAP(ENX(A), ENY(A)) > 0 THEN FOT(A) = 5: GOTO TT6
IF FOT(A) = 0 THEN FOT(A) = -200
FOT(A) = FOT(A) + 1: IF FOT(A) > 2 THEN FOT(A) = 1
IF FOT(A) > 0 THEN DIX(A) = DIX(A) + 1: IF DIX(A) < EEE AND DIX(A) / 2 = INT(DIX(A) / 2) THEN FOT(A) = 4: GOSUB MDOI2
IF FOT(A) = 0 THEN FOT(A) = 1
IF DIX(A) > 50 THEN DIX(A) = 0
IF FOT(A) = 1 OR FOT(A) < 0 AND FOT(A) / 2 = INT(FOT(A) / 2) THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE1, PSET
IF FOT(A) = 2 OR FOT(A) < 0 AND FOT(A) / 2 <> INT(FOT(A) / 2) THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE3, PSET
IF FOT(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE2, PSET
TT6:
IF FOT(A) = 5 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE8, PSET
IF MAP(ENX(A), ENY(A)) > 0 THEN ENEMY(A) = ENEMY(A) + 1: SOU = 2: IF ENEMY(A) > 50 THEN ET = ET - 1: ENEMY(A) = 0: GOSUB ENEX
IF ENEMY(A) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 1
RETURN
MDOI2:
DOCON = DOCON + 1
IF DOCON > 15 THEN DOCON = 1
IF DOING(DOCON) > 0 THEN GOTO MDOI2
DOING(DOCON) = INT(RND * 4) + 1
BELO(DOCON) = 5
DX(DOCON) = ENX(A): DY(DOCON) = ENY(A): TYPES(DOCON) = 1
SOU = 1: CCHH = 0: FG = 0
AIM3:
FG = FG + 1
IF FG > 50 THEN DOING(DOCON) = 0: RETURN
AIM(DOCON) = INT(RND * 4) + 1
IF DIED(AIM(DOCON)) > 0 THEN GOTO AIM3
RETURN
TYPE1:
IF DOING(A) = 1 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), DO1, PSET
IF DOING(A) = 4 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), DO2, PSET
IF DOING(A) = 3 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), DO3, PSET
IF DOING(A) = 2 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), DO4, PSET
RETURN
TYPE2:
IF DOING(A) = 1 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), ENE4, PSET
IF DOING(A) = 4 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), ENE5, PSET
IF DOING(A) = 3 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), ENE6, PSET
IF DOING(A) = 2 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), ENE7, PSET
RETURN
TYPE3:
IF DOING(A) = 1 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), OBO1, PSET
IF DOING(A) = 4 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), OBO2, PSET
IF DOING(A) = 3 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), OBO3, PSET
IF DOING(A) = 2 THEN PUT (DX(A) * 20 - 10, DY(A) * 20 - 10), OBO4, PSET
RETURN
E61:
FOR A = 2 TO 10
IF ENEMY(A) > 0 THEN GOSUB E62
NEXT A
IF ENEMY(1) > 0 THEN A = 1: GOSUB E72
RETURN
E62:
JK = JK + 1
IF CC(A) = 0 OR INT(RND * 15) = 1 THEN CC(A) = INT(RND * Players) + 1: IF DIED(CC(A)) > 0 AND JK < 10 THEN CC(A) = 0: GOTO E62
IF MAN(ENX(A), ENY(A)) > 50 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 100 ELSE MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 1
IF BOX(A) > 0 THEN BOX(A) = BOX(A) - 1
IF MAP(ENX(A), ENY(A)) > 0 OR BOX(A) > 0 THEN GOTO TT221
JK = 0
EEE = ENX(A): EEE2 = ENY(A): D = CC(A)
DIX(A) = 1 - DIX(A)
DII(1) = 0: DII(2) = 0
IF ENX(A) < X(D) THEN DII(1) = 1
IF ENX(A) > X(D) THEN DII(1) = 2
IF ENY(A) < Y(D) THEN DII(2) = 3
IF ENY(A) > Y(D) THEN DII(2) = 4
IF DII(1) = 0 AND DII(2) = 0 THEN BOX(A) = 3
IF INT(RND * 2) = 0 THEN FOT(A) = DII(INT(RND * 2) + 1)
IF DII(2) > 0 AND ENY(A) = 5 AND INT(RND * 3) > 0 AND ENX(A) / 2 <> INT(ENX(A) / 2) THEN FOT(A) = DII(2)
IF FOT(A) = 1 THEN IF MAP$(ENX(A) + 1, ENY(A)) = "0" AND MAP(ENX(A) + 1, ENY(A)) = 0 AND MAN(ENX(A) + 1, ENY(A)) < 50 AND ENX(A) < 15 THEN ENX(A) = ENX(A) + 1
IF FOT(A) = 2 THEN IF MAP$(ENX(A) - 1, ENY(A)) = "0" AND MAP(ENX(A) - 1, ENY(A)) = 0 AND MAN(ENX(A) - 1, ENY(A)) < 50 AND ENX(A) > 1 THEN ENX(A) = ENX(A) - 1
IF FOT(A) = 3 THEN IF MAP$(ENX(A), ENY(A) + 1) = "0" AND MAP(ENX(A), ENY(A) + 1) = 0 AND MAN(ENX(A), ENY(A) + 1) < 50 AND ENY(A) < 9 THEN ENY(A) = ENY(A) + 1
IF FOT(A) = 4 THEN IF MAP$(ENX(A), ENY(A) - 1) = "0" AND MAP(ENX(A), ENY(A) - 1) = 0 AND MAN(ENX(A), ENY(A) - 1) < 50 AND ENY(A) > 1 THEN ENY(A) = ENY(A) - 1
IF FOT(A) = 0 THEN FOT(A) = INT(RND * 4) + 1
TT221:
PUT (EEE * 20 - 10, EEE2 * 20 - 10), GR, PSET
IF DIX(A) = 1 AND FOT(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), FULL1, PSET
IF DIX(A) = 0 AND FOT(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE2, PSET
IF DIX(A) = 1 AND FOT(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE7, PSET
IF DIX(A) = 0 AND FOT(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE8, PSET
IF DIX(A) = 1 AND FOT(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE3, PSET
IF DIX(A) = 0 AND FOT(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE4, PSET
IF DIX(A) = 1 AND FOT(A) = 2 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE5, PSET
IF DIX(A) = 0 AND FOT(A) = 2 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE6, PSET
IF MAP(ENX(A), ENY(A)) > 0 THEN BOX(A) = 5: ENEMY(A) = ENEMY(A) + 1: SOU = 2: IF ENEMY(A) > 20 THEN ENEMY(A) = 0: ET = ET - 1: GOSUB ENEX
IF ENEMY(A) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 100
RETURN
ENBOMB:
IF MAP$(ENX(A), ENY(A)) = "0" THEN BX(BB) = ENX(A): BELONG(BB) = 5: BY(BB) = ENY(A): BE(BB) = 25: FL(BB) = 1: MAP$(BX(BB), BY(BB)) = "B": BB = BB + 1: SOU = 1
IF BB > 50 THEN BB = 1
RETURN
E72:
TAG(A) = TAG(A) + 1
DIX(A) = 0
IF MAN(ENX(A), ENY(A)) > 50 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 100 ELSE MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 1
IF MAP(ENX(A), ENY(A)) > 0 THEN DIX(A) = 2: GOTO TT211
IF ET < 1 + 2 * Players AND INT(RND * 10) = 0 AND BOX(A) < 10 * Players THEN BOX(A) = BOX(A) + 1: SOU = 4: GOSUB PLUS22: IF TAG(A) > 400 THEN TAG(A) = 385
IF INT(RND * 5) = 1 AND TAG(A) > 400 THEN DIX(A) = 1: GOSUB MDOI3
TT211:
IF DIX(A) = 0 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE1, PSET
IF DIX(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), FULL2, PSET
IF DIX(A) = 2 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), FULL3, PSET
IF MAP(ENX(A), ENY(A)) > 0 THEN TAG(A) = 401: ENEMY(A) = ENEMY(A) + 1: SOU = 2: IF ENEMY(A) > 50 + 20 * Players AND BOX(A) < 10 * Players THEN ENEMY(A) = 0: ET = ET - 1: GOSUB ENEX
IF ENEMY(A) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 100
RETURN
PLUS22:
ET = ET + 1
FOR B = 1 TO 10
IF ENEMY(B) = 0 THEN ENEMY(B) = 1: ENX(B) = ENX(A): ENY(B) = ENY(A): DIY(B) = 1: DIX(A) = 1: EXIT FOR
NEXT B
RETURN
MDOI3:
DOCON = DOCON + 1
IF DOCON > 15 THEN DOCON = 1
IF DOING(DOCON) > 0 THEN GOTO MDOI3
DOING(DOCON) = INT(RND * 4) + 1
BELO(DOCON) = 5
DX(DOCON) = ENX(A): DY(DOCON) = ENY(A): TYPES(DOCON) = 2
SOU = 5: CCHH = 0: FG = 0
GOTO AIM3
FUNDAN:
U = 0: D = 0: L = 0: R = 0
DANGER(ZX, ZY) = 1
FOR EX = 1 TO 1 + FL(BB2)
IF F = 0 AND ZY - EX > 0 THEN IF MAP$(ZX, ZY - EX) = "0" THEN DANGER(ZX, ZY - EX) = 1 ELSE U = 1
IF L = 0 AND ZX - EX > 0 THEN IF MAP$(ZX - EX, ZY) = "0" THEN DANGER(ZX - EX, ZY) = 1 ELSE L = 1
IF R = 0 AND ZX + EX < 16 THEN IF MAP$(ZX + EX, ZY) = "0" THEN DANGER(ZX + EX, ZY) = 1 ELSE R = 1
IF D = 0 AND ZY + EX < 10 THEN IF MAP$(ZX, ZY + EX) = "0" THEN DANGER(ZX, ZY + EX) = 1 ELSE D = 1
NEXT EX
RETURN
FUNDAN2:
U = 0: D = 0: L = 0: R = 0
DANGER(ZX, ZY) = 0
FOR EX = 1 TO 1 + FL(BB2)
IF U = 0 AND ZY - EX > 0 THEN IF MAP$(ZX, ZY - EX) = "0" THEN DANGER(ZX, ZY - EX) = 0 ELSE U = 1
IF L = 0 AND ZX - EX > 0 THEN IF MAP$(ZX - EX, ZY) = "0" THEN DANGER(ZX - EX, ZY) = 0 ELSE L = 1
IF R = 0 AND ZX + EX < 16 THEN IF MAP$(ZX + EX, ZY) = "0" THEN DANGER(ZX + EX, ZY) = 0 ELSE R = 1
IF D = 0 AND ZY + EX < 10 THEN IF MAP$(ZX, ZY + EX) = "0" THEN DANGER(ZX, ZY + EX) = 0 ELSE D = 1
NEXT EX
RETURN
ENEMYS:
IF PlayMODE = 2 THEN GOTO EEEE
IF ROUND = 1 THEN GOTO E11
IF ROUND = 7 THEN GOTO E61
IF ROUND = 3 THEN GOTO ER7
IF ROUND = 6 THEN GOTO E41
IF ROUND = 5 THEN GOTO E51
IF ROUND = 4 THEN GOTO EEND
EEEE:
FOR A = 1 TO 10
IF ENEMY(A) > 0 THEN GOSUB ENEMYS2
NEXT A
RETURN
ER7:
IF ET = 0 THEN RETURN
A = 1
JK = JK + 1
IF CC(A) = 0 OR INT(RND * 2) = 1 THEN CC(A) = INT(RND * Players) + 1: IF DIED(CC(A)) > 0 AND JK < 10 THEN CC(A) = 0: GOTO ER7
JK = 0
D = CC(A)
IF MAN(ENX(A), ENY(A)) = 1 THEN MAN(ENX(A), ENY(A)) = 0
EEE = ENX(A): EEE2 = ENY(A): DIX(A) = DIX(A) + 1
IF TZ > 0 OR DIX(A) < 70 THEN TZ = TZ - 1: GOTO KKK
DII(1) = 0: DII(2) = 0
IF ENX(A) < X(D) THEN DII(1) = 1
IF ENX(A) > X(D) THEN DII(1) = 2
IF ENY(A) < Y(D) THEN DII(2) = 3
IF ENY(A) > Y(D) THEN DII(2) = 4
IF INT(RND * 10) = 0 OR ENX(A) - X(D) < 2 AND X(D) - ENX(A) < 2 OR ENY(A) - Y(D) < 2 AND Y(D) - ENY(A) < 2 THEN FOT(A) = DII(INT(RND * 2) + 1)
IF FOT(A) = 0 OR BOX(A) = 1 THEN FOT(A) = INT(RND * 4) + 1
IF FOT(A) > 0 THEN BOX(A) = 0
IF KKK < 5 THEN KKK = KKK + 1: FOT(A) = 2
IF FOT(A) = 1 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A) + 1, ENY(A)) <> "R" AND MAP$(ENX(A) + 1, ENY(A)) <> "B" AND MAP(ENX(A) + 1, ENY(A)) = 0 AND ENX(A) < 15 THEN ENX(A) = ENX(A) + 1 ELSE BOX(A) = 1
IF FOT(A) = 2 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A) - 1, ENY(A)) <> "R" AND MAP$(ENX(A) - 1, ENY(A)) <> "B" AND MAP(ENX(A) - 1, ENY(A)) = 0 AND ENX(A) > 1 THEN ENX(A) = ENX(A) - 1 ELSE BOX(A) = 1
IF FOT(A) = 3 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A), ENY(A) + 1) <> "R" AND MAP$(ENX(A), ENY(A) + 1) <> "B" AND MAP(ENX(A), ENY(A) + 1) = 0 AND ENY(A) < 9 THEN ENY(A) = ENY(A) + 1 ELSE BOX(A) = 1
IF FOT(A) = 4 THEN IF INT(RND * 5) > 0 AND MAP$(ENX(A), ENY(A) - 1) <> "R" AND MAP$(ENX(A), ENY(A) - 1) <> "B" AND MAP(ENX(A), ENY(A) - 1) = 0 AND ENY(A) > 1 THEN ENY(A) = ENY(A) - 1 ELSE BOX(A) = 1
KKK:
IF BOX(A) = 1 OR TZ > 0 OR DIX(A) < 70 THEN A = 3: GOSUB ER73: RETURN
MAP$(ENX(A), ENY(A)) = "R"
MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 100
SOUND 40, .1
PUT (EEE * 20 - 10, EEE2 * 20 - 10), ENE1, PSET
A = 2: GOSUB ER72
IF FOT(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE3, PSET
IF FOT(A) = 2 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE4, PSET
IF FOT(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE5, PSET
IF FOT(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE2, PSET
A = 3: GOSUB ER73
RETURN
ER72:
EEE = ENX(2): EEE2 = ENY(2)
IF FDI(1) > 0 AND DIY(1) = 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 100: MAP$(ENX(A), ENY(A)) = "0": DIY(1) = 1
IF FDI(1) = 1 THEN ENX(A) = ENX(A) + 1
IF FDI(1) = 2 THEN ENX(A) = ENX(A) - 1
IF FDI(1) = 3 THEN ENY(A) = ENY(A) + 1
IF FDI(1) = 4 THEN ENY(A) = ENY(A) - 1
IF FDI(1) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 100: MAP$(ENX(A), ENY(A)) = "0": PUT (EEE * 20 - 10, EEE2 * 20 - 10), GR, PSET: PUT (ENX(2) * 20 - 10, ENY(2) * 20 - 10), GR, PSET
FOR AB = 1 TO 5
FDI(AB) = FDI(AB + 1)
NEXT AB
FDI(6) = FOT(1)
A = 3: GOSUB ER73
A = 1
RETURN
ER73:
ENX(3) = ENX(2): ENY(3) = ENY(2)
IF FDI(1) = 1 THEN ENX(A) = ENX(A) + 1
IF FDI(1) = 2 THEN ENX(A) = ENX(A) - 1
IF FDI(1) = 3 THEN ENY(A) = ENY(A) + 1
IF FDI(1) = 4 THEN ENY(A) = ENY(A) - 1
MAP$(ENX(3), ENY(3)) = "'"
PUT (ENX(3) * 20 - 10, ENY(3) * 20 - 10), ENE1, PSET
IF MAP(ENX(3), ENY(3)) > 0 AND EEK = 0 THEN ENEMY(1) = ENEMY(1) + 1: DIX(1) = 200: SOU = 2: PUT (ENX(3) * 20 - 10, ENY(3) * 20 - 10), ENE6, PSET: TZ = 6: IF ENEMY(1) > 20 + Players * 10 THEN ENEMY(1) = 0: ET = 0: GOSUB EXTIN
EEK = 0
RETURN
EXTIN:
A = 4
ENX(4) = ENX(3):  ENY(4) = ENY(3)
MAN(ENX(4), ENY(4)) = 0
GOSUB ENEX
FOR AB = 2 TO 6
IF FDI(AB) = 1 THEN ENX(4) = ENX(4) + 1
IF FDI(AB) = 2 THEN ENX(4) = ENX(4) - 1
IF FDI(AB) = 3 THEN ENY(4) = ENY(4) + 1
IF FDI(AB) = 4 THEN ENY(4) = ENY(4) - 1
MAN(ENX(4), ENY(4)) = 0
GOSUB ENEX
NEXT AB
RETURN
EEND:
FOR A = 1 TO 10
IF ENEMY(A) > 0 THEN GOSUB EEND2
NEXT A
RETURN
EEND2:
JK = JK + 1
IF CC(A) = 0 OR INT(RND * 15) = 1 THEN CC(A) = INT(RND * Players) + 1: IF DIED(CC(A)) > 0 AND JK < 10 THEN CC(A) = 0: GOTO E62
IF MAN(ENX(A), ENY(A)) > 50 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 100 ELSE MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) - 1
IF BOX(A) > 0 THEN BOX(A) = BOX(A) - 1
IF MAP(ENX(A), ENY(A)) > 0 OR BOX(A) > 0 THEN GOTO EEND3
JK = 0
EEE = ENX(A): EEE2 = ENY(A): D = CC(A)
DIX(A) = 1 - DIX(A)
DII(1) = 0: DII(2) = 0
IF ENX(A) < X(D) THEN DII(1) = 1
IF ENX(A) > X(D) THEN DII(1) = 2
IF ENY(A) < Y(D) THEN DII(2) = 3
IF ENY(A) > Y(D) THEN DII(2) = 4
IF DII(1) = 0 AND DII(2) = 0 THEN BOX(A) = 5
IF INT(RND * 2) = 0 THEN FOT(A) = DII(INT(RND * 2) + 1)
IF FOT(A) = 1 THEN IF MAP$(ENX(A) + 1, ENY(A)) = "0" AND MAP(ENX(A) + 1, ENY(A)) = 0 AND MAN(ENX(A) + 1, ENY(A)) < 50 AND ENX(A) < 15 THEN ENX(A) = ENX(A) + 1
IF FOT(A) = 2 THEN IF MAP$(ENX(A) - 1, ENY(A)) = "0" AND MAP(ENX(A) - 1, ENY(A)) = 0 AND MAN(ENX(A) - 1, ENY(A)) < 50 AND ENX(A) > 1 THEN ENX(A) = ENX(A) - 1
IF FOT(A) = 3 THEN IF MAP$(ENX(A), ENY(A) + 1) = "0" AND MAP(ENX(A), ENY(A) + 1) = 0 AND MAN(ENX(A), ENY(A) + 1) < 50 AND ENY(A) < 9 THEN ENY(A) = ENY(A) + 1
IF FOT(A) = 4 THEN IF MAP$(ENX(A), ENY(A) - 1) = "0" AND MAP(ENX(A), ENY(A) - 1) = 0 AND MAN(ENX(A), ENY(A) - 1) < 50 AND ENY(A) > 1 THEN ENY(A) = ENY(A) - 1
IF FOT(A) = 0 THEN FOT(A) = INT(RND * 4) + 1
EEND3:
PUT (EEE * 20 - 10, EEE2 * 20 - 10), GR, PSET
IF DIX(A) = 1 AND FOT(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE1, PSET
IF DIX(A) = 0 AND FOT(A) = 3 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE2, PSET
IF DIX(A) = 1 AND FOT(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE5, PSET
IF DIX(A) = 0 AND FOT(A) = 1 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE6, PSET
IF DIX(A) = 1 AND FOT(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE3, PSET
IF DIX(A) = 0 AND FOT(A) = 4 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE4, PSET
IF DIX(A) = 1 AND FOT(A) = 2 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE7, PSET
IF DIX(A) = 0 AND FOT(A) = 2 THEN PUT (ENX(A) * 20 - 10, ENY(A) * 20 - 10), ENE8, PSET
IF MAP(ENX(A), ENY(A)) > 0 THEN BOX(A) = 5: ENEMY(A) = ENEMY(A) + 1: SOU = 2: IF ENEMY(A) > 10 + Players * 20 THEN ENEMY(A) = 0: ET = ET - 1: GOSUB ENEX
IF ENEMY(A) > 0 THEN MAN(ENX(A), ENY(A)) = MAN(ENX(A), ENY(A)) + 100
RETURN
GOVER:
CLS : LOCATE 12, 16: PRINT "Game Over "
A$ = INPUT$(1)
CHAIN "BOMB.BAS"
STT:
S0 = STICK(0): S1 = STICK(1)
SG0 = STRIG(0): SG4 = STRIG(4)
RETURN

