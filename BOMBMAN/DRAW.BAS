CLS : SCREEN 13
FOR EX = 200 TO 220
PALETTE EX, EX - 180
NEXT EX
PALETTE 1, 460557
PALETTE 2, 856606
PALETTE 3, 1318445
PALETTE 4, 2370616
PALETTE 5, 3881787
PALETTE 6, 45
PALETTE 7, 1315604
PALETTE 8, 3543820
PALETTE 9, 1520918
PALETTE 10, 50
PALETTE 11, 141370
PALETTE 12, 1317660
PALETTE 13, 2621440
PALETTE 14, 2625038
PALETTE 15, (63 + 63 * 256 + 63 * 65536)
PALETTE 16, 2627865
PALETTE 17, 3025193
PALETTE 18, 60
PALETTE 19, 16191
PALETTE 20, 256 * 40
PALETTE 22, 1318445
PALETTE 23, 1520918
PALETTE 24, 1317660
PALETTE 25, 141370
PALETTE 26, 1380666
PALETTE 27, 4128831
PALETTE 28, 3025193
PALETTE 29, 2627865
PALETTE 30, 2887459
PALETTE 31, 2621440
PALETTE 32, 2625038
PALETTE 33, 16191
PALETTE 34, 3543820
PALETTE 35, 1315604
PALETTE 36, 3881787
PALETTE 37, 856606

PALETTE 0, 0
PALETTE 1, 460557
PALETTE 2, 856606
PALETTE 3, 1318445
PALETTE 4, 2370616
PALETTE 5, 3881787
PALETTE 6, 45
PALETTE 7, 1315604
PALETTE 8, 3543820
PALETTE 9, 1520918
PALETTE 10, 50
PALETTE 11, 141370
PALETTE 12, 1317660
PALETTE 13, 2621440
PALETTE 14, 2625038
PALETTE 15, (63 + 63 * 256 + 63 * 65536)
PALETTE 16, 2627865
PALETTE 17, 3025193
PALETTE 18, 60
PALETTE 19, 16191
PALETTE 20, 256 * 40
PALETTE 21, 6975
PALETTE 22, 256 * 20
PALETTE 30, 65536 * 60 + 256 * 30

FOR A = 1 TO 20
LINE (1, A * 5 + 40)-(10, A * 5 + 45), A, BF
NEXT A
A = 170: B = 96: C = 1: BIG = 0: C1 = 0: C2 = 6.28: C3 = .85: S = 1: PR$ = "P": CER = 1
DIM MONO1(8000), HJH(10000), KLLL(2000)
STE:
IF X1 > 0 THEN LOCATE 1, 1: PRINT "Overflow!!!": BEEP: RUN
ON ERROR GOTO STE
ON ERROR GOTO STE
LOCATE 1, 1: PRINT "           "
GOSUB DEC
DIM F15(1 TO DM), M1(300), M2(300), INV(10000)
DRAWING:
 A$ = INKEY$
 PALETTE 37, 0
 PALETTE 90, 30
 IF A$ = "M" THEN LINE (X1, Y1)-(X2, Y2), 0, B: Y1 = Y1 + 1
 IF A$ = "(" THEN X12 = A: Y12 = B
 IF A$ = ")" THEN X22 = A: Y22 = B
 IF A$ = "_" THEN X13 = A: Y13 = B
 IF A$ = CHR$(0) + CHR$(60) THEN GOSUB CCCC
 IF A$ = "a" THEN LINE (X1, Y1)-(X2, Y2), 0, B: X1 = X1 - 1: X2 = X2 - 1
 IF A$ = "d" THEN LINE (X1, Y1)-(X2, Y2), 0, B: X1 = X1 + 1: X2 = X2 + 1
 IF A$ = "w" THEN LINE (X1, Y1)-(X2, Y2), 0, B: Y1 = Y1 - 1: Y2 = Y2 - 1
 IF A$ = "x" THEN LINE (X1, Y1)-(X2, Y2), 0, B: Y1 = Y1 + 1: Y2 = Y2 + 1
 LINE (X1, Y1)-(X2, Y2), 2, B
 IF A$ = "~" THEN GOSUB CHANGE100
 IF A$ = "$" THEN GOSUB CHANGE10
 IF A$ = "&" THEN GOSUB CHANGE7
 IF A$ = "^" THEN GOSUB CHANGE6
 IF A$ = "U" THEN GOSUB CHANGE5
 IF A$ = "I" THEN GOSUB INVER
 IF A$ = "O" THEN PUT (X1 + X2 - X1 + 1, Y1), F15
 IF A$ = "L" THEN PUT (X1 - X2 + X1 - 1, Y1), F15
 IF A$ = "o" THEN GOSUB KLLLL
 IF A$ = "V" THEN GOTO SS
 IF A$ = "B" THEN GOTO DD
 IF A$ = "*" THEN S = S + 10: IF S > 21 THEN S = 1
 IF PR$ = "P" THEN LOCATE 1, 1: PRINT "Paint ("; A; ","; B; "),"; C; ""
 IF PR$ = "L" THEN LOCATE 1, 1: PRINT "Line ("; A; ","; B; ")-("; A2; ","; B2; "),"; C; ""
 IF PR$ = "C" THEN LOCATE 1, 1: PRINT "Circle ("; A; ","; B; "),"; BIG; ","; C; ""
 IF CER = 1 THEN LOCATE 2, 1: PRINT USING "##.##,"; C1; C2
 IF A$ = "%" THEN LOCATE 5, 1: PRINT POINT(A, B + 1)
 IF CER = 2 THEN LOCATE 2, 1: PRINT USING "##.##,"; -C1; -C2
 IF CER = 3 THEN LOCATE 2, 1: PRINT USING "##.##,"; C1; C2; C3
 IF CER = 4 THEN LOCATE 2, 1: PRINT USING "##.##,"; -C1; -C2; C3
 LINE (11, 40)-(13, 196), 0, BF
 LINE (11, (C) * 5 + 40)-(13, (C) * 5 + 45), C, BF
 LOCATE 3, 1: PRINT "Speed:"; S; "   "; DM; "bytes ";
 IF A$ = "@" THEN GOSUB PPHEY
 IF A$ = CHR$(27) THEN LINE (X1, Y1)-(X2, Y2), 0, BF: FOR VV = 1 TO 20: LINE (1, VV * 5 + 40)-(10, VV * 5 + 45), VV, BF: NEXT VV
 IF A$ = CHR$(0) + CHR$(59) THEN CLS
 IF A$ = "Q" THEN QW = 1: GET (X1, Y1)-(X2, Y2), MONO1
 IF A$ = "W" AND QW = 1 THEN PUT (X1, Y1), MONO1, PSET
 IF A$ = "C" THEN GOSUB CHANGE
 IF A$ = CHR$(0) + "M" OR A$ = "6" THEN DI = 6
 IF A$ = CHR$(0) + "K" OR A$ = "4" THEN DI = 4
 IF A$ = CHR$(0) + "P" OR A$ = "2" THEN DI = 2
 IF A$ = CHR$(0) + "H" OR A$ = "8" THEN DI = 8
 IF A$ = "+" OR A$ = "-" OR A$ = "7" OR A$ = "9" OR A$ = "1" OR A$ = "3" THEN GOSUB CERPD
 IF DI > 0 THEN GOSUB DIRECTION
 IF PR$ = "P" OR PR$ = "L" AND QQ = 0 THEN CIRCLE (A, B), 0, C
 IF PR$ = "C" AND CER = 1 THEN CIRCLE (A, B), BIG, C, C1, C2
 IF PR$ = "C" AND CER = 2 THEN CIRCLE (A, B), BIG, C, -C1, -C2
 IF PR$ = "C" AND CER = 3 THEN CIRCLE (A, B), BIG, C, C1, C2, C3
 IF PR$ = "C" AND CER = 4 THEN CIRCLE (A, B), BIG, C, -C1, -C2, C3
 IF PR$ = "L" AND QQ > 0 THEN LINE (A, B)-(A2, B2), C
 IF A$ = "A" THEN GOSUB BIG
 IF A$ = CHR$(13) OR A$ = "5" THEN GOSUB DECIDE
 IF A$ = "." THEN C = C + 1: IF C > 22 THEN C = 0
 IF A$ = CHR$(0) + CHR$(83) THEN C = C - 1: IF C < 0 THEN C = 20
 IF A$ = "B" OR A$ = "b" OR A$ = "/" THEN GOSUB LB
 IF A$ = "0" THEN LOCATE 1, 1: PRINT TAB(40);
 IF A$ = "0" AND PR$ = "P" THEN PR$ = "L": A$ = ""
 IF A$ = "0" AND PR$ = "L" THEN PR$ = "C": A$ = ""
 IF A$ = "0" AND PR$ = "C" THEN PR$ = "P": A$ = ""
 GOTO DRAWING
DIRECTION:
 IF PR$ = "P" THEN CIRCLE (A, B), 0, 0
 IF PR$ = "L" AND QQ > 0 THEN LINE (A, B)-(A2, B2), 0
 IF PR$ = "L" AND QQ = 0 THEN CIRCLE (A, B), 0, 0
 IF PR$ = "C" AND CER = 1 THEN CIRCLE (A, B), BIG, 0, C1, C2
 IF PR$ = "C" AND CER = 2 THEN CIRCLE (A, B), BIG, 0, -C1, -C2
 IF PR$ = "C" AND CER = 3 THEN CIRCLE (A, B), BIG, 0, C1, C2, C3
 IF PR$ = "C" AND CER = 4 THEN CIRCLE (A, B), BIG, 0, -C1, -C2, C3
 IF PR$ = "L" AND QQ = 2 THEN GOTO LDIR
 IF DI = 6 THEN A = A + S
 IF DI = 4 THEN A = A - S
 IF DI = 2 THEN B = B + S
 IF DI = 8 THEN B = B - S
DIREND:
 DI = 0
 RETURN
DECIDE:
 IF PR$ = "P" THEN GOSUB DEP
 IF PR$ = "L" THEN GOSUB DEL
 IF PR$ = "C" THEN LOCATE 2, 1: PRINT TAB(40); : CER = CER + 1: IF CER > 4 THEN CER = 1
 RETURN
DEP:
 LOCATE 1, 1: PRINT "What is the side colour?": INPUT ; CGA
 LINE (X1, Y1)-(X2, Y2), CGA, B
 IF CGA > -1 THEN CIRCLE (A, B), 0, CGA + 1: PAINT (A, B), C, CGA
 IF A$ = "3" THEN CIRCLE (A, B), 0, 0: PAINT (A, B), C, 3
 LOCATE 1, 1: PRINT TAB(40);
 RETURN
DEL:
 IF QQ = 0 THEN A2 = A: B2 = B
 IF QQ = 0 THEN QQ = 10
 IF QQ = 1 THEN QQ = 20
 IF QQ = 2 THEN QQ = 10
 QQ = QQ / 10
 RETURN
LDIR:
 IF DI = 6 THEN A2 = A2 + S
 IF DI = 2 THEN B2 = B2 + S
 IF DI = 8 THEN B2 = B2 - S
 IF DI = 4 THEN A2 = A2 - S
 DI = 0: RETURN
LB:
 IF PR$ <> "L" THEN RETURN
 LINE (A, B)-(A2, B2), C, BF
 LOCATE 1, 1: PRINT "Line ("; A; ","; B; ")-("; A2; ","; B2; "),"; C; ",BF"
 A$ = INPUT$(1): LOCATE 1, 1: PRINT TAB(40); : RETURN
CERPD:
 IF CER = 1 THEN CIRCLE (A, B), BIG, 0, C1, C2
 IF CER = 2 THEN CIRCLE (A, B), BIG, 0, -C1, -C2
 IF CER = 3 THEN CIRCLE (A, B), BIG, 0, C1, C2, C3
 IF CER = 4 THEN CIRCLE (A, B), BIG, 0, -C1, -C2, C3
 IF A$ = "+" THEN BIG = BIG + S
 IF A$ = "-" THEN BIG = BIG - S: IF BIG < 0 THEN BIG = 0
 IF A$ = "7" THEN C1 = C1 + .19625: IF C1 > 6.28 THEN C1 = 0
 IF A$ = "9" THEN C2 = C2 - .19625: IF C2 < 0 THEN C2 = 6.28
 IF A$ = "1" AND CER > 2 THEN C3 = C3 + .05: IF C3 > 3 THEN C3 = C3 + .45: IF C3 > 16 THEN C3 = C3 + 10
 IF A$ = "3" AND CER > 2 THEN C3 = C3 - .05: IF C3 > 3 THEN C3 = C3 - .45: IF C3 > 16 THEN C3 = C3 - 10
 IF C3 < 0 THEN C3 = 0
 IF C3 > 99 THEN C3 = 99
 RETURN
SS:
 LOCATE 1, 1: INPUT "What name?"; A$
 LINE (0, 0)-(320, 23), 0, BF
 GET (X1 + 1, Y1 + 1)-(X2 - 1, Y2 - 1), F15
 DEF SEG = VARSEG(F15(1))
 BSAVE "C:\bomb\" + A$ + ".GRH", VARPTR(F15(1)), DM * 4
 DEF SEG
 GOTO DRAWING
DD:
 ON ERROR GOTO ERRO
 ON ERROR GOTO ERRO
 LINE (0, 0)-(320, 23), 0, BF
 LOCATE 1, 1: INPUT "What name?"; A$
 LINE (0, 0)-(320, 23), 0, BF
 DEF SEG = VARSEG(F15(1))
 BLOAD "C:\bomb\" + A$ + ".GRH", VARPTR(F15(1))
 DEF SEG
 LINE (X1 + 1, Y1 + 1)-(X2 - 1, Y2 - 1), 0, BF
 PUT (X1 + 1, Y1 + 1), F15
 GOTO DRAWING
DEC:
 LOCATE 1, 1: INPUT "X1"; X1
 LINE (0, 0)-(320, 23), 0, BF
 LOCATE 1, 1: INPUT "Y1"; Y1
 LINE (0, 0)-(320, 23), 0, BF
 PSET (X1, Y1), 5
 LOCATE 1, 1: PRINT "Is it all right?(Y/N)":
 A$ = INPUT$(1)
 IF A$ = "n" OR A$ = "N" THEN CLS 1: GOTO DEC
DEC2:
 LINE (0, 0)-(320, 23), 0, BF
 LOCATE 1, 1: INPUT "X2"; X2
 LOCATE 1, 1: INPUT "Y2"; Y2
 LINE (0, 0)-(320, 23), 0, BF
 PSET (X2, Y2), 5
 LOCATE 1, 1: PRINT "Is it all right?(Y/N)":
 A$ = INPUT$(1)
 IF A$ = "N" OR A$ = "n" THEN CLS 1: GOTO DEC2
 LINE (0, 0)-(320, 23), 0, BF
 LINE (X1, Y1)-(X2, Y2), 5, B
 DM = 4 + INT(((X2 - X1 + 1) * (2 / 8))) * (Y2 - Y1 + 1)
 LOCATE 2, 1: PRINT DM; "bytes      "
 LOCATE 1, 1: PRINT "Is it all right?(Y/N)"
 A$ = INPUT$(1)
 IF A$ = "N" OR A$ = "n" THEN CLS : GOTO DEC
 LINE (0, 0)-(320, 23), 0, BF
 RETURN
CHANGE:
 A$ = INKEY$
 EX20 = 0: EX21 = 0
 IF A$ = "D" THEN EX20 = 20: EX21 = 20
 LINE (0, 0)-(320, 23), 0, BF
 LOCATE 1, 1: INPUT "From"; CA1
 LOCATE 2, 1: INPUT "To"; CA2
 LINE (0, 0)-(320, 23), 0, BF
CHANGE2:
 FOR AS2 = Y1 + 1 + EX20 TO Y2 - 1 - EX21
 FOR AS1 = X1 + 1 TO X2 - 1
 CS = POINT(AS1, AS2)
 IF CS = CA1 THEN PSET (AS1, AS2), CA2
 NEXT AS1
 NEXT AS2
 RETURN
INVER:
 A$ = INPUT$(1)
 IF A$ = "2" THEN GOTO INVER2
 IF A$ = "3" THEN GOTO INVER3
 IF A$ = "1" THEN  ELSE RETURN
 FOR M3 = X1 + 1 TO INT((X1 + X2) / 2)
 GET (M3, Y1 + 1)-(M3, Y2 - 1), M1
 M4 = X2 - (M3 - X1)
 GET (M4, Y1 + 1)-(M4, Y2 - 1), M2
 PUT (M3, Y1 + 1), M1
 PUT (M3, Y1 + 1), M2
 PUT (M4, Y1 + 1), M2
 PUT (M4, Y1 + 1), M1
 NEXT M3
 RETURN
ERRO:
 LOCATE 1, 1: PRINT "File not found!!!": BEEP
 A$ = INPUT$(1)
 GOTO DD
BIG:
 LOCATE 1, 1: INPUT "X1"; X3
 LINE (0, 0)-(320, 23), 0, BF
 LOCATE 1, 1: INPUT "Y1"; Y3
 LINE (0, 0)-(320, 23), 0, BF
 LINE (0, 0)-(320, 23), 0, BF
 LOCATE 1, 1: INPUT "X2"; X4
 LOCATE 1, 1: INPUT "Y2"; Y4
 LINE (0, 0)-(320, 23), 0, BF
 LINE (X1, Y1)-(X2, Y2), 5, B
 TYU = 0
 FOR BIB = Y1 + 1 TO Y2 - 1
 FOR BIA = X1 + 1 TO X2 - 1
 TYU = TYU + 1
 HJH(TYU) = POINT(BIA, BIB)
 NEXT BIA
 NEXT BIB
 TYU = 0
 X5 = INT(X4 - X3 - 1) / (X2 - X1 - 1)
 Y5 = INT(Y4 - Y3 - 1) / (Y2 - Y1 - 1)
 CLS
 FOR BIB = Y3 + 1 TO Y4 - 1 STEP Y5
 FOR BIA = X3 + 1 TO X4 - 1 STEP X5
 TYU = TYU + 1
 LINE (BIA, BIB)-(BIA + X5, BIB + Y5), HJH(TYU), BF
 NEXT BIA
 NEXT BIB
 LINE (X3, Y3)-(X4, Y4), 1, B
 D$ = INPUT$(1)
 RETURN
INVER2:
 FOR M3 = Y1 + 1 TO INT((Y1 + Y2) / 2)
 GET (X1 + 1, M3)-(X2 - 1, M3), M1
 M4 = Y2 - (M3 - Y1)
 GET (X1 + 1, M4)-(X2 - 1, M4), M2
 PUT (X1 + 1, M3), M1
 PUT (X1 + 1, M3), M2
 PUT (X1 + 1, M4), M2
 PUT (X1 + 1, M4), M1
 NEXT M3
 RETURN
INVER3:
 INN = 0
 FOR DB = Y1 + 1 TO Y2 - 1
 FOR DA = X1 + 1 TO X2 - 1
 INN = INN + 1
 INV(INN) = POINT(DA, DB)
 NEXT DA
 NEXT DB
 INN = 0
 FOR DA = X1 + 1 TO X2 - 1
 FOR DB = Y1 + 1 TO Y2 - 1
 INN = INN + 1
 PSET (DA, DB), INV(INN)
 NEXT DB
 NEXT DA
 RETURN
CCCC:
 CA1 = 13: CA2 = 6: GOSUB CHANGE2
 CA1 = 14: CA2 = 10: GOSUB CHANGE2
 CA1 = 16: CA2 = 11: GOSUB CHANGE2
 CA1 = 17: CA2 = 19: GOSUB CHANGE2
 BEEP: BEEP: BEEP: BEEP: BEEP
 RETURN
KLLLL:
 GET (X12, Y12)-(X22, Y22), KLLL
 PUT (X12, Y12), KLLL
 PUT (X13, Y13), KLLL, PSET
 RETURN
CHANGE5:
 CCC = 221
 FOR EX = 101 TO 140
 CCC = CCC - 1
 FOR EX2 = 101 TO 200
 IF POINT(EX2, EX) = 5 THEN PSET (EX2, EX), CCC
 NEXT EX2
 NEXT EX
 RETURN
PPHEY:
 DEF SEG = VARSEG(F15(1))
 BLOAD "C:\davis\SWO15.GRH", VARPTR(F15(1))
 DEF SEG
 PUT (50, 70), F15, PSET
 DEF SEG = VARSEG(F15(1))
 BLOAD "C:\davis\SWO5.GRH", VARPTR(F15(1))
 DEF SEG
 PUT (50, 50), F15
 A$ = INPUT$(1)
 RETURN
CHANGE6:
 CCC = 100
 FOR EX = 100 TO 180
 CCC = CCC + 1
 FOR EX2 = 101 TO 200
 IF POINT(EX2, EX) = 5 THEN PSET (EX2, EX), CCC
 IF POINT(EX2, EX) = 5 AND EX > 159 OR POINT(EX2, EX) > 159 THEN PSET (EX2, EX), 0
 NEXT EX2
 NEXT EX
 RETURN
 RETURN
CHANGE7:
 FOR EX = 1 TO 40
 PALETTE 100 + EX, 60 + (EX + 15) * 256
 NEXT EX
 FOR EX = 40 TO 80
 PALETTE 100 + EX, 60 + 55 * 256 + (EX - 25) * 65536
 NEXT EX
 RETURN
CHANGE10:
 FOR EX = 1 TO 60
 PALETTE 100 + EX, 65536 * (60 - EX)
 NEXT EX
 RETURN
CHANGE100:
 FOR AS2 = Y1 + 1 TO Y2 - 1
 FOR AS1 = X1 + 1 TO X2 - 1
 CS = POINT(AS1, AS2)
 IF CS = 15 THEN PSET (AS1, AS2), 5
 IF CS = 187 THEN PSET (AS1, AS2), 17
 IF CS = 186 THEN PSET (AS1, AS2), 16
 IF CS = 185 THEN PSET (AS1, AS2), 14
 IF CS = 184 THEN PSET (AS1, AS2), 13
 IF CS = 183 THEN PSET (AS1, AS2), 0
 IF CS = 182 THEN PSET (AS1, AS2), 0
 IF CS = 181 THEN PSET (AS1, AS2), 0
 NEXT AS1
 NEXT AS2
 RETURN

