CLEAR , , 3000
JOY = 0
RANDOMIZE (TIMER)
ON KEY(1) GOSUB 801
ON KEY(2) GOSUB 802
ON KEY(3) GOSUB 803
ON KEY(4) GOSUB 804
ON KEY(5) GOSUB 805
ON KEY(6) GOSUB 806
ON KEY(7) GOSUB 807
KEY 15, CHR$(64) + CHR$(1)
ON KEY(15) GOSUB 808
SCREEN 7, 0, 0
CLS
'******CLOCK********
KH1 = 100: KH2 = 100: KX1 = 1500: KY1 = 1500: KX2 = 2000: KY2 = 1000
DIM GL(2, 16, 21)
KM = 10
DIM K(KM, 6)
FOR A = 1 TO 2
FOR B = 1 TO 15: GL(A, B, 21) = 3: GL(A, B, 0) = 3: NEXT B
FOR B = 1 TO 20: GL(A, 0, B) = 3: GL(A, 16, B) = 3: NEXT B
NEXT A
DIM QL(3, 3)
TPP1 = 1: TPP2 = 1: THP1 = 37: THP2 = 37
LCX = 160: LCY = 100: CX = 5 * RND - 2.5: CY = 8 * RND - 4
QY1 = 1: QY2 = 1: QX1 = 1: QX2 = 1
Zsp = .5
DIM ZT$(9)
ZT$(1) = "C1 L10R20L10 C11 U50C10 G10"
ZT$(2) = "C2 R15 L30 C12 E30 U5 C9 H15 L15"
ZT$(3) = "C5 L10 H5 F5 R20 C15 E10 U5 H10 L20C3 C3 R20 E10 U5 H10 L20 G5 "
ZT$(4) = "C0 R15 C13 U50 D20 C7 R1 L21 C3 U20"
ZT$(5) = "C4 L5 H5 F5 R20 E5 U15 H5 L25 C9 U25 C15 R30"
ZT$(6) = "C5 R10 E10 U5 C5 H10 L10 G10 D5 F10 H10 U30 C3 E10 R15 F5"
ZT$(7) = "C6 U25 C14 E15 C4 U10 L17 G10"
ZT$(8) = "C9 L10 H5 U15 E5 H5 U15 C3 E5 R20 F5 D15 G5 L20 R20 C3 F5 D15 G5 L10"
ZT$(9) = "C15 R10 E5 U35 C2 H10 L10 G10 D10 F10 C3 R10 E10"
ZT$(0) = "C9 L5 H10 U30 E10 C1 R10 F10 C3 D30 G10 L5"
ZC$ = "C0 BU10 C1 E5F6G5C2H6 C0U20 C2 E6F5C3G6H5"
'*******SCREEN SAVER*****
DIM VX(10), VY(10), VOX(10, 20), VOY(10, 20)
FOR VN = 1 TO 10
VX(VN) = 320 * RND
VY(VN) = 200 * RND
VR(VN) = 40 * RND - 20
VD(VN) = 40 * RND - 20
NEXT VN
VC = 5
VCD = 1
'********
MN = 10
SCM = 7
SD = 1
RANDOMIZE (TIMER)
DIM MIS(MN, 6)
'MN-HOW MANY CAN BE SHOT AT A TIME
'1-TYPE OF BULET
'2-WHO SHOT IT
'3-X POSITION
'4-Y POSITION
'5-X MOVEMENT
'6-Y MOVEMENT
10  KEY OFF
20 SCREEN SCM
25 'WINDOW SCREEN (0, 0)-(640, 350)
30 CLS
60 DIM WT(8), WN(8, 12), X(8), Y(8), BX(8), BY(8), A(8), W(8), E(8), L(8), M(8), EN(12), AR(12)
70 DIM OX(8), OY(8), D(8), OBX(12), OBY(12), HP(8)
80 DIM S11%(400), S12%(400), S13%(400), S14%(400)
90 DIM S21%(400), S22%(400), S23%(400), S24%(400)
100 DIM S31%(400), S32%(400), S33%(400), S34%(400)
110 DIM S41%(400), S42%(400), S43%(400), S44%(400)
120 DIM S51%(400), S52%(400), S53%(400), S54%(400)
130 DIM S61%(400), S62%(400), S63%(400), S64%(400)
140 DIM S71%(400), S72%(400), S73%(400), S74%(400)
150 DIM S81%(400), S82%(400), S83%(400), S84%(400)
160 OPEN "SHIP.DAT" FOR INPUT AS #1
170 FOR S = 1 TO 8
CLS
190 FOR Y = 1 TO 20 STEP 10
200 FOR X = 1 TO 20 STEP 10
210 INPUT #1, A
215 IF A = 0 THEN C = 0 ELSE C = A + S
IF SCM = 1 AND A > 0 THEN C = A
IF SCM = 13 AND A > 0 THEN C = A * 8 + Y / 2 + X / 2 + 15
IF C = 0 THEN 260
220  PSET (X, Y), C
230  PSET (X + 20, 21 - Y), C
240  PSET (Y + 40, X), C
250  PSET (80 - Y, X), C
260 NEXT X
270 NEXT Y: LOCATE 4, 1
280 INPUT #1, A(S), W(S), E(S)
310 INPUT #1, N$(S)
330 INPUT #1, M(S)
350 IF S = 1 THEN GET (1, 1)-(20, 20), S11%: GET (21, 1)-(40, 20), S12%: GET (41, 1)-(60, 20), S13%: GET (61, 1)-(80, 20), S14%
360 IF S = 2 THEN GET (1, 1)-(20, 20), S21%: GET (21, 1)-(40, 20), S22%: GET (41, 1)-(60, 20), S23%: GET (61, 1)-(80, 20), S24%
370 IF S = 3 THEN GET (1, 1)-(20, 20), S31%: GET (21, 1)-(40, 20), S32%: GET (41, 1)-(60, 20), S33%: GET (61, 1)-(80, 20), S34%
380 IF S = 4 THEN GET (1, 1)-(20, 20), S41%: GET (21, 1)-(40, 20), S42%: GET (41, 1)-(60, 20), S43%: GET (61, 1)-(80, 20), S44%
390 IF S = 5 THEN GET (1, 1)-(20, 20), S51%: GET (21, 1)-(40, 20), S52%: GET (41, 1)-(60, 20), S53%: GET (61, 1)-(80, 20), S54%
400 IF S = 6 THEN GET (1, 1)-(20, 20), S61%: GET (21, 1)-(40, 20), S62%: GET (41, 1)-(60, 20), S63%: GET (61, 1)-(80, 20), S64%
410 IF S = 7 THEN GET (1, 1)-(20, 20), S71%: GET (21, 1)-(40, 20), S72%: GET (41, 1)-(60, 20), S73%: GET (61, 1)-(80, 20), S74%
420 IF S = 8 THEN GET (1, 1)-(20, 20), S81%: GET (21, 1)-(40, 20), S82%: GET (41, 1)-(60, 20), S83%: GET (61, 1)-(80, 20), S84%
430 NEXT S
440 SCREEN 7, 0, 0: CLS
450 DIM COST(12), BONUS(12)
460 FOR A = 1 TO 12
470 READ COST(A), BONUS(A)
480 NEXT A
490 DATA 100,1
500 DATA 150,2
510 DATA 200,3
520 DATA 300,3
530 DATA 10,1
540 DATA 20,2
550 DATA 40,3
560 DATA 50,5
570 DATA 100,6
580 DATA 100,0
590 DATA 300,2
600 DATA 500,4
KEY(0) ON
GOTO 1460
610 CLS : 'STORE
620 LOCATE 1, 1
COLOR 14
IF A = 1 THEN PUT (299, 179), S11%, PSET
IF A = 2 THEN PUT (299, 179), S21%, PSET
IF A = 3 THEN PUT (299, 179), S31%, PSET
IF A = 4 THEN PUT (299, 179), S41%, PSET
IF A = 5 THEN PUT (299, 179), S51%, PSET
IF A = 6 THEN PUT (299, 179), S61%, PSET
IF A = 7 THEN PUT (299, 179), S71%, PSET
IF A = 8 THEN PUT (299, 179), S81%, PSET
640 PRINT "                ARMOR"
660 PRINT "NAME             COST        ADD  HAVE"
IF I = 1 THEN COLOR I ELSE COLOR 15
680 PRINT "1-SHEILD           100$        +1"; WN(A, 1)
IF I = 2 THEN COLOR I ELSE COLOR 15
690 PRINT "2-DOME             150$        +2"; WN(A, 2)
IF I = 3 THEN COLOR I ELSE COLOR 15
700 PRINT "3-PLATING          200$        +3"; WN(A, 3)
IF I = 4 THEN COLOR I ELSE COLOR 15
710 PRINT "4-DEFLECTOR        300$        +1"; WN(A, 4)
COLOR 14
740 PRINT "               WEAPONS"
760 PRINT "NAME             COST        HIT  HAVE"
IF I = 5 THEN COLOR I ELSE COLOR 15
780 PRINT "5-LAZER            10$         D1"; WN(A, 5)
IF I = 6 THEN COLOR I ELSE COLOR 15
790 PRINT "6-PAWS             20$         D2"; WN(A, 6)
IF I = 7 THEN COLOR I ELSE COLOR 15
800 PRINT "7-ARROWS           40$         D3"; WN(A, 7)
IF I = 8 THEN COLOR I ELSE COLOR 15
810 PRINT "8-MISSILE          50$         D5"; WN(A, 8)
IF I = 9 THEN COLOR I ELSE COLOR 15
820 PRINT "9-TORPEDO          100$        D5"; WN(A, 9)
COLOR 14
850 PRINT "               ENGINES"
870 PRINT "NAME             COST       ADD  HAVE"
IF I = 10 THEN COLOR I ELSE COLOR 15
890 PRINT "10-MOTOR            100$       +1"; WN(A, 10)
IF I = 11 THEN COLOR I ELSE COLOR 15
900 PRINT "11-ENGINE           300$       +2"; WN(A, 11)
IF I = 12 THEN COLOR I ELSE COLOR 15
910 PRINT "12-WARP CORE        500$       +4"; WN(A, 12)
920 COLOR 14
PRINT "ARMOR"; A(A) * 10 + AR(A); "ENGINE"; EN(A) + E(A); "WEAPON"; W(A); "MONEY"; M(A); "   "
930 PRINT N$(A)
IF I = 13 THEN COLOR I ELSE COLOR 15
940 PRINT "DONE"
950 A$ = INKEY$: IF A$ <> "" THEN TT = 0
Q = 0
IF JOY = 1 THEN
JX = STICK(0)
JY = STICK(1)
B1 = STRIG(0)
B2 = STRIG(4)
IF JY < 90 THEN I = I - 1: A$ = "]"
IF JY > 110 THEN I = I + 1: A$ = "]"
IF JX < 80 THEN IF I <= 12 AND I >= 1 THEN IF WN(A, I) >= -(JX - 100) / 15 THEN Q = (JX - 100) / 15: A$ = "]"
IF JX > 110 THEN Q = (JX - 100) / 15: A$ = "]"
Q = INT(Q + .5)
IF B1 = -1 THEN Q = 1: A$ = "]"
IF B2 = -1 AND I <= 12 AND I >= 1 THEN IF WN(A, I) >= 1 THEN Q = -1: A$ = "]"
END IF
TT = TT + 1: IF TT > 4000 THEN GOSUB 802: TT = 0
IF A$ = "" AND JOY = 0 THEN 950
COLOR , 0
IF A$ = "1" THEN I = 1
IF A$ = "2" THEN I = 2
IF A$ = "3" THEN I = 3
IF A$ = "4" THEN I = 4
IF A$ = "5" THEN I = 5
IF A$ = "6" THEN I = 6
IF A$ = "7" THEN I = 7
IF A$ = "8" THEN I = 8
IF A$ = "9" THEN I = 9
IF A$ = "0" THEN I = 10
IF A$ = "W" OR A$ = "I" THEN I = I - 1
IF A$ = "S" OR A$ = "K" THEN I = I + 1
IF A$ = "A" OR A$ = "J" AND I <= 12 AND I >= 1 THEN IF WN(A, I) >= 1 THEN Q = -1
IF A$ = "D" OR A$ = "L" THEN Q = 1
IF A$ = "`" THEN Q = INT(ABS(SIN(TIMER) * 100)): SOUND 100 + Q, .1
IF A$ = "Q" THEN I = 13
960 IF I < 1 THEN I = 13
IF I > 13 THEN I = 1
IF Q = 0 THEN GOTO 620
IF I = 13 THEN I = 12: A$ = "": Q = 0: TUR = 1
970 COST = COST(I) * Q
980 IF M(A) < COST THEN SOUND 2000, .1: GOTO 950
990 IF I < 13 THEN WN(A, I) = WN(A, I) + Q
1000 M(A) = M(A) - COST
1010 GOSUB 1040
1020 IF TUR = 1 THEN TUR = 0: GOTO 1 ELSE GOTO 620
1 RETURN
1030 GOTO 1400
1040 LOCATE 1, 1
AR = 0
1250 IF WN(A, 1) > 0 THEN AR = 10
1260 IF WN(A, 2) > 0 THEN AR = 20
1270 IF WN(A, 3) > 0 THEN AR = 30
1280 IF WN(A, 4) > 0 THEN AR = AR + 10
AR(A) = AR
1310 MO = 0
1320 IF WN(A, 10) > 0 THEN EN = 1: MO = 1
1330 IF WN(A, 11) > 0 THEN EN = 2: MO = 1
1340 IF WN(A, 12) > 0 THEN EN = 4: MO = 1
1350 EN = EN * MO: EN(A) = EN
1390 RETURN
1400 FOR A = 1 TO 8
1410 E(A) = EN(A) + E(A)
1420 A(A) = (A(A) + AR(A)) * 10
1430 NEXT A
F1 = 9: F2 = 9
1460 SCREEN SCM
FOR A = 1 TO 8
IF A = 1 THEN PUT (1, A * 22 - 22), S11%, PSET
IF A = 2 THEN PUT (1, A * 22 - 22), S21%, PSET
IF A = 3 THEN PUT (1, A * 22 - 22), S31%, PSET
IF A = 4 THEN PUT (1, A * 22 - 22), S41%, PSET
IF A = 5 THEN PUT (1, A * 22 - 22), S51%, PSET
IF A = 6 THEN PUT (1, A * 22 - 22), S61%, PSET
IF A = 7 THEN PUT (1, A * 22 - 22), S71%, PSET
IF A = 8 THEN PUT (1, A * 22 - 22), S81%, PSET
NEXT A
IF F1 = 1 THEN PUT (1, 1 * 22 - 22), S13%, PSET
IF F1 = 2 THEN PUT (1, 2 * 22 - 22), S23%, PSET
IF F1 = 3 THEN PUT (1, 3 * 22 - 22), S33%, PSET
IF F1 = 4 THEN PUT (1, 4 * 22 - 22), S43%, PSET
IF F1 = 5 THEN PUT (1, 5 * 22 - 22), S53%, PSET
IF F1 = 6 THEN PUT (1, 6 * 22 - 22), S63%, PSET
IF F1 = 7 THEN PUT (1, 7 * 22 - 22), S73%, PSET
IF F1 = 8 THEN PUT (1, 8 * 22 - 22), S83%, PSET
IF F2 = 1 THEN PUT (1, 1 * 22 - 22), S14%, PSET
IF F2 = 2 THEN PUT (1, 2 * 22 - 22), S24%, PSET
IF F2 = 3 THEN PUT (1, 3 * 22 - 22), S34%, PSET
IF F2 = 4 THEN PUT (1, 4 * 22 - 22), S44%, PSET
IF F2 = 5 THEN PUT (1, 5 * 22 - 22), S54%, PSET
IF F2 = 6 THEN PUT (1, 6 * 22 - 22), S64%, PSET
IF F2 = 7 THEN PUT (1, 7 * 22 - 22), S74%, PSET
IF F2 = 8 THEN PUT (1, 8 * 22 - 22), S84%, PSET
IF OF1 <> F1 THEN LINE (0, OF1 * 22 - 23)-(22, OF1 * 22 - 2), 0, BF
IF OF2 <> F2 THEN LINE (0, OF2 * 22 - 23)-(22, OF2 * 22 - 2), 0, BF
IF F1 <> F2 THEN LINE (0, F1 * 22 - 23)-(22, F1 * 22 - 2), 9, B: LINE (0, F2 * 22 - 23)-(22, F2 * 22 - 2), 14, B
IF F1 = F2 THEN LINE (0, F1 * 22 - 23)-(22, F1 * 22 - 2), 0, BF
IF F1 = F2 THEN FOR A = 0 TO 10: LINE (A, F1 * 23 - 22 + A)-(22 - A, F1 * 22 - 2 - A), 10, B, 5000 * RND: NEXT A
1720 A$ = INKEY$: IF A$ <> "" THEN TT = 0
IF F1 = 0 THEN F1 = INT(8 * RND) + 1
IF F2 = 0 THEN F2 = INT(8 * RND) + 1
TT = TT + 1: IF TT > 5000 THEN TT = 0: GOSUB 801
OF1 = F1: OF2 = F2
IF JOY = 1 THEN
JY = STICK(1)
IF JY < 90 THEN F1 = F1 - 1: IF F1 < 1 THEN F1 = 9: IF A$ = "" THEN A$ = "]"
IF JY > 110 THEN F1 = F1 + 1: IF F1 > 9 THEN F1 = 1: IF A$ = "" THEN A$ = "]"
END IF
'IF OF1 = F1 AND OF2 = F2 AND A$ = "" THEN 1720
IF A$ = "W" THEN F1 = F1 - 1: IF F1 < 1 THEN F1 = 9
IF A$ = "S" THEN F1 = F1 + 1: IF F1 > 9 THEN F1 = 1
IF A$ = "I" THEN F2 = F2 - 1: IF F2 < 1 THEN F2 = 9
IF A$ = "K" THEN F2 = F2 + 1: IF F2 > 9 THEN F2 = 1
IF A$ = " " AND F1 = 9 THEN F1 = INT(8 * RND)
IF A$ = " " AND F2 = 9 THEN F2 = INT(8 * RND)
IF A$ = " " THEN GOTO 1729
IF A$ = "q" THEN SHELL "CD..": RUN "MENU"
1728 GOTO 1460
1729 A = F1: GOSUB 610: A = F2: GOSUB 610
1740 PRINT N$(F1); " AND "; N$(F2); " ARE GOING TO FIGHT!"
1750 PLAY "MB L8 A L4 A L8 B L4 B C"
1760 IF INKEY$ = "" THEN 1760
1780 CLS
1790 X(F1) = 10: OX(F1) = X(F1): D(F1) = 2
1800 Y(F1) = 100: OY(F1) = Y(F1)
1810 X(F2) = 290: OX(F2) = X(F2): D(F2) = 4
1820 Y(F2) = 180 * RND: OY(F2) = Y(F2)
1821 HP(F1) = A(F1) * 10 + AR(F1): HP(F2) = A(F2) * 10 + AR(F2)
1825 REM PLAYING
1830 D = D(F1): ON F1 GOSUB 2080, 2140, 2200, 2260, 2320, 2380, 2440, 2500
1840 D = D(F2): ON F2 GOSUB 2080, 2140, 2200, 2260, 2320, 2380, 2440, 2500
1850 OX(F1) = X(F1): OY(F1) = Y(F1): OX(F2) = X(F2): OY(F2) = Y(F2)
1860 A$ = INKEY$
IF CH = 1 THEN CH = 0: W = F1: GOSUB 3015: W = F2: GOSUB 3015
1861 IF HP(F1) <= 0 THEN M(F2) = M(F2) + M(F1) * 2 + A(F1) * 50 + 100: A$ = "*": LOCATE 3, 1: PRINT N$(F2); " WON!": N = F1: O = F2: GOSUB 7000
1862 IF HP(F2) <= 0 THEN M(F1) = M(F1) + M(F2) * 2 + A(F2) * 50 + 100: A$ = "*": LOCATE 3, 20: PRINT N$(F1); " WON!": N = F2: O = F1: GOSUB 7000
1865 IF A$ = "*" THEN CLS : GOTO 1460
IF JOY = 1 THEN
JX = STICK(0)
JY = STICK(1)
B1 = STRIG(0)
B2 = STRIG(4)
IF JX < 90 THEN D(F1) = 4
IF JX > 110 THEN D(F1) = 2
IF JY < 90 THEN D(F1) = 1
IF JY > 110 THEN D(F1) = 3
IF JX < 90 AND JY < 90 THEN IF RND > .5 THEN D(F1) = 4 ELSE D(F1) = 1
IF JX < 90 AND JY > 110 THEN IF RND > .5 THEN D(F1) = 3 ELSE D(F1) = 4
IF JX > 110 AND JY > 110 THEN IF RND > .5 THEN D(F1) = 2 ELSE D(F1) = 3
IF JX > 110 AND JY < 90 THEN IF RND > .5 THEN D(F1) = 1 ELSE D(F1) = 2
IF B1 = -1 THEN SX = X(F1) + 10: SY = Y(F1) + 10: WHO = F1: D = D(F1): T = WT(F1): GOSUB 109
IF B2 = -1 THEN W = F1: GOSUB 3000
END IF
1870 IF A$ = "A" THEN D(F1) = D(F1) - 1: IF D(F1) < 1 THEN D(F1) = 4
1875 IF A$ = "S" THEN W = F1: GOSUB 3000
1880 IF A$ = "D" THEN D(F1) = D(F1) + 1: IF D(F1) > 4 THEN D(F1) = 1
1885 IF A$ = "W" THEN SX = X(F1) + 10: SY = Y(F1) + 10: WHO = F1: D = D(F1): T = WT(F1): GOSUB 109
1890 IF A$ = "J" THEN D(F2) = D(F2) - 1: IF D(F2) < 1 THEN D(F2) = 4
1895 IF A$ = "K" THEN W = F2: GOSUB 3000
1900 IF A$ = "L" THEN D(F2) = D(F2) + 1: IF D(F2) > 4 THEN D(F2) = 1
1905 IF A$ = "I" THEN SX = X(F2) + 10: SY = Y(F2) + 10: WHO = F2: D = D(F2): T = WT(F2): GOSUB 109
IF A$ = "-" THEN SD = SD * 1.1
IF A$ = "+" THEN SD = SD / 1.1
1906 IF WN(W, 5) <= 0 THEN WN(W, 5) = 10
FOR A = 1 TO MN
IF MIS(A, 1) = 0 THEN GOTO 108
T = MIS(A, 1): WHO = MIS(A, 2): SX = MIS(A, 3): SY = MIS(A, 4): MX = MIS(A, 5): MY = MIS(A, 6)
OSX = SX: OSY = SY
OT = T
IF T = 5 AND WHO = F1 THEN IF SX - 5 > X(F2) + 10 THEN MX = MX - .1 / SD ELSE IF SX + 5 < X(F2) + 10 THEN MX = MX + .1 / SD ELSE MX = MX / 2
IF T = 5 AND WHO = F1 THEN IF SY - 5 > Y(F2) + 10 THEN MY = MY - .1 / SD ELSE IF SY + 5 < Y(F2) + 10 THEN MY = MY + .1 / SD ELSE MY = MY / 2
IF T = 5 AND WHO = F2 THEN IF SX - 5 > X(F1) + 10 THEN MX = MX - .1 / SD ELSE IF SX + 5 < X(F1) + 10 THEN MX = MX + .1 / SD ELSE MX = MX / 2
IF T = 5 AND WHO = F2 THEN IF SY - 5 > Y(F1) + 10 THEN MY = MY - .1 / SD ELSE IF SY + 5 < Y(F1) + 10 THEN MY = MY + .1 / SD ELSE MY = MY / 2
IF MX > 10 / SD THEN MX = 10 / SD
IF MY > 10 / SD THEN MY = 10 / SD
IF MX < -10 / SD THEN MX = -10 / SD
IF MY < -10 / SD THEN MY = -10 / SD
IF WHO = F1 AND WN(F2, 4) > 0 AND T = 5 THEN MX = -MX / 2: MY = -MY / 2
IF WHO = F2 AND WN(F1, 4) > 0 AND T = 5 THEN MX = -MX / 2: MY = -MY / 2
SX = SX + MX * 8: SY = SY + MY * 9
IF SX < -10 OR SY < -10 OR SX > 330 OR SY > 210 THEN T = 0
IF WHO = F1 THEN IF SX > X(F2) AND SX < X(F2) + 20 AND SY > Y(F2) AND SY < Y(F2) + 20 THEN T = 9: T = 6
IF WHO = F2 THEN IF SX > X(F1) AND SX < X(F1) + 20 AND SY > Y(F1) AND SY < Y(F1) + 20 THEN T = 9: T = 7
IF T = 1 THEN LINE (OSX, OSY)-(SX, SY), 0: LINE (SX, SY)-(SX + MX * T * 5, SY + MY * T * 6), WHO + 32
IF OT > 1 THEN CIRCLE (OSX, OSY), OT, 0
IF T = 7 THEN HP(F1) = HP(F1) - INT(BONUS(WT(F2))) - W(F2)
IF T = 6 THEN HP(F2) = HP(F2) - INT(BONUS(WT(F1))) - W(F1)
IF T = 6 OR T = 7 THEN T = 0: FOR B = 1 TO 10: CIRCLE (SX, SY), B, 2: CIRCLE (SX, SY), B - 1, 0: NEXT B: CIRCLE (SX, SY), B - 1, 0
IF T > 1 THEN CIRCLE (SX, SY), T, WHO
MIS(A, 1) = T: MIS(A, 3) = SX: MIS(A, 4) = SY: MIS(A, 5) = MX: MIS(A, 6) = MY
108 NEXT A
LOCATE 2, 1: PRINT N$(F1); HP(F1); "  "
LOCATE 2, 20: PRINT N$(F2); HP(F2); "  "
IF X(F1) < X(F2) + 10 AND X(F1) + 20 > X(F2) + 10 AND Y(F1) < Y(F2) + 10 AND Y(F1) + 20 > Y(F2) + 10 THEN D(F1) = INT(4 * RND) + 1: D(F2) = INT(4 * RND) + 1: FOR A = 1 TO 10: SOUND 100 + A * RND * 10, A / 100: NEXT A: FOR A = 1 TO 10: LINE (X(F1) + 10 * RND - 5, Y(F2) + 10 * RND - 5)-(X(F2) + 10 * RND - 5, Y(F1) + 10 * RND - 5), 256 * RND: NEXT A
1910 IF D(F1) = 1 THEN Y(F1) = Y(F1) - (E(F1) + EN(F1)) / SD
1920 IF D(F1) = 2 THEN X(F1) = X(F1) + (E(F1) + EN(F1)) / SD
1930 IF D(F1) = 3 THEN Y(F1) = Y(F1) + (E(F1) + EN(F1)) / SD
1940 IF D(F1) = 4 THEN X(F1) = X(F1) - (E(F1) + EN(F1)) / SD
1950 IF D(F2) = 1 THEN Y(F2) = Y(F2) - (E(F2) + EN(F2)) / SD
1960 IF D(F2) = 2 THEN X(F2) = X(F2) + (E(F2) + EN(F2)) / SD
1970 IF D(F2) = 3 THEN Y(F2) = Y(F2) + (E(F2) + EN(F2)) / SD
1980 IF D(F2) = 4 THEN X(F2) = X(F2) - (E(F2) + EN(F2)) / SD
1990 IF X(F1) < 0 THEN X(F1) = 299
2000 IF X(F1) > 299 THEN X(F1) = 0
2010 IF Y(F1) < 0 THEN Y(F1) = 179
2020 IF Y(F1) > 179 THEN Y(F1) = 0
2030 IF X(F2) < 0 THEN X(F2) = 299
2040 IF X(F2) > 299 THEN X(F2) = 0
2050 IF Y(F2) < 0 THEN Y(F2) = 179
2060 IF Y(F2) > 179 THEN Y(F2) = 0
2070 GOTO 1830
2080 LINE (OX(1), OY(1))-(OX(1) + 20, OY(1) + 20), 0, BF
2090 IF D = 1 THEN PUT (X(1), Y(1)), S12%, PSET
2100 IF D = 2 THEN PUT (X(1), Y(1)), S13%, PSET
2110 IF D = 3 THEN PUT (X(1), Y(1)), S11%, PSET
2120 IF D = 4 THEN PUT (X(1), Y(1)), S14%, PSET
2130 RETURN
2140 LINE (OX(2), OY(2))-(OX(2) + 20, OY(2) + 20), 0, BF
2150 IF D = 1 THEN PUT (X(2), Y(2)), S22%, PSET
2160 IF D = 2 THEN PUT (X(2), Y(2)), S23%, PSET
2170 IF D = 3 THEN PUT (X(2), Y(2)), S21%, PSET
2180 IF D = 4 THEN PUT (X(2), Y(2)), S24%, PSET
2190 RETURN
2200 LINE (OX(3), OY(3))-(OX(3) + 20, OY(3) + 20), 0, BF
2210 IF D = 1 THEN PUT (X(3), Y(3)), S32%, PSET
2220 IF D = 2 THEN PUT (X(3), Y(3)), S33%, PSET
2230 IF D = 3 THEN PUT (X(3), Y(3)), S31%, PSET
2240 IF D = 4 THEN PUT (X(3), Y(3)), S34%, PSET
2250 RETURN
2260 LINE (OX(4), OY(4))-(OX(4) + 20, OY(4) + 20), 0, BF
2270 IF D = 1 THEN PUT (X(4), Y(4)), S42%, PSET
2280 IF D = 2 THEN PUT (X(4), Y(4)), S43%, PSET
2290 IF D = 3 THEN PUT (X(4), Y(4)), S41%, PSET
2300 IF D = 4 THEN PUT (X(4), Y(4)), S44%, PSET
2310 RETURN
2320 LINE (OX(5), OY(5))-(OX(5) + 20, OY(5) + 20), 0, BF
2330 IF D = 1 THEN PUT (X(5), Y(5)), S52%, PSET
2340 IF D = 2 THEN PUT (X(5), Y(5)), S53%, PSET
2350 IF D = 3 THEN PUT (X(5), Y(5)), S51%, PSET
2360 IF D = 4 THEN PUT (X(5), Y(5)), S54%, PSET
2370 RETURN
2380 LINE (OX(6), OY(6))-(OX(6) + 20, OY(6) + 20), 0, BF
2390 IF D = 1 THEN PUT (X(6), Y(6)), S62%, PSET
2400 IF D = 2 THEN PUT (X(6), Y(6)), S63%, PSET
2410 IF D = 3 THEN PUT (X(6), Y(6)), S61%, PSET
2420 IF D = 4 THEN PUT (X(6), Y(6)), S64%, PSET
2430 RETURN
2440 LINE (OX(7), OY(7))-(OX(7) + 20, OY(7) + 20), 0, BF
2450 IF D = 1 THEN PUT (X(7), Y(7)), S72%, PSET
2460 IF D = 2 THEN PUT (X(7), Y(7)), S73%, PSET
2470 IF D = 3 THEN PUT (X(7), Y(7)), S71%, PSET
2480 IF D = 4 THEN PUT (X(7), Y(7)), S74%, PSET
2490 RETURN
2500 LINE (OX(8), OY(8))-(OX(8) + 20, OY(8) + 20), 0, BF
2510 IF D = 1 THEN PUT (X(8), Y(8)), S82%, PSET
2520 IF D = 2 THEN PUT (X(8), Y(8)), S83%, PSET
2530 IF D = 3 THEN PUT (X(8), Y(8)), S81%, PSET
2540 IF D = 4 THEN PUT (X(8), Y(8)), S84%, PSET
2550 RETURN
3000 WT(W) = WT(W) + 1
3010 IF WT(W) > 9 THEN WT(W) = 5
3011 IF WN(W, 5) <= 10 THEN WN(W, 5) = 10
3015 WN = WN(W, WT(W))
3020 IF WN <= 0 THEN 3000
3021 IF W = F1 THEN LOCATE 1, 1
3022 IF W = F2 THEN LOCATE 1, 20
3030 IF WT(W) = 5 THEN PRINT "LAZER"; WN;
3040 IF WT(W) = 6 THEN PRINT "PAW"; WN;
3050 IF WT(W) = 7 THEN PRINT "ARROW"; WN;
3060 IF WT(W) = 8 THEN PRINT "MISSILE"; WN;
3070 IF WT(W) = 9 THEN PRINT "TORPEDO"; WN;
3075 PRINT "         "
3080 RETURN
4000 'SHOOT
'SHOOT, N
IF N = 1 THEN N = F1: O = F2 ELSE N = F2: O = F1
WU = WT(N)
D = (W(N) + 1) * 50 + 100
P = INT(BONUS(WU))
X = X(N) + 10: Y = Y(N) + 10
XS = X
YS = Y
IF WT(N) = 9 THEN GOSUB 6000: GOTO 5000
FOR A = 20 TO D STEP 10
H = 0
XS = X + A * XM: YS = Y + A * YM
CIRCLE (XS, YS), P, 3
IF XS > X(O) - 5 AND XS < X(O) + 25 AND YS > Y(O) - 5 AND YS < Y(O) + 25 THEN FOR C = 1 TO P * 10 STEP 2: CIRCLE (XS, YS), C, 2: CIRCLE (XS, YS), C, 0: SOUND 37 + C * RND, .1: NEXT C: A = D: H = 1: M(N) = M(N) + INT(10 * RND)
IF H = 1 THEN HP(O) = HP(O) - P: SOUND 37, .1
CIRCLE (XS, YS), P, 0
IF XS < 0 OR YS < 0 OR XS > 320 OR XY > 200 THEN A = D
SOUND 100 + A, P / 50
NEXT A
5000
CH = 1
RETURN
6000
FOR A = 20 TO D STEP 4
H = 0
IF XS > X(O) THEN XM = -1: X = X - 1
IF XS < X(O) THEN XM = 1: X = X + 1
IF YS > Y(O) THEN YM = -1: Y = Y - 1
IF YS < Y(O) THEN YM = 1: Y = Y + 1
IF WN(O, 4) > 0 THEN YM = -YM: XM = -XM
YS = YS + YM * 5
XS = XS + XM * 5
IF WN(O, 4) > 0 THEN YM = -YM: XM = -XM
CIRCLE (XS, YS), P, 2
IF XS > X(O) - 5 AND XS < X(O) + 25 AND YS > Y(O) - 5 AND YS < Y(O) + 25 THEN FOR C = 1 TO P * 10 STEP 2: CIRCLE (XS, YS), C, 12: CIRCLE (XS, YS), C, 0: SOUND 37 + C * RND, .1: NEXT C: A = D: H = 1: M(N) = M(N) + INT(10 * RND)
IF H = 1 THEN HP(O) = HP(O) - P: SOUND 37, .1
SOUND 100 + A, P / 50
CIRCLE (XS, YS), P, 0
NEXT A
RETURN
7000 'EXPOLSION
FOR B = 50 TO 0 STEP -2
FOR A = 2 * RND TO B STEP 2
CIRCLE (X(N) + 10, Y(N) + 10), A, B
SOUND 37 + (A + B * 10) * RND, .08
CIRCLE (X(N) + 10, Y(N) + 10), A, 0
NEXT A
NEXT B
A$ = "*"
RETURN
109 MA = 0: 'SHOOT BULLET
W = WHO: GOSUB 3015
IF WHO = F1 THEN S1 = 1: S2 = INT(MN / 2) ELSE IF WHO = F2 THEN S1 = INT(MN / 2) + 1: S2 = MN
FOR A = S1 TO S2
IF MIS(A, 1) = 0 THEN MA = A: A = MN
NEXT A
A = MA
IF A = 0 THEN RETURN
IF WN(WHO, WT(WHO)) <= 0 THEN W = WHO: GOSUB 3000: RETURN ELSE WN(WHO, WT(WHO)) = WN(WHO, WT(WHO)) - 1
IF D = 1 THEN MX = 0: MY = -1 / SD: SY = SY - 10
IF D = 2 THEN MX = 1 / SD: MY = 0: SX = SX + 10
IF D = 3 THEN MX = 0: MY = 1 / SD: SY = SY + 10
IF D = 4 THEN MX = -1 / SD: MY = 0: SX = SX - 10
MX = MX * E(WHO) / 3
MIS(A, 1) = T - 4: MIS(A, 2) = WHO
MIS(A, 3) = SX: MIS(A, 4) = SY
MIS(A, 5) = MX: MIS(A, 6) = MY
RETURN
801  SCREEN SCM, 1, 1
KEY(0) OFF
V1:
KEY(15) ON
KEY(15) STOP
IF INKEY$ <> "" THEN RT = 1
SCREEN SCM, 1, 1
FOR VN = 1 TO 2
VOX(VN, 0) = VX(VN): VOY(VN, 0) = VY(VN)
FOR VA = 20 TO 1 STEP -1
VOX(VN, VA) = VOX(VN, VA - 1)
VOY(VN, VA) = VOY(VN, VA - 1)
NEXT VA
VX(VN) = VX(VN) + VR(VN)
VY(VN) = VY(VN) + VD(VN)
IF VX(VN) < 0 OR VX(VN) > 320 THEN VR(VN) = -VR(VN)
IF VY(VN) < 0 OR VY(VN) > 200 THEN VD(VN) = -VD(VN)
VM = VN + 1: IF VM > 2 THEN VM = 1
LINE (VX(VN), VY(VN))-(VX(VM), VY(VM)), VC
LINE (VOX(VN, 20), VOY(VN, 20))-(VOX(VM, 20), VOY(VM, 20)), 0
NEXT VN
VC = VC + VCD: IF VC > 15 OR VC < 0 THEN VCD = -VCD
IF RT = 1 THEN RT = 0: WINDOW SCREEN (0, 0)-(319, 199): SCREEN SCM, 0, 0: KEY(0) ON: RETURN ELSE GOTO V1
802 SCREEN 7, 2, 2
KEY(0) OFF
WINDOW SCREEN (1, 1)-(20, 10)
Z1:
IF INKEY$ <> "" THEN RT = 1
KEY(15) ON
KEY(15) STOP
FOR ZA = 1 TO 8
ZOA$(ZA) = ZA$(ZA)
ZA$(ZA) = MID$(TIME$, ZA, 1)
IF ZA = 3 OR ZA = 6 THEN ZA$(ZA) = ZC$
IF ZA$(ZA) = "0" THEN ZA$(ZA) = ZT$(0)
IF ZA$(ZA) = "1" THEN ZA$(ZA) = ZT$(1)
IF ZA$(ZA) = "2" THEN ZA$(ZA) = ZT$(2)
IF ZA$(ZA) = "3" THEN ZA$(ZA) = ZT$(3)
IF ZA$(ZA) = "4" THEN ZA$(ZA) = ZT$(4)
IF ZA$(ZA) = "5" THEN ZA$(ZA) = ZT$(5)
IF ZA$(ZA) = "6" THEN ZA$(ZA) = ZT$(6)
IF ZA$(ZA) = "7" THEN ZA$(ZA) = ZT$(7)
IF ZA$(ZA) = "8" THEN ZA$(ZA) = ZT$(8)
IF ZA$(ZA) = "9" THEN ZA$(ZA) = ZT$(9)
NEXT ZA
ZOH = ZH: ZOM = ZM
ZH = (ASC(MID$(TIME$, 1, 1)) - 48) * 10 + (ASC(MID$(TIME$, 2, 1)) - 48)
ZM = (ASC(MID$(TIME$, 4, 1)) - 48) * 10 + (ASC(MID$(TIME$, 5, 1)) - 48)
ZD = ZD + Zsp
IF ZD < 4 THEN ZD = 3.999
IF ZD < 4 OR ZD > 8 THEN Zsp = -Zsp
FOR ZA = 1 TO 8
IF ZOA$(ZA) <> ZA$(ZA) THEN LINE (ZA * 2 - 1, 0)-(ZA * 2 + 2, 10), ZC, BF
NEXT ZA
FOR ZA = 1 TO 8
'IF ZOA$(ZA) = ZA$(ZA) AND ZOA$(ZA + 1) = ZA$(ZA + A) THEN GOTO Z5
PSET (ZA * 2, 5), 0
DRAW ZA$(ZA)
PSET (ZA * 2 + .1, 5), 0
DRAW ZA$(ZA)
PSET (ZA * 2 + .1, 5.1), 0
DRAW ZA$(ZA)
Z5:
NEXT ZA
IF RT = 1 THEN RT = 0: SCREEN 7, 0, 0: WINDOW SCREEN (0, 0)-(319, 199): KEY(0) ON: RETURN ELSE GOTO Z1
803 SCREEN , 3, 3: KEY(0) OFF
L1: KEY(15) ON: KEY(15) STOP
LA$ = INKEY$
LINE (0, 99)-(320, 99), 12
LINE (0, 100)-(320, 102), 4, BF
LINE (0, 103)-(320, 103), 8
IF JOY = 1 THEN
JX = STICK(0)
B1 = STRIG(0)
B2 = STRIG(4)
LT = 0
IF JX < 95 THEN LT = -1
IF JX > 105 THEN LT = 1
IF B1 = -1 THEN LTP = 0
IF B2 = -1 THEN IF PPT = 1 THEN PPT = 0 ELSE PPT = 1
END IF
IF LA$ = "S" THEN LT = 0
IF LA$ = "A" THEN LT = -1
IF LA$ = "D" THEN LT = 1
IF LA$ = "K" THEN LB = 0
IF LA$ = "J" THEN LB = -1
IF LA$ = "L" THEN LB = 1
IF LA$ = "W" THEN LTP = 0
IF LA$ = "I" THEN LBP = 0
IF LA$ = "O" THEN PPB = 1
IF LA$ = "U" THEN PPB = 0
IF LA$ = "E" THEN PPT = 1
IF LA$ = "Q" THEN PPT = 0
IF CY > 75 THEN CY = 75
OLTX = LTX: OLBX = LBX: OLCX = LCX: OLCY = LCY: OYB = YB: OYT = YT
YB = 35
YT = 35
IF PPB > 0 THEN IF LCX < LBX THEN LB = -1 ELSE LB = 1
IF PPT > 0 THEN IF LCX < LTX THEN LT = -1 ELSE LT = 1
IF PPT > 0 AND CY > 0 THEN IF LTX > 166 + YT / 3 THEN LT = -1 ELSE IF LTX < 154 - YT / 2 THEN LT = 1 ELSE LT = 0
IF PPB > 0 AND CY < 0 THEN IF LBX > 166 + YB / 3 THEN LB = -1 ELSE IF LBX < 154 - YB / 2 THEN LB = 1 ELSE LB = 0
IF PPB > 0 THEN IF ABS(CX) > 1.4 OR ABS(CY) < 50 THEN IF LCX > LBX - YB / 1.1 AND LCX < LBX + YB / 2 THEN LB = 0
IF PPT > 0 THEN IF ABS(CX) > 1.4 OR ABS(CY) < 45 THEN IF LCX > LTX - YT / 1.1 AND LCX < LTX + YT / 2 THEN LT = 0
CX = CX + RND / 2 - 1 / 4
LCX = LCX + CX
LCY = LCY + CY
IF LCX < 0 THEN LCX = 0: CX = -CX: SOUND 200, .2: SOUND 100, .1: SOUND 300, .2
IF LCX > 320 THEN LCX = 320: CX = -CX: SOUND 200, .2: SOUND 100, .1: SOUND 300, .2
IF ABS(CY) < 3 THEN IF LTP < LTB THEN CY = 4 * RND ELSE CY = -4 * RND
IF LB < -10 THEN LB = -10
IF LB > 10 THEN LB = 10
LTX = LTX + LT * YT / 2 + LT * 5: LBX = LBX + LB * YB / 2 + LB * 5
IF LTX < 0 THEN LTX = 0: LT = -LT: SOUND 300, .2: SOUND 400, .1: SOUND 200, .2
IF LTX > 320 THEN LTX = 320: LT = -LT: SOUND 300, .2: SOUND 400, .1: SOUND 200, .2
IF LBX < 0 THEN LBX = 0: LB = -LB: SOUND 300, .2: SOUND 400, .1: SOUND 200, .2
IF LBX > 320 THEN LBX = 320: LB = -LB: SOUND 300, .2: SOUND 400, .1: SOUND 200, .2
IF LCY < 20 AND LCX > LTX - YT AND LCX < LTX + YT THEN CX = (LT * YT / 2 + LT * 5 + CX) / 2: CY = ABS(CY) / .9: SOUND 200, .2: SOUND 100, .1: SOUND 300, .2: LCY = OLCY
IF LCY > 180 AND LCX > LBX - YB AND LCX < LBX + YB THEN CX = (LB * YB / 2 + LB * 5 + CX) / 2: CY = -ABS(CY) / .9: SOUND 200, .2: SOUND 100, .1: SOUND 300, .2: LCY = OLCY
IF LCY > 200 THEN LCX = 160: LCY = 100: CX = 20 * RND - 10: CY = 0: FOR LA = 1 TO 100: LINE (OLTX - OYT, 0)-(OLTX + OYT, 20), 16 * RND, BF: LINE (OLTX - OYT, 0)-(OLTX + OYT, 20), 0, BF: NEXT LA: LTP = LTP + 1
IF LCY < 0 THEN LCX = 160: LCY = 100: CX = 20 * RND - 10: CY = 0: FOR LA = 1 TO 100: LINE (OLBX - OYB, 180)-(OLBX + OYB, 200), 16 * RND, BF: LINE (OLBX - OYB, 180)-(OLBX + OYB, 200), 0, BF: NEXT LA: LBP = LBP + 1
CIRCLE (OLCX, OLCY), 5, 0
CIRCLE (LCX, LCY), 5, 15
LOCATE 1, 1: COLOR 14: PRINT "SCORE"; LTP
LOCATE 22, 1: COLOR 9: PRINT "SCORE"; LBP
LINE (OLTX - OYT, 0)-(OLTX + OYT, 20), 0, B: LINE (LTX - YT, 0)-(LTX + YT, 20), 9, B
LINE (OLBX - OYB, 180)-(OLBX + OYB, 199), 0, B: LINE (LBX - YB, 180)-(LBX + YB, 199), 10, B
IF RT = 1 THEN RT = 0: KEY(0) ON: SCREEN , 0, 0: RETURN ELSE GOTO L1
804 SCREEN , 4, 4
KEY(0) OFF
Q1:
LINE (0, 24)-(72, 24), 15
LINE (0, 48)-(72, 48), 15
LINE (24, 0)-(24, 72), 15
LINE (48, 0)-(48, 72), 15
LOCATE 11, 2: COLOR 10: PRINT "X-"; QPP1
LOCATE 12, 2: COLOR 9: PRINT "O-"; QPP2
KEY(15) ON
Q2: OQ$ = Q$: Q$ = INKEY$: IF Q$ = "" AND OQ$ = "" AND RT = 0 THEN GOTO Q2:
KEY(15) STOP
IF Q$ = "Q" THEN
FOR QX = 1 TO 3
FOR QY = 1 TO 3
IF QL(QX, QY) = 1 THEN QL(QX, QY) = 0
NEXT QY
NEXT QX
END IF
IF Q$ = "D" THEN Q1 = Q1 + 1
IF Q$ = "A" THEN Q1 = Q1 - 1
IF Q$ = "W" THEN Q1 = Q1 - 3
IF Q$ = "S" THEN Q1 = Q1 + 3
IF Q$ = "E" THEN QL(QX1, QY1) = 1: FOR QA = 1 TO 5: SOUND QA * 100, QA / 10: NEXT QA
IF Q1 < 1 THEN Q1 = Q1 + 9
IF Q1 > 9 THEN Q1 = Q1 - 9
IF Q$ = "U" THEN
FOR QX = 1 TO 3
FOR QY = 1 TO 3
IF QL(QX, QY) = 2 THEN QL(QX, QY) = 0
NEXT QY
NEXT QX
END IF
IF Q$ = "L" THEN Q2 = Q2 + 1
IF Q$ = "J" THEN Q2 = Q2 - 1
IF Q$ = "I" THEN Q2 = Q2 - 3
IF Q$ = "K" THEN Q2 = Q2 + 3
IF Q$ = "O" THEN QL(QX2, QY2) = 2: FOR QA = 1 TO 5: SOUND QA * 100, QA / 10: NEXT QA
OQY1 = QY1: OQX1 = QX1: OQY2 = QY2: OQX2 = QX2
IF Q2 < 1 THEN Q2 = Q2 + 9
IF Q2 > 9 THEN Q2 = Q2 - 9
QY1 = INT((Q1 - .1) / 3 + 1)
QY2 = INT((Q2 - .1) / 3 + 1)
IF Q1 < 4 THEN QX1 = Q1 ELSE IF Q1 > 6 THEN QX1 = Q1 - 6 ELSE QX1 = Q1 - 3
IF Q2 < 4 THEN QX2 = Q2 ELSE IF Q2 > 6 THEN QX2 = Q2 - 6 ELSE QX2 = Q2 - 3
FOR QX = 1 TO 3
FOR QY = 1 TO 3
IF QL(QX, QY) = 0 THEN LINE (QX * 24 - 23, QY * 24 - 23)-(QX * 24 - 2, QY * 24 - 2), 0, BF
IF QL(QX, QY) = 1 THEN LINE (QX * 24 - 24, QY * 24 - 24)-(QX * 24 - 1, QY * 24 - 1), 10: LINE (QX * 24 - 1, QY * 24 - 24)-(QX * 24 - 24, QY * 24 - 1), 10
IF QL(QX, QY) = 2 THEN CIRCLE (QX * 24 - 12, QY * 24 - 12), 12, 9
NEXT QY
NEXT QX
LOCATE OQY1 * 3 - 1, OQX1 * 3 - 1:  PRINT " "
LOCATE OQY2 * 3 - 1, OQX2 * 3 - 1:  PRINT " "
LOCATE QY1 * 3 - 1, QX1 * 3 - 1: COLOR 10: PRINT "X"
LOCATE QY2 * 3 - 1, QX2 * 3 - 1: COLOR 9: PRINT "O"
QP1 = 0
FOR QY = 1 TO 3
QC = 0
FOR QX = 1 TO 3
IF QL(QX, QY) = 1 THEN QC = QC + 1
NEXT QX
IF QC = 3 THEN LINE (0, QY * 24 - 14)-(71, QY * 24 - 10), 10, BF: QP1 = QP1 + 1
NEXT QY
FOR QX = 1 TO 3
QC = 0
FOR QY = 1 TO 3
IF QL(QX, QY) = 1 THEN QC = QC + 1
NEXT QY
IF QC = 3 THEN LINE (QX * 24 - 14, 0)-(QX * 24 - 10, 71), 10, BF: QP1 = QP1 + 1
NEXT QX
IF QL(1, 1) = 1 AND QL(2, 2) = 1 AND QL(3, 3) = 1 THEN QP1 = QP1 + 1: FOR QA = 1 TO 70 STEP 2: LINE (0 + QA, QA)-(2 + QA, 2 + QA), 10, BF: NEXT QA
IF QL(1, 3) = 1 AND QL(2, 2) = 1 AND QL(3, 1) = 1 THEN QP1 = QP1 + 1: FOR QA = 2 TO 71 STEP 2: LINE (0 + QA - 2, 73 - QA - 2)-(QA, 73 - QA), 10, BF: NEXT QA
QP2 = 0
FOR QY = 1 TO 3
QC = 0
FOR QX = 1 TO 3
IF QL(QX, QY) = 2 THEN QC = QC + 1
NEXT QX
IF QC = 3 THEN LINE (0, QY * 24 - 14)-(71, QY * 24 - 10), 9, BF: QP2 = QP2 + 1
NEXT QY
FOR QX = 1 TO 3
QC = 0
FOR QY = 1 TO 3
IF QL(QX, QY) = 2 THEN QC = QC + 1
NEXT QY
IF QC = 3 THEN LINE (QX * 24 - 14, 0)-(QX * 24 - 10, 71), 9, BF: QP2 = QP2 + 1
NEXT QX
IF QL(1, 1) = 2 AND QL(2, 2) = 2 AND QL(3, 3) = 2 THEN QP2 = QP2 + 1: FOR QA = 1 TO 70 STEP 2: LINE (0 + QA, QA)-(2 + QA, 2 + QA), 9, BF: NEXT QA
IF QL(1, 3) = 2 AND QL(2, 2) = 2 AND QL(3, 1) = 2 THEN QP2 = QP2 + 1: FOR QA = 2 TO 71 STEP 2: LINE (0 + QA - 2, 73 - QA - 2)-(QA, 73 - QA), 9, BF: NEXT QA
IF QP1 > 0 THEN QPP1 = QPP1 + QP1
IF QP2 > 0 THEN QPP2 = QPP2 + QP2
IF QP1 > 0 OR QP2 > 0 THEN FOR QA = 1 TO 1000 STEP 5: SOUND 37 + QA, .1: NEXT QA: FOR QX = 1 TO 3: FOR QY = 1 TO 3: QL(QX, QY) = 0: NEXT QY: NEXT QX: SOUND 1000, .3: SOUND 2000, .3: SOUND 500, .5: CLS
IF RT = 1 THEN RT = 0: SCREEN , 0, 0: KEY(0) ON: RETURN ELSE GOTO Q1
805 SCREEN , 5, 5
KEY(0) OFF
T1: KEY(15) ON: KEY(15) STOP
T$ = INKEY$
IF T$ = "U" THEN TPP2 = 0
IF T$ = "Q" THEN TPP1 = 0
OT1 = T1: OT2 = T2
IF TPP1 = 1 AND ABS(T1) < 3 THEN IF TX1 > TX2 THEN T1 = -10 ELSE T1 = 10
IF TPP2 = 1 AND ABS(T2) < 3 THEN IF TX2 > TX1 THEN T2 = -10 ELSE T2 = 10
IF TPP1 = 1 THEN IF TX1 - 15 < TX2 AND TX1 + 15 > TX2 THEN T1 = OT1 / 2
IF TPP2 = 1 THEN IF TX2 - 15 < TX1 AND TX2 + 15 > TX1 THEN T2 = OT2 / 2
IF TPP1 = 1 AND ABS(T1) < 6 THEN IF TBY2 < 50 AND TBY2 > 0 AND TX1 - 10 < TBX2 AND TX1 + 30 > TBX2 THEN IF TBX2 - 10 < TX1 THEN T1 = 10 ELSE T1 = -10
IF TPP2 = 1 AND ABS(T2) < 6 THEN IF TBY1 > 150 AND TBY1 < 200 AND TX2 - 10 < TBX1 AND TX2 + 30 > TBX1 THEN IF TBX1 - 10 < TX2 THEN T2 = 10 ELSE T2 = -10
IF TPP1 = 1 THEN IF TX1 - 20 < TX2 AND TX1 + 20 > TX2 THEN IF TBY1 < 20 OR TBY1 > 200 OR TBX1 - 40 > TX2 OR TBX1 + 40 < TX2 THEN GOSUB T2
IF TPP2 = 1 THEN IF TX2 - 20 < TX1 AND TX2 + 20 > TX1 THEN IF TBY2 > 180 OR TBY2 < 0 OR TBX2 - 40 > TX1 OR TBX2 + 40 < TX1 THEN GOSUB T3
TSS = SIN(TIMER)
TCS = COS(TIMER)
OTLX1 = TLX1: OTLX2 = TLX2: OTLY1 = TLY1: OTLY2 = TLY2
TLX1 = (TX1 + TX2) / 2 + TSS * 20
TLX2 = (TX1 + TX2) / 2 + TCS * 20
TLY1 = 100 + TCS * 20
TLY2 = 100 + TSS * 20
IF T$ = "O" THEN TPP2 = 1
IF T$ = "E" THEN TPP1 = 1
IF T$ = "A" AND ABS(T1) < 6 THEN T1 = -10
IF T$ = "D" AND ABS(T1) < 6 THEN T1 = 10
IF T$ = "J" AND ABS(T2) < 6 THEN T2 = -10
IF T$ = "L" AND ABS(T2) < 6 THEN T2 = 10
IF TF$ = "S" THEN FOR TA = 1 TO 30 STEP 5: CIRCLE (TBX1, TBY1), TA, 4 + INT(RND + .5) * 8: CIRCLE (TBX1, TBY1), TA, 0: NEXT TA: T$ = "W": THP1 = THP1 + .5: TF$ = ""
IF TF$ = "K" THEN FOR TA = 1 TO 30 STEP 5: CIRCLE (TBX2, TBY2), TA, 4 + INT(RND + .5) * 8: CIRCLE (TBX2, TBY2), TA, 0: NEXT TA: T$ = "I": THP2 = THP2 + .5: TF$ = ""
IF T$ = "W" THEN GOSUB T2
IF T$ = "I" THEN GOSUB T3
OTX1 = TX1: OTX2 = TX2
T1 = T1 * .9: T2 = T2 * .9: TX1 = TX1 + T1: TX2 = TX2 + T2
TB1 = TB1 * .91: TB2 = TB2 * .91: TD1 = TD1 * .9: TD2 = TD2 * .9
IF TBX1 - 20 < TX2 AND TBX1 > TX2 AND TBY1 <= 200 AND TBY1 > 180 THEN THP2 = THP2 - 3 * RND - 1: SOUND 300, .1: SOUND 200, .08: SOUND 300, .05: TF$ = "S"
IF TBX2 - 20 < TX1 AND TBX2 > TX1 AND TBY2 < 20 AND TBY2 >= 0 THEN THP1 = THP1 - 3 * RND - 1: SOUND 200, .05: SOUND 300, .08: SOUND 200, .1: TF$ = "K"
LOCATE 1, 1: COLOR 9: PRINT "HP-"; INT(THP1)
LOCATE 20, 1: COLOR 10: PRINT "HP-"; INT(THP2)
IF THP1 <= 0 THEN GOSUB T4
IF THP2 <= 0 THEN GOSUB T5
IF TBX1 - 12 < TLX1 AND TBX1 + 12 > TLX1 AND TBY1 - 12 < TLY1 AND TBY1 + 12 > TLY1 THEN TB1 = -TB1: TD1 = -TD1
IF TBX2 - 12 < TLX2 AND TBX2 + 12 > TLX2 AND TBY2 - 12 < TLY2 AND TBY2 + 12 > TLY2 THEN TB2 = -TB2: TD2 = -TD2
IF TBX2 - 12 < TLX1 AND TBX2 + 12 > TLX1 AND TBY2 - 12 < TLY1 AND TBY2 + 12 > TLY1 THEN TB2 = -TB2: TD2 = -TD2
IF TBX1 - 12 < TLX2 AND TBX1 + 12 > TLX2 AND TBY1 - 12 < TLY2 AND TBY1 + 12 > TLY2 THEN TB1 = -TB1: TD1 = -TD1
CIRCLE (OTLX1, OTLY1), 12, 0
CIRCLE (TLX1, TLY1), 12, 12
CIRCLE (OTLX2, OTLY2), 12, 0
CIRCLE (TLX2, TLY2), 12, 14
CIRCLE (TBX1, TBY1), 2, 0
CIRCLE (TBX2, TBY2), 2, 0
TBX1 = TBX1 + TB1: TBX2 = TBX2 + TB2: TBY1 = TBY1 + TD1: TBY2 = TBY2 + TD2
CIRCLE (TBX1, TBY1), 2, 15
CIRCLE (TBX2, TBY2), 2, 15
IF TX1 < 0 THEN TX1 = 0: T1 = -T1 * 3
IF TX2 < 0 THEN TX2 = 0: T2 = -T2 * 3
IF TX1 > 299 THEN TX1 = 299: T1 = -T1 * 3
IF TX2 > 299 THEN TX2 = 299: T2 = -T2 * 3
IF F1 = 1 THEN PUT (OTX1, 0), S11%, PSET: PUT (OTX1, 0), S11%: PUT (TX1, 0), S11%, PSET
IF F1 = 2 THEN PUT (OTX1, 0), S21%, PSET: PUT (OTX1, 0), S21%: PUT (TX1, 0), S21%, PSET
IF F1 = 3 THEN PUT (OTX1, 0), S31%, PSET: PUT (OTX1, 0), S31%: PUT (TX1, 0), S31%, PSET
IF F1 = 4 THEN PUT (OTX1, 0), S41%, PSET: PUT (OTX1, 0), S41%: PUT (TX1, 0), S41%, PSET
IF F1 = 5 THEN PUT (OTX1, 0), S51%, PSET: PUT (OTX1, 0), S51%: PUT (TX1, 0), S51%, PSET
IF F1 = 6 THEN PUT (OTX1, 0), S61%, PSET: PUT (OTX1, 0), S61%: PUT (TX1, 0), S61%, PSET
IF F1 = 7 THEN PUT (OTX1, 0), S71%, PSET: PUT (OTX1, 0), S71%: PUT (TX1, 0), S71%, PSET
IF F1 = 8 THEN PUT (OTX1, 0), S81%, PSET: PUT (OTX1, 0), S81%: PUT (TX1, 0), S81%, PSET
IF F2 = 1 THEN PUT (OTX2, 179), S12%, PSET: PUT (OTX2, 179), S12%: PUT (TX2, 179), S12%, PSET
IF F2 = 2 THEN PUT (OTX2, 179), S22%, PSET: PUT (OTX2, 179), S22%: PUT (TX2, 179), S22%, PSET
IF F2 = 3 THEN PUT (OTX2, 179), S32%, PSET: PUT (OTX2, 179), S32%: PUT (TX2, 179), S32%, PSET
IF F2 = 4 THEN PUT (OTX2, 179), S42%, PSET: PUT (OTX2, 179), S42%: PUT (TX2, 179), S42%, PSET
IF F2 = 5 THEN PUT (OTX2, 179), S52%, PSET: PUT (OTX2, 179), S52%: PUT (TX2, 179), S52%, PSET
IF F2 = 6 THEN PUT (OTX2, 179), S62%, PSET: PUT (OTX2, 179), S62%: PUT (TX2, 179), S62%, PSET
IF F2 = 7 THEN PUT (OTX2, 179), S72%, PSET: PUT (OTX2, 179), S72%: PUT (TX2, 179), S72%, PSET
IF F2 = 8 THEN PUT (OTX2, 179), S82%, PSET: PUT (OTX2, 179), S82%: PUT (TX2, 179), S82%, PSET
IF RT = 1 THEN RT = 0: SCREEN , 0, 0: KEY(0) ON: RETURN ELSE GOTO T1
T2: CIRCLE (TBX1, TBY1), 2, 0: TBX1 = TX1 + 10: TBY1 = 21: TB1 = T1 / 2: TD1 = 20 * RND + 30: SOUND 1000, .3: SOUND 500, .3: SOUND 100, .2: SOUND 37, .1: RETURN
T3: CIRCLE (TBX2, TBY2), 2, 0: TBX2 = TX2 + 10: TBY2 = 179: TB2 = T2 / 2: TD2 = -20 * RND - 30: SOUND 2000, .3: SOUND 600, .3: SOUND 200, .2: SOUND 37, .1: RETURN
T4:                                                                                                 
IF F1 = 1 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S11%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S13%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S12%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S14%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F1 = 2 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S21%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S23%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S22%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S24%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F1 = 3 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S31%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S33%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S32%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S34%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F1 = 4 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S41%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S43%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S42%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S44%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F1 = 5 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S51%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S53%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S52%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S54%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F1 = 6 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S61%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S63%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S62%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S64%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F1 = 7 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S71%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S73%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S72%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S74%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F1 = 8 THEN FOR TA = 1 TO 10: PUT (TX1, 0), S81%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S83%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S82%, PSET: SOUND TA * 10 + 37, 1: PUT (TX1, 0), S84%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
THP1 = 30: THP2 = 25: RETURN
T5:
IF F2 = 1 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S11%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S14%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S12%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S13%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F2 = 2 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S21%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S24%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S22%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S23%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F2 = 3 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S31%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S34%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S32%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S33%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F2 = 4 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S41%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S44%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S42%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S43%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F2 = 5 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S51%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S54%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S52%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S53%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F2 = 6 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S61%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S64%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S62%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S63%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F2 = 7 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S71%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S74%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S72%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S73%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
IF F2 = 8 THEN FOR TA = 1 TO 10: PUT (TX2, 179), S81%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S84%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S82%, PSET: SOUND TA * 10 + 37, 1: PUT (TX2, 179), S83%, PSET: SOUND TA * 10 + 37, 1: NEXT TA:
THP1 = 25: THP2 = 30: RETURN
806 SCREEN , 6, 6
KEY(0) OFF
G1: KEY(15) ON: KEY(15) STOP
G$ = INKEY$
OGX1 = GX1: OGX2 = GX2: OGY1 = GY1: OGY2 = GY2
GX = GBX1: GY = GBY1 + 1
GL = GL(1, GX, GY): GOSUB G2
GL = GL(2, GX, GY): GX = GX + 16: GOSUB G2
GX = GBX2: GY = GBY2 + 1
GL = GL(1, GX, GY): GOSUB G2
GL = GL(2, GX, GY): GX = GX + 16: GOSUB G2

IF G$ = "W" THEN GY1 = GY1 - 1
IF G$ = "S" THEN GY1 = GY1 + 1
IF G$ = "A" THEN GX1 = GX1 - 1
IF G$ = "D" THEN GX1 = GX1 + 1
IF G$ = "I" THEN GY2 = GY2 - 1
IF G$ = "K" THEN GY2 = GY2 + 1
IF G$ = "J" THEN GX2 = GX2 - 1
IF G$ = "L" THEN GX2 = GX2 + 1
IF GX1 < 1 THEN GX1 = 1 ELSE IF GX1 > 15 THEN GX1 = 15
IF GX2 < 1 THEN GX2 = 1 ELSE IF GX2 > 15 THEN GX2 = 15
IF GY1 < 1 THEN GY1 = 1 ELSE IF GY1 > 20 THEN GY1 = 20
IF GY2 < 1 THEN GY2 = 1 ELSE IF GY2 > 20 THEN GY2 = 20
IF G$ = "Z" THEN CIRCLE (GBX1 * 10 - 5, GBY1 * 10 - 5), 3, 0: GBX1 = GX1: GBY1 = 1: GR1 = 0: GD1 = 0
IF G$ = "M" THEN CIRCLE (GBX2 * 10 - 5 + 160, GBY2 * 10 - 5), 3, 0: GBX2 = GX2: GBY2 = 1: GR2 = 0: GD2 = 0
IF G$ = "C" THEN IF GL(1, GX1, GY1) = 3 THEN GL(1, GX1, GY1) = 4 ELSE GL(1, GX1, GY1) = 3
IF G$ = "." THEN IF GL(2, GX2, GY2) = 3 THEN GL(2, GX2, GY2) = 4 ELSE GL(2, GX2, GY2) = 3
IF G$ = "E" THEN GL(1, GX1, GY1) = 1
IF G$ = "Q" THEN GL(1, GX1, GY1) = 2
IF G$ = "O" THEN GL(2, GX2, GY2) = 1
IF G$ = "U" THEN GL(2, GX2, GY2) = 2
IF G$ = "X" THEN GL(1, GX1, GY1) = 0: IF GX1 = 15 AND GY1 = 20 THEN LINE (0, 0)-(150, 200), 0, BF: FOR GA = 1 TO 15: FOR GB = 1 TO 20: GL(1, GA, GB) = 0: NEXT GB: NEXT GA
IF G$ = "," THEN GL(2, GX2, GY2) = 0: IF GX2 = 15 AND GY2 = 20 THEN LINE (160, 0)-(320, 200), 0, BF: FOR GA = 1 TO 15: FOR GB = 1 TO 20: GL(2, GA, GB) = 0: NEXT GB: NEXT GA
OGBX1 = GBX1: OGBY1 = GBY1: OGD1 = GD1: OGR1 = GR1
OGBX2 = GBX2: OGBY2 = GBY2: OGD2 = GD2: OGR2 = GR2
'IF GR1 > .6 THEN GBX1 = GBX1 + 1 ELSE IF GR1 < -.6 THEN GBX1 = GBX1 - 1
'IF GD1 > .6 THEN GBY1 = GBY1 + 1 ELSE IF GD1 < -.6 THEN GBY1 = GBY1 - 1
'IF GR2 > .6 THEN GBX2 = GBX2 + 1 ELSE IF GR2 < -.6 THEN GBX2 = GBX2 - 1
'IF GD2 > .6 THEN GBY2 = GBY2 + 1 ELSE IF GD2 < -.6 THEN GBY2 = GBY2 - 1
'IF GBX1 < 1 THEN GBX1 = 1 ELSE IF GBX1 > 15 THEN GBX1 = 15
'IF GBX2 < 1 THEN GBX2 = 1 ELSE IF GBX2 > 15 THEN GBX2 = 15
'IF GBY1 < 1 THEN GBY1 = 1 ELSE IF GBY1 > 21 THEN GBY1 = 21
'IF GBY2 < 1 THEN GBY2 = 1 ELSE IF GBY2 > 21 THEN GBY2 = 21
GD1 = GD1 + 1
GD2 = GD2 + 1
GR1 = GR1 * .95
GR2 = GR2 * .95
GD1 = GD1 * .95
GD2 = GD2 * .95
IF GR1 > 1 THEN GBX1 = OGBX1 + 1 ELSE IF GR1 < -1 THEN GBX1 = OGBX1 - 1
IF GR2 > 1 THEN GBX2 = OGBX2 + 1 ELSE IF GR2 < -1 THEN GBX2 = OGBX2 - 1
IF GBX1 < 0 THEN GBX1 = 0 ELSE IF GBX1 > 16 THEN GBX1 = 16
IF GBX2 < 0 THEN GBX2 = 0 ELSE IF GBX2 > 16 THEN GBX2 = 16
GOSUB G3
IF GD1 > 1 THEN GBY1 = OGBY1 + 1 ELSE IF GD1 < -1 THEN GBY1 = OGBY1 - 1
IF GD2 > 1 THEN GBY2 = OGBY2 + 1 ELSE IF GD2 < -1 THEN GBY2 = OGBY2 - 1
IF GBY1 < 0 THEN GBY1 = 0 ELSE IF GBY1 > 21 THEN GBY1 = 21
IF GBY2 < 0 THEN GBY2 = 0 ELSE IF GBY2 > 21 THEN GBY2 = 21
GOSUB G3
IF ABS(GD1) > 400 THEN GD1 = OGD1
IF ABS(GD2) > 400 THEN GD2 = OGD2
IF ABS(GR1) > 400 THEN GR1 = OGR1
IF ABS(GR2) > 400 THEN GR2 = OGR2
IF GL(1, GBX1, GBY1) > 0 THEN GBX1 = OGBX1: GBY1 = OGBY1
IF GL(2, GBX2, GBY2) > 0 THEN GBX2 = OGBX2: GBY2 = OGBY2
CIRCLE (OGBX1 * 10 - 5, OGBY1 * 10 - 5), 3, 0
CIRCLE (GBX1 * 10 - 5, GBY1 * 10 - 5), 3, 14
CIRCLE (OGBX2 * 10 - 5 + 160, OGBY2 * 10 - 5), 3, 0
CIRCLE (GBX2 * 10 - 5 + 160, GBY2 * 10 - 5), 3, 12
GC = 7 * RND + 9
GX = OGX1: GY = OGY1: GL = GL(1, OGX1, OGY1): GOSUB G2
GX = OGX2 + 16: GY = OGY2: GL = GL(2, OGX2, OGY2): GOSUB G2
CIRCLE (GX1 * 10 - 5, GY1 * 10 - 5), 2, 9
CIRCLE (GX2 * 10 - 5 + 160, GY2 * 10 - 5), 2, 10
LINE (150, 0)-(150, 200), 15
LINE (151, 0)-(159, 200), 9, BF
LINE (160, 0)-(160, 200), 1
IF RT = 1 THEN RT = 0: SCREEN , 0, 0: KEY(0) ON: RETURN ELSE GOTO G1
G2: LINE (GX * 10 - 10, GY * 10 - 10)-(GX * 10 - 1, GY * 10 - 1), 0, BF
IF GL = 1 THEN LINE (GX * 10 - 10, GY * 10 - 10)-(GX * 10 - 1, GY * 10 - 1), GC
IF GL = 2 THEN LINE (GX * 10 - 1, GY * 10 - 10)-(GX * 10 - 10, GY * 10 - 1), GC
IF GL = 3 THEN CIRCLE (GX * 10 - 5, GY * 10 - 5), 4, GC
IF GL = 4 THEN LINE (GX * 10 - 10, GY * 10 - 10)-(GX * 10 - 1, GY * 10 - 1), GC, B
RETURN
G3:                                                                                                                                                                                                                                                                 
IF GL(1, GBX1, GBY1) = 3 AND OGBX1 <> GBX1 THEN GBX1 = OGBX1: GR1 = -GR1 * 2
IF GL(1, GBX1, GBY1) = 3 AND OGBY1 <> GBY1 THEN GBY1 = OGBY1: GD1 = -GD1 * 2
IF GL(1, GBX1, GBY1) = 4 AND OGBY1 <> GBY1 THEN GBY1 = OGBY1: GD1 = -GD1
IF GL(1, GBX1, GBY1) = 4 AND OGBX1 <> GBX1 THEN GBX1 = OGBX1: GR1 = -GR1
IF GL(1, GBX1, GBY1) = 1 THEN IF OGBX1 < GBX1 THEN GR1 = GR1 / 2: GD1 = ABS(GD1) + ABS(GR1) / 4
IF GL(1, GBX1, GBY1) = 2 THEN IF OGBX1 < GBX1 THEN GR1 = GR1 / 2: GD1 = -ABS(GD1) - ABS(GR1) / 4
IF GL(1, GBX1, GBY1) = 1 THEN IF OGBX1 > GBX1 THEN GR1 = GR1 / 2: GD1 = -ABS(GD1) - ABS(GR1) / 4
IF GL(1, GBX1, GBY1) = 2 THEN IF OGBX1 > GBX1 THEN GR1 = GR1 / 2: GD1 = ABS(GD1) + ABS(GR1) / 4
IF GL(1, GBX1, GBY1) = 1 THEN IF OGBY1 < GBY1 THEN GD1 = GD1 / 2: GR1 = ABS(GR1) + ABS(GD1) / 4
IF GL(1, GBX1, GBY1) = 2 THEN IF OGBY1 < GBY1 THEN GD1 = GD1 / 2: GR1 = -ABS(GR1) - ABS(GD1) / 4
IF GL(1, GBX1, GBY1) = 1 THEN IF OGBY1 > GBY1 THEN GD1 = GD1 / 2: GR1 = -ABS(GR1) - ABS(GD1) / 4
IF GL(1, GBX1, GBY1) = 2 THEN IF OGBY1 > GBY1 THEN GD1 = GD1 / 2: GR1 = ABS(GR1) + ABS(GD1) / 4
IF GL(2, GBX2, GBY2) = 3 AND OGBX2 <> GBX2 THEN GBX2 = OGBX2: GR2 = -GR2 * 2
IF GL(2, GBX2, GBY2) = 3 AND OGBY2 <> GBY2 THEN GBY2 = OGBY2: GD2 = -GD2 * 2
IF GL(2, GBX2, GBY2) = 4 AND OGBY2 <> GBY2 THEN GBY2 = OGBY2: GD1 = -GD1
IF GL(2, GBX2, GBY2) = 4 AND OGBX2 <> GBX2 THEN GBX2 = OGBX2: GR1 = -GR1
IF GL(2, GBX2, GBY2) = 1 THEN IF OGBX2 < GBX2 THEN GR2 = GR2 / 2: GD2 = ABS(GD2) + ABS(GR2) / 4
IF GL(2, GBX2, GBY2) = 2 THEN IF OGBX2 < GBX2 THEN GR2 = GR2 / 2: GD2 = -ABS(GD2) - ABS(GR2) / 4
IF GL(2, GBX2, GBY2) = 1 THEN IF OGBX2 > GBX2 THEN GR2 = GR2 / 2: GD2 = -ABS(GD2) - ABS(GR2) / 4
IF GL(2, GBX2, GBY2) = 2 THEN IF OGBX2 > GBX2 THEN GR2 = GR2 / 2: GD2 = ABS(GD2) + ABS(GR2) / 4
IF GL(2, GBX2, GBY2) = 1 THEN IF OGBY2 < GBY2 THEN GD2 = GD2 / 2: GR2 = ABS(GR2) + ABS(GD2) / 4
IF GL(2, GBX2, GBY2) = 2 THEN IF OGBY2 < GBY2 THEN GD2 = GD2 / 2: GR2 = -ABS(GR2) - ABS(GD2) / 4
IF GL(2, GBX2, GBY2) = 1 THEN IF OGBY2 > GBY2 THEN GD2 = GD2 / 2: GR2 = -ABS(GR2) - ABS(GD2) / 4
IF GL(2, GBX2, GBY2) = 2 THEN IF OGBY2 > GBY2 THEN GD2 = GD2 / 2: GR2 = ABS(GR2) + ABS(GD2) / 4
RETURN
807 SCREEN , 7, 7: KEY(0) OFF
K1: KEY(15) ON: KEY(15) STOP
LINE (159, 52)-(161, 200), 2, B
LINE (160, 53)-(160, 200), 10
K$ = INKEY$
IF K$ = "-" THEN SD = SD * 1.2: CLS
IF K$ = "+" THEN SD = SD / 1.2: CLS
OKX1 = KX1: OKY1 = KY1: OKD1 = KD1
IF JOY = 1 THEN
JX = STICK(0)
JY = STICK(1)
B1 = STRIG(0)
B2 = STRIG(4)
IF JX < 90 OR JX > 110 THEN KD1 = KD1 - (JX - 100) / 5
IF JY < 90 OR JY > 110 THEN KT1 = KT1 - (JY - 100) / 6
IF B1 = -1 THEN KT = 1: KX = KX1: KY = KY1: KR = 1000: GOSUB K2
IF B2 = -1 THEN KP1 = 0
END IF
IF K$ = "E" THEN KT = 1: KX = KX1: KY = KY1: KR = 1000: GOSUB K2
IF K$ = "Q" THEN KP1 = 0
IF K$ = "W" THEN KT1 = KT1 + 10
IF K$ = "S" THEN KT1 = KT1 - 10
IF K$ = "A" THEN KD1 = KD1 + 15
IF K$ = "D" THEN KD1 = KD1 - 15
IF KD1 < 0 THEN KD1 = KD1 + 360
IF KD1 > 360 THEN KD1 = KD1 - 360
IF KT1 > 50 THEN KT1 = 50
IF KT1 < -20 THEN KT1 = -20
PSET (0, 0), 0: DRAW "C0TA=" + VARPTR$(KD1) + "BU=" + VARPTR$(KT1)
KF1 = KF1 + 30 / SD
KF1 = KF1 - ABS(KT1) / SD
IF KF1 > 2000 THEN KF1 = 2000
IF KF1 <= 0 THEN KF1 = 0: KT1 = KT1 - 10 / SD
KX1 = KX1 + POINT(0) / SD: KY1 = KY1 + POINT(1) / SD
IF KX1 < 0 THEN KX1 = KX1 + 3000
IF KX1 > 3000 THEN KX1 = KX1 = 3000
IF KY1 < 0 THEN KY1 = KY1 + 3000
IF KY1 > 3000 THEN KY1 = KY1 = 3000
OKX2 = KX2: OKY2 = KY2: OKD2 = KD2
IF K$ = "O" THEN KT = 2: KX = KX2: KY = KY2: KR = 1000: GOSUB K3
IF K$ = "U" THEN KP2 = 0
IF K$ = "I" THEN KT2 = KT2 + 10
IF K$ = "K" THEN KT2 = KT2 - 10
IF K$ = "J" THEN KD2 = KD2 + 15
IF K$ = "L" THEN KD2 = KD2 - 15
IF KD2 < 0 THEN KD2 = KD2 + 360
IF KD2 > 360 THEN KD2 = KD2 - 360
IF KT2 > 50 THEN KT2 = 50
IF KT2 < -20 THEN KT2 = -20
PSET (0, 0), 0: DRAW "C0TA=" + VARPTR$(KD2) + "BU=" + VARPTR$(KT2)
KF2 = KF2 + 30 / SD
KF2 = KF2 - ABS(KT2) / SD
IF KF2 > 2000 THEN KF2 = 2000
IF KF2 <= 0 THEN KF2 = 0: KT2 = KT2 - 10 / SD
KX2 = KX2 + POINT(0) / SD: KY2 = KY2 + POINT(1) / SD
IF KX2 < 0 THEN KX2 = KX2 + 3000
IF KX2 > 3000 THEN KX2 = KX2 - 3000
IF KY2 < 0 THEN KY2 = KY2 + 3000
IF KY2 > 3000 THEN KY2 = KY2 - 3000
FOR KA = 1 TO KM
KT = KM(KA, 1)
IF KT = 0 THEN GOTO K4
KRA = KM(KA, 2): KMX = KM(KA, 3): KMY = KM(KA, 4): KR = KM(KA, 5): KD = KM(KA, 6)
IF KR > 70 THEN KR = 70
IF KY > 70 THEN KY = 70
IF KR < -70 THEN KR = -70
IF KY < -70 THEN KY = -70
IF KT = 2 THEN IF KMX - 25 > KX1 THEN KR = KR - 8 / SD ELSE IF KMX + 25 < KX1 THEN KR = KR + 8 / SD ELSE KR = KR / 2
IF KT = 2 THEN IF KMY - 25 > KY1 THEN KD = KD - 8 / SD ELSE IF KMY + 25 < KY1 THEN KD = KD + 8 / SD ELSE KD = KD / 2
IF KT = 1 THEN IF KMX - 25 > KX2 THEN KR = KR - 8 / SD ELSE IF KMX + 25 < KX2 THEN KR = KR + 8 / SD ELSE KR = KR / 2
IF KT = 1 THEN IF KMY - 25 > KY2 THEN KD = KD - 8 / SD ELSE IF KMY + 25 < KY2 THEN KD = KD + 8 / SD ELSE KD = KD / 2
OKMX = KMX: OKMY = KMY
KMX = KMX + KR / SD * 4
KMY = KMY + KD / SD * 4
IF KMX < 0 THEN KMX = KMX + 3000
IF KMY < 0 THEN KMY = KMY + 3000
IF KMX > 3000 THEN KMX = KMX - 3000
IF KMY > 3000 THEN KMY = KMY - 3000
PSET (OKMX / 60 + 135, OKMY / 60), 0
IF OKMX + 80 > OKX1 AND OKMX - 80 < OKX1 AND OKMY - 75 < OKY1 AND OKMY + 75 > OKY1 THEN CIRCLE (OKMX - OKX1 + 80, OKMY - OKY1 + 125), 3, 0
IF OKMX + 80 > OKX2 AND OKMX - 80 < OKX2 AND OKMY - 75 < OKY2 AND OKMY + 75 > OKY2 THEN CIRCLE (OKMX - OKX2 + 240, OKMY - OKY2 + 125), 3, 0
KRA = KRA - ABS(KR) - ABS(KD) - 5
IF KRA < 0 THEN KM(KA, 1) = 0: GOTO K4
IF KT = 1 THEN IF KMX + 80 > KX1 AND KMX - 80 < KX1 AND KMY - 75 < KY1 AND KMY + 75 > KY1 THEN CIRCLE (KMX - KX1 + 80, KMY - KY1 + 125), 3, 12
IF KT = 1 THEN IF KMX + 80 > KX2 AND KMX - 80 < KX2 AND KMY - 75 < KY2 AND KMY + 75 > KY2 THEN CIRCLE (KMX - KX2 + 240, KMY - KY2 + 125), 3, 12
IF KT = 2 THEN IF KMX + 80 > KX1 AND KMX - 80 < KX1 AND KMY - 75 < KY1 AND KMY + 75 > KY1 THEN CIRCLE (KMX - KX1 + 80, KMY - KY1 + 125), 3, 6
IF KT = 2 THEN IF KMX + 80 > KX2 AND KMX - 80 < KX2 AND KMY - 75 < KY2 AND KMY + 75 > KY2 THEN CIRCLE (KMX - KX2 + 240, KMY - KY2 + 125), 3, 6
IF KT = 1 THEN PSET (KMX / 60 + 135, KMY / 60), 12
IF KT = 2 THEN PSET (KMX / 60 + 135, KMY / 60), 6
FOR KB = 0 TO 1 STEP .2
KBX = (KB * OKMX) + ((1 - KB) * KMX)
KBY = (KB * OKMY) + ((1 - KB) * KMY)
IF KT = 1 THEN IF KBX + 25 > KX2 AND KBX - 25 < KX2 AND KBY + 25 > KY2 AND KBY - 25 < KY2 THEN KRA = 5: KH2 = KH2 - KRA / 50 - 5: KP1 = KP1 + KRA / 100: SOUND 200, .1: SOUND 1000, .2
IF KT = 2 THEN IF KBX + 25 > KX1 AND KBX - 25 < KX1 AND KBY + 25 > KY1 AND KBY - 25 < KY1 THEN KRA = 5: KH1 = KH1 - KRA / 50 - 5: KP2 = KP2 + KRA / 100: SOUND 200, .1: SOUND 1000, .2
NEXT KB
KM(KA, 2) = KRA: KM(KA, 3) = KMX: KM(KA, 4) = KMY: KM(KA, 5) = KR: KM(KA, 6) = KD
K4: NEXT KA
LINE (134, -1)-(186, 50), 9, B
LINE (133, -1)-(187, 51), 1, B
LINE (0, 50)-(320, 50), 9
LINE (0, 51)-(320, 51), 1
IF OKX1 + 80 > OKX2 AND OKX1 - 80 < OKX2 AND OKY1 - 75 < OKY2 AND OKY1 + 75 > OKY2 THEN CIRCLE (OKX2 - OKX1 + 80, OKY2 - OKY1 + 125), 10, 0: CIRCLE (OKX1 - OKX2 + 242, OKY1 - OKY2 + 125), 10, 0
IF KX1 + 80 > KX2 AND KX1 - 80 < KX2 AND KY1 - 75 < KY2 AND KY1 + 75 > KY2 THEN CIRCLE (KX2 - KX1 + 80, KY2 - KY1 + 125), 10, 11: CIRCLE (KX1 - KX2 + 242, KY1 - KY2 + 125), 10, 14
PSET (OKX1 / 60 + 135, OKY1 / 60), 0
PSET (KX1 / 60 + 135, KY1 / 60), 14
PSET (OKX2 / 60 + 135, OKY2 / 60), 0
PSET (KX2 / 60 + 135, KY2 / 60), 11
KLN = 2
FOR KA = 1 TO KLN
KR = (160 - ((OKX1 / 160 - INT(OKX1 / 160)) * 160)) / KLN
KD = (150 - ((OKY1 / 150 - INT(OKY1 / 150)) * 150)) / KLN
KAN = (KA - 1) * 160 / KLN
KBN = (KA - 1) * 150 / KLN
LINE (0, KD + 50 + KBN)-(158, KD + 50 + KBN), 0
LINE (KR + KAN, 52)-(KR + KAN, 200), 0
KR = (160 - ((KX1 / 160 - INT(KX1 / 160)) * 160)) / KLN
KD = (150 - ((KY1 / 150 - INT(KY1 / 150)) * 150)) / KLN
KAN = (KA - 1) * 160 / KLN
KBN = (KA - 1) * 150 / KLN
LINE (0, KD + 50 + KBN)-(158, KD + 50 + KBN), 8
LINE (KR + KAN, 52)-(KR + KAN, 200), 8
NEXT KA
FOR KA = 1 TO KLN
KR = (160 - ((OKX2 / 160 - INT(OKX2 / 160)) * 160)) / KLN
KD = (150 - ((OKY2 / 150 - INT(OKY2 / 150)) * 150)) / KLN
KAN = (KA - 1) * 160 / KLN
KBN = (KA - 1) * 150 / KLN
LINE (162, KD + 50 + KBN)-(320, KD + 50 + KBN), 0
LINE (KR + KAN + 160, 52)-(KR + KAN + 160, 200), 0
KR = (160 - ((KX2 / 160 - INT(KX2 / 160)) * 160)) / KLN
KD = (150 - ((KY2 / 150 - INT(KY2 / 150)) * 150)) / KLN
KAN = (KA - 1) * 160 / KLN
KBN = (KA - 1) * 150 / KLN
LINE (162, KD + 50 + KBN)-(320, KD + 50 + KBN), 8
LINE (KR + KAN + 160, 52)-(KR + KAN + 160, 200), 8
NEXT KA
CIRCLE (80, 125), 10, 14
DRAW "TA=" + VARPTR$(OKD1) + "C0U8"
PSET (80, 125), 14
DRAW "TA=" + VARPTR$(KD1) + "C10U8"
CIRCLE (242, 125), 10, 11
DRAW "TA=" + VARPTR$(OKD2) + "C0U8"
PSET (242, 125), 11
DRAW "TA=" + VARPTR$(KD2) + "C10U8"
COLOR 15
LOCATE 1, 1: PRINT "FUEL"; INT(KF1)
LOCATE 2, 1: PRINT "HULL"; INT(KH1)
LOCATE 3, 1: PRINT "SCORE"; INT(KP1)
LOCATE 1, 25: PRINT "FUEL"; INT(KF2)
LOCATE 2, 25: PRINT "HULL"; INT(KH2)
LOCATE 3, 25: PRINT "SCORE"; INT(KP2)
IF KH1 < 0 THEN KH1 = 110: KH2 = 90: KP1 = KP1 - 200: KP2 = KP2 + 500
IF KH2 < 0 THEN KH2 = 110: KH1 = 90: KP2 = KP2 - 200: KP1 = KP1 + 500
IF RT = 1 THEN RT = 0: SCREEN , 0, 0: KEY(0) ON: RETURN ELSE GOTO K1
K2: KG = 0: FOR KA = 1 TO KM / 2: IF KM(KA, 1) = 0 THEN KG = KA
NEXT KA: IF KG > 0 THEN KM(KG, 1) = KT: KM(KG, 2) = KR: KM(KG, 3) = KX: KM(KG, 4) = KY: KM(KG, 5) = (OKX1 - KX1) * 1.5: KM(KG, 6) = (OKY1 - KY1) * 1.5
RETURN
K3: KG = 0: FOR KA = KM / 2 + 1 TO KM: IF KM(KA, 1) = 0 THEN KG = KA
NEXT KA: IF KG > 0 THEN KM(KG, 1) = KT: KM(KG, 2) = KR: KM(KG, 3) = KX: KM(KG, 4) = KY: KM(KG, 5) = (OKX2 - KX2) * 1.5: KM(KG, 6) = (OKY2 - KY2) * 1.5
RETURN
808 RT = 1: RETURN

